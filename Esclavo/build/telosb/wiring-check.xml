<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="28:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f93c804acf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f93c83d4c00"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f93c83d4c00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f93c8335110"/></to>
    </wire>
    <wire loc="29:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f93c8047360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f93c831d0d0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f93c831d0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f93c831bc40"/></to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7f93c803a820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7f74980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7f74980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f93c7f69050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7f93c8037cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7c44260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7c44260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f93c7f69050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="TimerDormir" scoped="" ref="0x7f93c80311c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7c3eb00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7c3eb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f93c7f69050"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f93c7fd3c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f93c6e8cc30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f93c6e8cc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f93c653daa0"/></to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f93c7fc2be0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f93c6e8b8b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f93c6e8b8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f93c653b720"/></to>
    </wire>
    <wire loc="37:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f93c7faf190"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f93c6f32360"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f93c6f32360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f93c7c2a690"/></to>
    </wire>
    <wire loc="38:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f93c7fc3020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f93c6e8c020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f93c6e8c020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f93c653ee60"/></to>
    </wire>
    <wire loc="39:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f93c7fb3840"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c6e80910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f93c6e80910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c6f2f5c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7fa70f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7c23480"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7c23480"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7beb020"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c7003dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c708cb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c70ab750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c70cc080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c721c620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c7311c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c7aa87e0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c66c7020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c77e4020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c7b54510"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c7f64e50"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f93c8335780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f93c887c1e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f93c887c1e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f93c8421140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f93c83341d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c83cf0c0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c83cf0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c83c21a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83348d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f93c83c4130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f93c83c2810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f93c83c0020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f93c83a9900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f93c83a9900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c8390850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f93c83c0700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c83c3640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f93c83c0de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c82f2600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c8390850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c83761c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f93c8387de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f93c8376830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f93c84f7c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f93c8375af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c8420040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f93c841b490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f93c86549a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c82f2600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c831b640"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f93c83121d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f93c831cd80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f93c831cd80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c8075480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f93c83184d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f93c82f4020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f93c82f4020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c805fb20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f93c83177f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f93c82f3380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f93c82f3380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c80581b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c8063610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f93c82868a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f93c82868a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c812fb90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c805dde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f93c8283020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f93c8283020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8129060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c8057480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f93c82818a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f93c82818a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8124540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f93c82d7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81de060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f93c82be710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81a7740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f93c8234d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8197540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f93c8239d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c80f8060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f93c8262d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8192b90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f93c82b9710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c819c060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f93c829f8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8166740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f93c82718a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8103540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f93c825dd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8186540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f93c8249d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8119060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f93c822ad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c80f3540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f93c82d0d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81cd060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f93c825a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8181b90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f93c82cbd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81c3b90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f93c82b1e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c818c060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f93c8297020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8155540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f93c827e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c811fb90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f93c8269020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c80f3540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f93c82dc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81e9740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f93c82c3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81b2d10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f93c82a9710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c817b060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f93c8264580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8197540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f93c8241570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8108060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f93c822c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c80f3540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f93c8250580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8134540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f93c82a4710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8171dc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f93c828b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c813a060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f93c82768a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c810fb90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f93c823ed40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8103540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f93c8258d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8145540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f93c82d5d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81d8540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f93c82bce50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81a2b90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f93c827c8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8119060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f93c82b7e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8197540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f93c829c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8161b90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f93c826e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c80feb90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f93c8253d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c813a060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f93c82df530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8222d10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f93c82c8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81bd060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f93c82ae710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8186540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f93c82958a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8150b90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f93c824ed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c817b060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f93c8246570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8114540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f93c8236570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c80f3540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f93c82908a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8145540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f93c824b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8176540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f93c82dad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81e4b90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f93c82c1e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81ac260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f93c82a7e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8176540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f93c8255580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8140b90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f93c823b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c80feb90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f93c82a1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c816b260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f93c8288020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8134540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f93c8273020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8108060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f93c82d2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81d3b90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f93c8278020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8114540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f93c82cd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81c8540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f93c82b3710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8192b90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f93c829a8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c815a060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f93c826c8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c80f8060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f93c82edd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81ee260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f93c82c6d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c81b8540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f93c82ace50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8181b90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f93c8292020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c814a060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f93c8244d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c810fb90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f93c8231560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c818c060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f93c825f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c818c060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f93c828d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c8140b90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f93c822fd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c80f8060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f93c8227580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c811fb90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f93c82678f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f93c819c060"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f93c7f69050"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f93c7f61c30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f93c7f61c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7c6c8e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c7f64e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c7d1a020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7c6c8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c68b4db0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f93c7f57500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f93c7c5d020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c7d1a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c6aa9b10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f93c7c65020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7ced2f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f93c7ce8850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f93c7d1a870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f93c7d1a870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f93c6aa3890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f93c7c53300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f93c7d938c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f93c7d938c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f93c7d76cf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c6aa9b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c6a8b660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f93c6a9a0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f93c6aa84f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f93c6aa84f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f93c6a8a020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f93c6a9dc00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f93c7d938c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c6a86190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c6a90340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c6a90340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7f27990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c6a85770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c6a8fa80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c6a8fa80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c7f24720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c6a84a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c6a8eda0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c6a8eda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c7f221d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7f27990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f93c7f0e9e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f93c7f0e9e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7eb8260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c7f24720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f93c7f0c280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f93c7f0c280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f93c7e556d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c7f221d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f93c7f0b700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f93c7f0b700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f93c7e54ac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7f27990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f93c7f0e9e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c7f24720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f93c7f06a50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f93c7f06a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f93c7e45220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c7f221d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f93c7f04020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f93c7f04020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f93c7e44610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7f27990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f93c7f0e9e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c7f24720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f93c7f03d40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f93c7f03d40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f93c7e3e6d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c7f221d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f93c7f01160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f93c7f01160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f93c7e3dac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7f27990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f93c7f0e9e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c7f24720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f93c7efe020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f93c7efe020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f93c7e36b30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c7f221d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f93c7efd570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f93c7efd570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f93c7e34020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7f27990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f93c7f0e9e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c7f24720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f93c7efb5a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f93c7efb5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f93c7e2e220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c7f221d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f93c7efaa20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f93c7efaa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f93c7e2d610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7f27990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f93c7f0e9e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c7f24720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f93c7ef88c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f93c7ef88c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f93c7e276d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c7f221d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f93c7ef7d40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f93c7ef7d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f93c7e25ac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f93c7f11730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f93c7e5d220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f93c7f12700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7e63cb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f93c7f00020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7e3c7a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f93c7f18890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f93c7e63020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f93c7ef6ae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7e247a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f93c7f1c0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f93c7eb16d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f93c7f07a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7e4ccb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f93c7f08bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f93c7e4c020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f93c7f09730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f93c7e4eb30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f93c7f0fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7e5b2f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f93c7efc570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7e34cb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f93c7f10bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f93c7e5c610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f93c7f20830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7ebf3e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f93c7f19410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f93c7e65b30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f93c7f13410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7e6b7a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f93c7f04da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7e432f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f93c7f1b570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f93c7e6cac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f93c7ef9890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7e2c2f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f93c7f0a700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7e537a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f93c7ebd2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7ebebf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f93c7ebd940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f93c7e1d3f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f93c7ebc020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f93c7e1db80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7e6a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7ebf3e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f93c7e68c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7ebebf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7e62b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7ebf3e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f93c7e602f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7ebebf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7e5a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7ebf3e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f93c7e597a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7ebebf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f93c7eb6100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7eb7a60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f93c7eb6750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f93c7e1c430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f93c7eb6da0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f93c7e1cbc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7e52610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7eb8260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f93c7e51c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7eb7a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7e4bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7eb8260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f93c7e492f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7eb7a60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7e42160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7eb8260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f93c7e417a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7eb7a60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7e3b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7eb8260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f93c7e3ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7eb7a60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7e33b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7eb8260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f93c7e312f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7eb7a60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7e2b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7eb8260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f93c7e2a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7eb7a60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7e23610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f93c7eb8260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f93c7e22c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f93c7eb7a60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f93c7d580f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f93c7d918e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f93c7d918e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f93c7d8ab80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7d7cc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f93c7f0e9e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f93c7ce49c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f93c68ad3d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f93c7c65020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f93c68a6a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f93c7c60450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f93c68a75d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f93c83c4130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f93c68a5100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f93c7c2a690"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f93c7bfd020"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f93c7bfd020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f93c6ff7b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c7c202c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c6fc08b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f93c7c101d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f93c6fc1ce0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f93c7c24760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f93c6fc2a80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f93c7c297f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f93c6fc6020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f93c7c27880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f93c6fc4df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7beb020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c719d670"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c7c0b130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c7be9080"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c7be9080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c6ff7080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f93c7c28b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c6fc4210"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c7c21020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c7bea020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c7bea020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f93c719a6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f93c7c02430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f93c7be9b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f93c7be9b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f93c6fe2020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f93c7c25020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f93c6fc3470"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f93c7c18170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f93c7bea9d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f93c7bea9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f93c7199a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f93c6fb70f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c7bfc530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f93c6fbf860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f93c7bf5a70"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f93c7bf5a70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f93c7060c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f93c6fbd690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f93c7bed840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f93c7bed840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f93c705fa50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f93c6fb94d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f93c73cbb20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c6fbdce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c719d670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c719d670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c718fd20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c6fbcb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c71990c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c71990c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c718b640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f93c6fbb610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f93c7b5ddc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f93c7b5ddc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f93c7b53970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f93c6fb81f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c7be3330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c7be3330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c7bdc7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f93c6fb7d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f93c831d0d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f93c6ff7b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f93c6ff4d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f93c7199a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f93c7189020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f93c6fe2020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f93c6fe0410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f93c7060c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f93c7055a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c6ff7080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c6ff02d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f93c7bf6690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c70605e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f93c70605e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f93c7055370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f93c719a6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f93c718cc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c7bfc530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c7062be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c7062be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c70577b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f93c7bec940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f93c70618e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f93c70618e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f93c70564d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f93c7bf6d50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f93c705e170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f93c705e170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f93c7053020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f93c705fa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f93c7054840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f93c6ff4d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f93c7be5390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f93c7be5390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f93c7be2e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f93c705d6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f93c70b0220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f93c70b0220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f93c70aea10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f93c70af020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f93c6fe5350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f93c6fe5350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f93c6fe2d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f93c6fe2d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f93c6ffbce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f93c6ffbce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f93c6ff5860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f93c6ff5860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f93c7be5e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f93c7be5e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f93c7bdd990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f93c705d020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c6ff8980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f93c6ff8980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f93c6ff4690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f93c6ff4690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c7093aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f93c7093aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c708fe30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f93c7090950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c7be4b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f93c7be4b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c72217c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f93c72217c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c721a020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c7bdb640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c7b6d950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c7b6d950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c7b54b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f93c7bd3b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f93c7b68bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f93c7b68bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f93c7b50740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f93c7bd0760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f93c73226c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f93c7bd0760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f93c72245c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f93c72245c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f93c721cca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f93c73226c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f93c7310320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f93c7bc82a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f93c731d020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f93c731d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f93c7310bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f93c7bd1060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c731dcb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c731dcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c730f970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7bc6330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c719d670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c7bbe920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c71990c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f93c7bc5420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f93c70d1a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f93c70d1a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f93c70cba20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f93c7bc2110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f93c70d3aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f93c70d3aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f93c77e91d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f93c7bc5bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f93c831d0d0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f93c7bb4b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f93c7bb5ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f93c7bb7c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f93c7b590c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f93c7b4fb40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f93c7b4ca10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f93c7aa5220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f93c7aa5220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f93c7a9faf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f93c7b48c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f93c7a60e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f93c7a60e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a52630"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f93c7b47e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f93c7a5c6a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f93c7a5c6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a41630"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f93c7b450f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f93c7a5ace0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f93c7a5ace0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a36020"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f93c7b3fc00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f93c7a1b400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f93c7a1b400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f93c78ba680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f93c7b2d520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c7457e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c7457e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c78684d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f93c7b2c570"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f93c74537b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f93c74537b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f93c7b2cc80"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f93c7452ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f93c7452ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f93c7b2ed70"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f93c7455ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f93c7455ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c7b2e450"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c7451160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c7451160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7b32420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7449870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7449870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f93c7b32cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f93c7446880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f93c7446880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f93c7b395d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f93c74450a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f93c74450a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c7b35020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c744de50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c744de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c7b358f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c744c670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c744c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f93c7b36e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f93c7436500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f93c7436500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7b364a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7437ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7437ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c7b311e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c744ae50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c744ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f93c7b31a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f93c744ce50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f93c744ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f93c7b303c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f93c744be50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f93c744be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f93c7b29180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c7424a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c7424a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c78684d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f93c7b2b3d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c73f89e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c73f89e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c78684d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f93c7b3b390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f93c73cbb20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f93c7b4c020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f93c73cad20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f93c73cad20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f93c73af310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f93c7b1fca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f93c7b20db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c7aa87e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c7a9f260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c7a9f260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c6850900"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f93c7a9faf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f93c684f180"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c6850900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c6848a10"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f93c684f180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f93c68415f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c6848a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c6829510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f93c683cd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f93c68472a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f93c68472a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f93c6829da0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f93c683e9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f93c7a89080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f93c7a89080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f93c7a84cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c6824020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c68311b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c68311b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7f27990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c6823760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c68308f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c68308f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c7f24720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c6822a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c682fc10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c682fc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c7f221d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f93c7a800f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f93c7d918e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f93c7a5e090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a4cb00"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f93c7a5d390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a46020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f93c7aa6b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a57020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f93c7a5b9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a3caf0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a562f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f93c82d7580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a517a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f93c829f8a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a4bc60"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f93c82dad50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a452f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f93c82df530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a407a0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f93c82958a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a3bc60"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f93c82a1020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a352f0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f93c8297020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f93c7a13700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f93c7a10c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f93c7a15060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f93c78aab70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c79fd760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f93c7f09730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f93c79fca80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f93c7f07a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f93c79fb930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f93c82a1020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f93c78b92f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f93c79e93f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f93c79e93f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f93c79d23f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f93c78a87a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f93c79ec620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f93c79ec620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f93c79d97a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f93c79dc3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f93c79c63f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f93c79e6d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f93c79cfd50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f93c79e33f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f93c79cc3f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f93c79f1bc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f93c79d5d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f93c79dfd50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f93c79c9d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f93c79e8710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f93c79d1710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f93c79db710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f93c79c5710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f93c79e1710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f93c79cb710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f93c79ea020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f93c79d3020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f93c79dd100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f93c79c7100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f93c79e7a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f93c79d0a30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f93c79e4020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f93c79cd020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f93c79f28a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f93c79d6a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f93c79e0a30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f93c79caa30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f93c7453160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7447880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f93c743f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f93c74460a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f93c7431500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f93c7434500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f93c7452490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f93c743a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c7435500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f93c7442880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f93c74430a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7456a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7867350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7867350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c785f660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c7451e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f93c7450490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f93c7439c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f93c7450be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7435ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f93c743a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f93c744b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f93c743b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f93c743f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f93c743b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f93c7433ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f93c7434ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f93c7443880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f93c743e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f93c7436ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f93c7445880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f93c7431ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f93c7455480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f93c744d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f93c744a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f93c74400a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f93c7440880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c74470a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f93c744e2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f93c744d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c74517b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f93c7437500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f93c7433500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f93c74420a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f93c743e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f93c7453e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f93c74440a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f93c744e940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f93c7444880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f93c74390a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f93c74309b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c785d890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c785cba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c785aa30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c78684d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c785e510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78598b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f93c784cb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f93c77ee770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f93c77ee770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f93c77e91d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f93c7858060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c77ccc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c77ccc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c674b940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f93c7855c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f93c77cb8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f93c77cb8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f93c674ad70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f93c784c2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f93c747d020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f93c747d020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f93c6748020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f93c7856a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f93c831d0d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f93c7849bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f93c77e91d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f93c77e4b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f93c6748020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f93c7764850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f93c674ad70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f93c7765110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c674b940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c776ad80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c674a5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c673f020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c673f020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c75e78a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f93c7765110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f93c76e9440"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f93c6749410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f93c7765790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f93c7765790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f93c76e9a50"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f93c775fa40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f93c67487c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c6732760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c77618e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f93c7760690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c6740340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c6740340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c75e85c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f93c775ab40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f93c673ac10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f93c673ac10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f93c75eca80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c77618e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c76eac40"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f93c7764850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f93c76e7700"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c776ad80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c76ebe80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f93c76e6e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f93c775fa40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f93c76e6060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f93c7760690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f93c76e1de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f93c775ab40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f93c76e5490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f93c76d98a0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f93c76d98a0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f93c76d1d00"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f93c76e05a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f93c831d0d0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f93c76dfc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f93c76cf8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f93c76c7290"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f93c76d23b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f93c76c8910"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f93c7699700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f93c8264580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f93c7697e40"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f93c8262d50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f93c7694570"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f93c825f580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f93c7692d40"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f93c825a580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f93c768f570"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f93c825dd50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f93c769e5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f93c753a390"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f93c6739440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f93c75e99a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f93c6739a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f93c75468c0"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f93c75468c0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f93c753a390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f93c673e020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f93c76d98a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c673f7c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c75e5130"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c75e5130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c754f930"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c75e4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c6732760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c75e78a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c7550530"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c7550530"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c66c36c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f93c75eca80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f93c75e25c0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c75e85c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c75516a0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c75516a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c66c4850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f93c75e99a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f93c75d1020"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c754f930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c66c2a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c754e270"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c75e4020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c75cf4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c754f930"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f93c75d1690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f93c76d23b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f93c75d1e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f93c76cf8a0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f93c7550cb0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f93c66c3e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c66c19d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c754e270"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f93c66c12d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f93c754e9f0"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f93c66c02b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f93c66c7630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f93c66bd480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f93c7533250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f93c76d1d00"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f93c752fd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f93c8264580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f93c752c570"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f93c825f580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c7417c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f93c7422da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c741bb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7415670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f93c740ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f93c7415e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f93c74012f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f93c74032f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f93c7420120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f93c7409670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c74042f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f93c741ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f93c7418c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f93c740f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f93c7411e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f93c7414670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7423760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7867350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c741eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f93c741d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f93c7408a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f93c741d870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7404ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c7420dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f93c740ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f93c7418480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c741a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f93c7422750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f93c740be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f93c740d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f93c740a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f93c7402ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f93c7403ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f93c7410670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f93c740de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f93c7406ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f93c7412670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f93c7401ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f93c7422100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f93c741b370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f93c7417480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f93c740fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f93c7414e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f93c740e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7416670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f93c7421450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c7416e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f93c741c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f93c741ccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f93c74062f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7407ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c741e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f93c74072f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f93c74022f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f93c7410e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f93c740b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f93c7421aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f93c7420770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f93c7412e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f93c741c670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f93c7411670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f93c7409e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f93c74007a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c73ebc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f93c73f5da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c73eeb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c73e8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f93c73e1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f93c73e8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f93c73d42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f93c73d72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f93c73f3120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f93c73dd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c73d82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f93c73edc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f93c73ecc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f93c73e2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f93c73e5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f93c73e7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c73f7760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7867350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c73f2aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f93c73f1120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f93c73dba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f93c73f1870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c73d8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c73f3dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f93c73dee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f93c73ec480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c73ed480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f93c73f5750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f93c73dfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f93c73e0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f93c73de670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f93c73d6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f93c73d7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f93c73e4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f93c73e0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f93c73d9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f93c73e6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f93c73d4ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f93c73f5100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f93c73ee370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f93c73eb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f93c73e2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f93c73e7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f93c73e1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f93c73e9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f93c73f4450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c73e9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f93c73ef020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f93c73efcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f93c73d92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f93c73daad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c73f2450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f93c73da2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f93c73d62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f93c73e4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f93c73df670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f93c73f4aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f93c73f3770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f93c73e6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f93c73ef670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f93c73e5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f93c73dde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f93c73d37a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f93c73ac880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f93c73a1020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f93c73a1020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f93c739b140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f93c7397bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f93c73a0c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f93c73a0c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f93c7383150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f93c739a530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f93c732e1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f93c7387540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f93c7388590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f93c7388590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f93c73379e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f93c737d950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f93c7385ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f93c7385ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f93c735ba90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f93c73839f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f93c7387540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f93c734a020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f93c7345530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f93c7345530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f93c7341e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c733d020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f93c7f20830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7336c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f93c82c3580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f93c7319990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f93c730e900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f93c731b150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f93c730d0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f93c730dae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f93c7aa5220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f93c72fa690"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f93c7aa6b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f93c72f49b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f93c7a60e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f93c72f2cd0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f93c7a5b9b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f93c72fba80"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f93c7a13700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f93c72f0020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c7255c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c7255c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c78684d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c72f0d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c72548f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c72548f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7867350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f93c72ed6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f93c72532f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f93c72532f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f93c72edde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f93c7252cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f93c7252cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f93c72ec530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f93c7250370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f93c7250370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c72ecc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c724fd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c724fd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f93c72eee00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f93c7249c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f93c7249c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f93c72ef780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f93c72317a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f93c72317a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c72ee550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c72352f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c72352f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c72eb3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c724a480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c724a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c72ea5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c7247e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c7247e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c72e9020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7246670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7246670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f93c72ebe80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f93c724d7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f93c724d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f93c72e89c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f93c7233ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f93c7233ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f93c72e9890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f93c72342f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f93c72342f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f93c72e8130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f93c7234ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f93c7234ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f93c72e2d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f93c7224df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f93c7224df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f93c721b550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7309d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c719d670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c7308bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c71990c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f93c7302c60"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f93c7198550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f93c7198550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f93c7189a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f93c72f5e80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f93c7190480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f93c7190480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f93c71828b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f93c72e66c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f93c831d0d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c7248c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f93c7252020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c724bc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f93c723fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f93c7246e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f93c72322f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f93c723a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f93c724ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f93c7240670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f93c7242e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f93c7244670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f93c724e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f93c7239a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f93c724eac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7235ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c724f060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f93c723be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f93c7249480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f93c7253940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f93c723ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f93c723d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f93c723b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f93c7241670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f93c723de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f93c7236ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f93c7243670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f93c7232ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f93c724b490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f93c7248480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f93c7240e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f93c7244e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f93c723f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7247670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f93c7252670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f93c724d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f93c724de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f93c72362f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7238ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c724f6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f93c72382f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f93c72332f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f93c7241e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f93c723c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f93c72509c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f93c7243e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f93c7242670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f93c723ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f93c7220020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f93c721a7c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f93c7205150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f93c831d0d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f93c7219020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f93c7a60e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f93c7218380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f93c7a5e090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f93c72176b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f93c7a5d390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f93c7216a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f93c7a15060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f93c72156e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c711fd00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f93c711fd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f93c78684d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f93c7214530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f93c70fcad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f93c70fcad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c7213ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c71196b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c71196b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f93c72133a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f93c7118370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f93c7118370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7212330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c719d670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c72111e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c71990c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f93c720fd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f93c7198550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f93c7211b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f93c7b5ddc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c72093e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c7111e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c7111e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7209cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7110670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7110670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f93c720bb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f93c7117160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f93c7117160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f93c72076d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f93c70fc2f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f93c70fc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f93c7208590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f93c70fe2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f93c70fe2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f93c7208e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f93c70fead0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f93c70fead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7206020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7100ad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7100ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f93c72068b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f93c711d300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f93c711d300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f93c71f99d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f93c7194660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f93c7186af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f93c712c300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f93c7a89080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f93c717f3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f93c712d020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f93c717e6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f93c7f57500"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f93c7127450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f93c7f69050"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c7112c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f93c711c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c7116c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f93c7109e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f93c7110e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f93c711b370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f93c7104670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c71002f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f93c7115c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f93c7113c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f93c710a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f93c710ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f93c710f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c711e970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7867350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c7119d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f93c7103a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f93c7118ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c7119060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f93c7105e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f93c7113480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c7115480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f93c711d950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f93c7106e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f93c7108670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f93c7105670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f93c70fdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f93c710b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f93c7108e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f93c7101ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f93c710e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f93c7116490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f93c7112480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f93c710ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f93c710fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f93c7109670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7111670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f93c711c670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f93c7117e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f93c71012f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7102ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f93c71022f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f93c70fd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f93c710be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f93c7106670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f93c711ccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f93c711b9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f93c710ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f93c71177b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f93c710c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f93c7104e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f93c70fb7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f93c70cf920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f93c70cc940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f93c70d5990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f93c70cc080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f93c70abe60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f93c70af020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f93c70aaae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f93c70ac690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f93c70ac690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f93c77e91d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f93c70a98f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f93c70d1a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c70a8170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c71990c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f93c7090200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f93c708c570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f93c708b3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f93c7090950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c708ba70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c71990c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f93c7053d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f93c705d6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f93c7052b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f93c705d020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c70512f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c719d670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c7050170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c71990c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f93c7050b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f93c7002410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f93c7023db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f93c6ff6800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f93c6ff2580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f93c6ff2580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f93c77e91d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c6fdd1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c7bea020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f93c6f313f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f93c7c297f0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f93c6f2e1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f93c7c27880"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f93c6f2e7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f93c7c24760"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f93c6f2ba20"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f93c7198550"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c6f23890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c7c0b130"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f93c6f2f5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f93c7c28b20"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c6f2cb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c7c21020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f93c6f2d470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f93c7c25020"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f93c6f27af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f93c7194660"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f93c653ee60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f93c65307f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f93c653daa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f93c6f2e7e0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f93c653b720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f93c6f2d470"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f93c6e89020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f93c653ada0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f93c653ada0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c6f2cb20"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f93c652f5f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f93c6ef3930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f93c652e270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f93c6f2d470"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f93c6ef3930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f93c6ea3df0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f93c6ea1400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f93c6f313f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f93c6ea0060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f93c6f2d470"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f93c6e9f720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f93c6f2e7e0"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f93c6e9e480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f93c6e9ec60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f93c6e7f020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f93c6f2e7e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f93c6e7fc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f93c6f2d470"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="8:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c7cde530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.TimerDormir" loc="44(SlaveAppC.TimerDormir):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dd640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f93c83dd9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dd640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f93c83dd9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f93c82211d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f93c8221580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f93c8221930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f93c8221ce0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f93c82200d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f93c7ef1930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f93c7ef1cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f93c7ef00d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f93c7ef0450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f93c7ef07d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f93c7ef0b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f93c7eef020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f93c7eef3b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f93c7eef780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f93c7eb3c80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f93c7eb00d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f93c7dcbcb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f93c7dcbcb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f93c7d8ba40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f93c7d8ba40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f93c7d75570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f93c7d75570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f93c7d75d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f93c7d75d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f93c7d74160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f93c7d74160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f93c7d74940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f93c7d74940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f93c7d74d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f93c7d72540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f93c7d72540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f93c7d986d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f93c7d986d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f93c7d51020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f93c7d51020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f93c7d51410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f93c7d51410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f93c7d51bf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f93c7d51bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f93c7d50020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c7d15cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c7d15cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c7cde530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c7cde530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f93c7cde880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c7cd0980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c7cd0980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f93c7cd0cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c7c5c550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c7c5c550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f93c75ca020" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f93c75bc2f0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f93c75a39f0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c7359020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c7359020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f93c73597b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c73597b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f93c6f1b660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f93c6f10360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f93c6f090d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f93c6eefc80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f93c6e85330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f93c83d2160" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83d2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c83d24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f93c83d4c00" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f93c83d4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f93c83d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c83cf0c0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c83cf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c83cf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f93c83c4130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f93c83c4130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f93c83ce1b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f93c83ce340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f93c83c47d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f93c83c4960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f93c83c4af0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f93c83c4c80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f93c83c4e10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f93c83ce020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f93c83c44b0"/>
        <function-ref name="node_id" scoped="" ref="0x7f93c83c4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f93c83c0700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f93c83c0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c83c0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c83c21a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c83c21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c83c2520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f93c83c0020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f93c83c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c83c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f93c83c0de0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f93c83c0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c83bf180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f93c83c2810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f93c83c2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f93c83c1980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f93c83c1b10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f93c83c1020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f93c83c11b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f93c83c1340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f93c83c14d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f93c83c1660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f93c83c17f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f93c83c2b90"/>
        <function-ref name="node_id" scoped="" ref="0x7f93c83c2d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c83c3640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c83c3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c83c39c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f93c83a9900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f93c83a9900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c83a9c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f93c8387de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f93c8387de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f93c838cc70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f93c838c310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f93c838c4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f93c838c630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f93c838c180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f93c838c7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f93c838c950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f93c838cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c8390850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c8390850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c8390bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f93c8376830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f93c8376830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f93c83757f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f93c8376d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f93c8375020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f93c83751b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f93c8376bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f93c8375340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f93c83754d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f93c8375660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f93c8375af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f93c8375af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f93c8375e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c83761c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c83761c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c8376540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f93c84f7c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f93c84f7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f93c86d20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f93c86549a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f93c86549a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f93c8654d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f93c876f020"/>
        <function-ref name="sleep" scoped="" ref="0x7f93c876f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f93c85953d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f93c85953d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f93c8595750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f93c838e8b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f93c838e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f93c83417f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f93c838edc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f93c8341020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f93c83411b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f93c838ec30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f93c8341340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f93c83414d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f93c8341660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f93c83348d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f93c83348d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c8334c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f93c8335110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f93c8335110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f93c8335490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f93c83341d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f93c83341d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c8334550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f93c8335780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f93c8335780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c8335b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f93c8335c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f93c8335e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f93c886f940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f93c886f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c886fcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c886fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f93c887c1e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f93c887c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c887c560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f93c887c6f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f93c887c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f93c8420040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f93c8420040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c84203c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c8420550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f93c841b490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f93c841b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f93c841b810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f93c841b9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f93c841bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f93c8421140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f93c8421140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c84214c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f93c8421650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f93c84217e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f93c831d0d0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c831d0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c831d450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c831d5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c831d770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c831d900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c831da90"/>
        <function-ref name="get" scoped="" ref="0x7f93c831dc20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c831ddb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c83284d0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8328020"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c83281b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c8328340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f93c83121d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f93c83121d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8312550"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c83126e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8312870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8312a00"/>
        <function-ref name="get" scoped="" ref="0x7f93c8312b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8312d20"/>
        <function-ref name="set" scoped="" ref="0x7f93c8318020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c83181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c831b640" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c831b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c831b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f93c83184d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f93c83184d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8318850"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c83189e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8318b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8318d00"/>
        <function-ref name="get" scoped="" ref="0x7f93c8317020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c83171b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8317340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c83174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f93c831bc40" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c831bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c831a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c831a1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c831a340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c831a4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c831a660"/>
        <function-ref name="get" scoped="" ref="0x7f93c831a7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c831a980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c8319020"/>
        <function-ref name="set" scoped="" ref="0x7f93c831ab10"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c831aca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c831ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f93c83177f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f93c83177f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8317b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8317d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8311020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c83111b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8311340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c83114d0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8311660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c83117f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f93c831cd80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f93c831cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82f5180"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82f5310"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82f54a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82f5630"/>
        <function-ref name="get" scoped="" ref="0x7f93c82f57c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82f5950"/>
        <function-ref name="set" scoped="" ref="0x7f93c82f5ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82f5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f93c82f4020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f93c82f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82f43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82f4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82f46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82f4850"/>
        <function-ref name="get" scoped="" ref="0x7f93c82f49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82f4b70"/>
        <function-ref name="set" scoped="" ref="0x7f93c82f4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82f3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f93c82f2600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c82f2600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c82f2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f93c82f3380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f93c82f3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82f3700"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82f3890"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82f3a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82f3bb0"/>
        <function-ref name="get" scoped="" ref="0x7f93c82f3d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82f2020"/>
        <function-ref name="set" scoped="" ref="0x7f93c82f21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f93c82d7580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f93c82d7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82d7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82d7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82d7c20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82d5980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82d61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82d6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82d6660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82d67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82d6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82d6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82d6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82d5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82d51b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82d5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82d54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82d7db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82d5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82d57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f93c82be710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f93c82be710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82bea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82bec20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82bedb0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82bca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82bd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82bd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82bd4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82bd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82bd7f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c82bd980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82bdb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82bdca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82bde30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82bc120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82bc2b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82bc440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82bc5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82bd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82bc760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82bc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f93c8234d30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f93c8234d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82330e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8233270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8233400"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82311b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8233720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82338b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8233a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8233bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8233d60"/>
        <function-ref name="get" scoped="" ref="0x7f93c8232020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82321b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8232340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82324d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8232760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82328f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8232a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8232c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8233590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8232da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8231020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f93c8239d40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f93c8239d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82380e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8238270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8238400"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82361b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8238720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82388b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8238a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8238bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8238d60"/>
        <function-ref name="get" scoped="" ref="0x7f93c8237020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82371b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8237340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82374d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8237760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82378f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8237a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8237c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8238590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8237da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8236020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f93c8262d50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f93c8262d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8261100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8261290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8261420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c825f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8261740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82618d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8261a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8261bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8261d80"/>
        <function-ref name="get" scoped="" ref="0x7f93c8260020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82601b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8260340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82604d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8260760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82608f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8260a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8260c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82615b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8260da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c825f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f93c82b9710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f93c82b9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82b9a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82b9c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82b9db0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82b7a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82b81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82b8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82b84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82b8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82b87f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c82b8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82b8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82b8ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82b8e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82b7120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82b72b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82b7440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82b75d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82b8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82b7760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f93c829f8a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f93c829f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c829fc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c829fdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c829e020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c829dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c829e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c829e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c829e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c829e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c829e980"/>
        <function-ref name="get" scoped="" ref="0x7f93c829eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c829eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c829ee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c829d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c829d2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c829d440"/>
        <function-ref name="set" scoped="" ref="0x7f93c829d5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c829d760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c829e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c829d8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c829da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f93c82868a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f93c82868a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8286c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8286db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8285020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8284c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8285340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82854d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8285660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82857f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8285980"/>
        <function-ref name="get" scoped="" ref="0x7f93c8285b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8285ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8285e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8284020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82842b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8284440"/>
        <function-ref name="set" scoped="" ref="0x7f93c82845d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8284760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82851b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82848f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8284a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f93c82718a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f93c82718a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8271c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8271db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8270020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c826fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8270340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82704d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8270660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82707f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8270980"/>
        <function-ref name="get" scoped="" ref="0x7f93c8270b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8270ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8270e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c826f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c826f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c826f440"/>
        <function-ref name="set" scoped="" ref="0x7f93c826f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c826f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82701b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c826f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c826fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f93c825dd50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f93c825dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c825c100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c825c290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c825c420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c825a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c825c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c825c8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c825ca60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c825cbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c825cd80"/>
        <function-ref name="get" scoped="" ref="0x7f93c825b020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c825b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c825b340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c825b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c825b760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c825b8f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c825ba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c825bc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c825c5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c825bda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c825a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f93c8249d40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f93c8249d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82480e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8248270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8248400"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82461b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8248720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82488b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8248a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8248bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8248d60"/>
        <function-ref name="get" scoped="" ref="0x7f93c8247020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82471b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8247340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82474d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8247760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82478f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8247a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8247c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8248590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8247da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8246020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f93c822ad50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f93c822ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8229100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8229290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8229420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82271b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8229740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82298d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8229a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8229bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8229d80"/>
        <function-ref name="get" scoped="" ref="0x7f93c8228020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82281b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8228340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82284d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8228760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82288f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8228a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8228c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82295b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8228da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8227020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f93c82d0d50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f93c82d0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82cf100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82cf290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82cf420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82cd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82cf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82cf8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82cfa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82cfbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82cfd80"/>
        <function-ref name="get" scoped="" ref="0x7f93c82ce020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82ce1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82ce340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82ce4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82ce760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82ce8f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82cea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82cec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82cf5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82ceda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f93c825a580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f93c825a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c825a900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c825aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c825ac20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8258980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8259020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82591b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8259340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8259660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82597f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8259980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8259b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8259ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8258020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82581b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8258340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82584d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c825adb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8258660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f93c82cbd50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f93c82cbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82ca100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82ca290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82ca420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82c81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82ca740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82ca8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82caa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82cabf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82cad80"/>
        <function-ref name="get" scoped="" ref="0x7f93c82c9020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82c91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82c9340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82c94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82c9760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82c98f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82c9a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82c9c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82ca5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82c9da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f93c82b1e50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f93c82b1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82b0210"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82b03a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82b0530"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82ae340"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82b0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82b09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82b0b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82b0d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82af020"/>
        <function-ref name="get" scoped="" ref="0x7f93c82af1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82af340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82af4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82af660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82af8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82afa80"/>
        <function-ref name="set" scoped="" ref="0x7f93c82afc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82afda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82b06c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82ae020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f93c8297020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f93c8297020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82973a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8297530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82976c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82954d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82979e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8297b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8297d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8296020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82961b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8296340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82964d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8296660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82967f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8296a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8296c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8296da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8295020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8297850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82951b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8295340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f93c827e020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f93c827e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c827e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c827e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c827e6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c827c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c827e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c827eb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c827ed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c827d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c827d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c827d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c827d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c827d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c827d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c827da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c827dc10"/>
        <function-ref name="set" scoped="" ref="0x7f93c827dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c827c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c827e850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c827c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c827c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f93c8269020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f93c8269020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82693a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8269530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82696c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82674d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82699e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8269b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8269d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8268020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82681b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8268340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82684d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8268660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82687f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8268a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8268c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8268da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8267020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8269850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82671b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8267340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f93c82dc580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f93c82dc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82dc900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82dca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82dcc20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82da980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82db020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82db1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82db340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82db4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82db660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82db7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82db980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82dbb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82dbca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82da020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82da1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82da340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82da4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82dcdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82da660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82da7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f93c82c3580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f93c82c3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82c3a00"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82c3b90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82c3d20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82c1a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82c2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82c24d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82c2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82c27f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c82c2980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82c2b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82c2ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82c2e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82c1120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82c12b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82c1440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82c15d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82c2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82c1760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f93c82a9710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f93c82a9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82a9a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82a9c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82a9db0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82a7a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82a81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82a8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82a84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82a8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82a87f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c82a8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82a8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82a8ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82a8e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82a7120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82a72b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82a7440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82a75d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82a8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82a7760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82a78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f93c8264580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f93c8264580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8264900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8264a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8264c20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8262980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8263020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82631b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8263340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8263660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82637f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8263980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8263b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8263ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8262020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82621b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8262340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82624d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8264db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8262660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82627f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f93c8241570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f93c8241570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82418f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8241a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8241c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c823e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c823f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c823f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c823f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c823f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c823f660"/>
        <function-ref name="get" scoped="" ref="0x7f93c823f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c823f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c823fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c823fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c823e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c823e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c823e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c823e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8241da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c823e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c823e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f93c822c570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f93c822c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c822c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c822ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c822cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c822a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c822b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c822b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c822b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c822b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c822b660"/>
        <function-ref name="get" scoped="" ref="0x7f93c822b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c822b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c822bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c822bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c822a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c822a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c822a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c822a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c822cda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c822a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c822a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f93c8250580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f93c8250580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8250900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8250a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8250c20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c824e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c824f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c824f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c824f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c824f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c824f660"/>
        <function-ref name="get" scoped="" ref="0x7f93c824f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c824f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c824fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c824fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c824e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c824e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c824e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c824e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8250db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c824e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c824e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f93c82a4710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f93c82a4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82a4c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82a4e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82a3020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82a2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82a3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82a34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82a3660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82a37f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82a3980"/>
        <function-ref name="get" scoped="" ref="0x7f93c82a3b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82a3ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82a3e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82a2020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82a22b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82a2440"/>
        <function-ref name="set" scoped="" ref="0x7f93c82a25d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82a2760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82a31b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82a28f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82a2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f93c828b8a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f93c828b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c828bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c828bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c828a020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8289c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c828a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c828a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c828a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c828a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c828a980"/>
        <function-ref name="get" scoped="" ref="0x7f93c828ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c828aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c828ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8289020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82892b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8289440"/>
        <function-ref name="set" scoped="" ref="0x7f93c82895d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8289760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c828a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82898f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8289a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f93c82768a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f93c82768a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8276c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8276db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8275020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8274c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8275340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82754d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8275660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82757f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8275980"/>
        <function-ref name="get" scoped="" ref="0x7f93c8275b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8275ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8275e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8274020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82742b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8274440"/>
        <function-ref name="set" scoped="" ref="0x7f93c82745d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8274760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82751b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82748f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8274a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f93c823ed40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f93c823ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c823d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c823d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c823d400"/>
        <function-ref name="clr" scoped="" ref="0x7f93c823b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c823d720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c823d8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c823da40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c823dbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c823dd60"/>
        <function-ref name="get" scoped="" ref="0x7f93c823c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c823c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c823c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c823c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c823c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c823c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c823ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c823cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c823d590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c823cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c823b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f93c8258d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f93c8258d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82570e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8257270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8257400"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82551b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8257720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82578b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8257a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8257bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8257d60"/>
        <function-ref name="get" scoped="" ref="0x7f93c8256020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82561b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8256340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82564d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8256760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82568f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8256a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8256c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8257590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8256da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8255020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f93c82d5d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f93c82d5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82d4100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82d4290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82d4420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82d21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82d4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82d48d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82d4a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82d4bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82d4d80"/>
        <function-ref name="get" scoped="" ref="0x7f93c82d3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82d31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82d3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82d34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82d3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82d38f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82d3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82d3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82d45b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82d3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f93c82bce50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f93c82bce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82bb210"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82bb3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82bb530"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82b9340"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82bb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82bb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82bbb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82bbd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82ba020"/>
        <function-ref name="get" scoped="" ref="0x7f93c82ba1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82ba340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82ba4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82ba660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82ba8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82baa80"/>
        <function-ref name="set" scoped="" ref="0x7f93c82bac10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82bada0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82bb6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82b9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f93c827c8a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f93c827c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c827cc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c827cdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c827a020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8279c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c827a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c827a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c827a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c827a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c827a980"/>
        <function-ref name="get" scoped="" ref="0x7f93c827ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c827aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c827ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8279020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82792b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8279440"/>
        <function-ref name="set" scoped="" ref="0x7f93c82795d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8279760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c827a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82798f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8279a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f93c82b7e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f93c82b7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82b5210"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82b53a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82b5530"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82b3340"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82b5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82b59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82b5b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82b5d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82b4020"/>
        <function-ref name="get" scoped="" ref="0x7f93c82b41b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82b4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82b44d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82b4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82b48f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82b4a80"/>
        <function-ref name="set" scoped="" ref="0x7f93c82b4c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82b4da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82b56c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82b3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f93c829c020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f93c829c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c829c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c829c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c829c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c829a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c829c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c829cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c829cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c829b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c829b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c829b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c829b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c829b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c829b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c829ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c829bc10"/>
        <function-ref name="set" scoped="" ref="0x7f93c829bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c829a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c829c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c829a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c829a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f93c8283020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f93c8283020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82833a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8283530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82836c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82814d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82839e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8283b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8283d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8282020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82821b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8282340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82824d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8282660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82827f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8282a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8282c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8282da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8281020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8283850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82811b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8281340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f93c826e020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f93c826e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c826e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c826e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c826e6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c826c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c826e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c826eb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c826ed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c826d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c826d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c826d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c826d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c826d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c826d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c826da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c826dc10"/>
        <function-ref name="set" scoped="" ref="0x7f93c826dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c826c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c826e850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c826c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c826c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f93c8253d50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f93c8253d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8252100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8252290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8252420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8252740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82528d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8252a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8252bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8252d80"/>
        <function-ref name="get" scoped="" ref="0x7f93c8251020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82511b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8251340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82514d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8251760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82518f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8251a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8251c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82525b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8251da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8250020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f93c82df530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f93c82df530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82df8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82dfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82dfbd0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82ed980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82ee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82ee340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82ee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82ee660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82ee7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82ee980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82eeb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82eeca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82ed020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82ed1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82ed340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82ed4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82dfd60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82ed660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f93c82c8580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f93c82c8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82c8900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82c8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82c8c20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82c6980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82c7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82c71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82c7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82c74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82c7660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82c77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82c7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82c7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82c7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82c6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82c61b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82c6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82c64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82c8db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82c6660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f93c82ae710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f93c82ae710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82aea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82aec20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82aedb0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82aca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82ad340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82ad4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82ad660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82ad7f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c82ad980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82adb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82adca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82ade30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82ac120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82ac2b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82ac440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82ac5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82ad020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82ac760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f93c82958a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f93c82958a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8295c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8295db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8294020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8293c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8294340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82944d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8294660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82947f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8294980"/>
        <function-ref name="get" scoped="" ref="0x7f93c8294b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8294ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8294e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8293020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82932b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8293440"/>
        <function-ref name="set" scoped="" ref="0x7f93c82935d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8293760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82941b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82938f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8293a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f93c824ed50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f93c824ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c824d100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c824d290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c824d420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c824b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c824d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c824d8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c824da60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c824dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c824dd80"/>
        <function-ref name="get" scoped="" ref="0x7f93c824c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c824c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c824c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c824c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c824c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c824c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c824ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c824cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c824d5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c824cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c824b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f93c8246570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f93c8246570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82468f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8246a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8246c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8244980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8245020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8245340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8245660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82457f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8245980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8245b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8245ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8244020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82441b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8244340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82444d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8246da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8244660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f93c8236570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f93c8236570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82368f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8236a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8236c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8234980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8235020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82351b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8235340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8235660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82357f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8235980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8235b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8235ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8234020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82341b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8234340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82344d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8236da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8234660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82347f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f93c82908a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f93c82908a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8290c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8290db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c828f020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c828ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c828f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c828f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c828f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c828f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c828f980"/>
        <function-ref name="get" scoped="" ref="0x7f93c828fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c828fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c828fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c828e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c828e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c828e440"/>
        <function-ref name="set" scoped="" ref="0x7f93c828e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c828e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c828f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c828e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c828ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f93c824b580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f93c824b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c824b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c824ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c824bc20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8249980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c824a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c824a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c824a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c824a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c824a660"/>
        <function-ref name="get" scoped="" ref="0x7f93c824a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c824a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c824ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c824aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8249020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82491b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8249340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82494d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c824bdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8249660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f93c82dad50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f93c82dad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82d9100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82d9290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82d9420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82d71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82d9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82d98d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82d9a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82d9bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82d9d80"/>
        <function-ref name="get" scoped="" ref="0x7f93c82d8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82d81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82d8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82d84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82d8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82d88f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82d8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82d8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82d95b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82d8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f93c82c1e50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f93c82c1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82c0210"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82c03a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82c0530"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82be340"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82c0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82c09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82c0b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82c0d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82bf020"/>
        <function-ref name="get" scoped="" ref="0x7f93c82bf1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82bf340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82bf4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82bf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82bf8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82bfa80"/>
        <function-ref name="set" scoped="" ref="0x7f93c82bfc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82bfda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82c06c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82be020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f93c82a7e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f93c82a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82a6210"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82a63a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82a6530"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82a4340"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82a6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82a69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82a6b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82a6d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82a5020"/>
        <function-ref name="get" scoped="" ref="0x7f93c82a51b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82a5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82a54d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82a5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82a58f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82a5a80"/>
        <function-ref name="set" scoped="" ref="0x7f93c82a5c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82a5da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82a66c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82a4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f93c8255580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f93c8255580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8255900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8255a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8255c20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8253980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8254020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8254340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8254660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82547f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8254980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8254b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8254ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8253020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82531b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8253340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82534d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8255db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8253660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f93c823b570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f93c823b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c823b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c823ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c823bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8239980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c823a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c823a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c823a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c823a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c823a660"/>
        <function-ref name="get" scoped="" ref="0x7f93c823a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c823a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c823ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c823aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8239020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82391b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8239340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82394d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c823bda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8239660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82397f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f93c82a1020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f93c82a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82a13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82a1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82a16c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c829f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82a19e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82a1b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82a1d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82a0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82a01b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c82a0340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82a04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82a0660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82a07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82a0a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82a0c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c82a0da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c829f020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82a1850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c829f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c829f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f93c8288020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f93c8288020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82883a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8288530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82886c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82864d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82889e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8288b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8288d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8287020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82871b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8287340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82874d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8287660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82877f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8287a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8287c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8287da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8286020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8288850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82861b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8286340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f93c8273020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f93c8273020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82733a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8273530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82736c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82714d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82739e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8273b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8273d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8272020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82721b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8272340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82724d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8272660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82727f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8272a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8272c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8272da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8271020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8273850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82711b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8271340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f93c82d2580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f93c82d2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82d2900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82d2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82d2c20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82d0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82d1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82d1660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82d17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82d1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82d1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82d1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82d0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82d01b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82d0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82d04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82d2db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82d0660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82d07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f93c8278020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f93c8278020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82783a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8278530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82786c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82764d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82789e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8278b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8278d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8277020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82771b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8277340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82774d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8277660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82777f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8277a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8277c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8277da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8276020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8278850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82761b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8276340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f93c82cd580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f93c82cd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82cd900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82cda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82cdc20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82cb980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82cc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82cc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82cc340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82cc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82cc660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82cc7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82cc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82ccb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82ccca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82cb020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82cb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82cb340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82cb4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82cddb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82cb660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82cb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f93c82b3710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f93c82b3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82b3a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82b3c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82b3db0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82b1a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82b21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82b2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82b24d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82b2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82b27f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c82b2980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82b2b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82b2ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82b2e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82b1120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82b12b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82b1440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82b15d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82b2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82b1760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f93c829a8a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f93c829a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c829ac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c829adb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8299020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8298c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8299340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82994d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8299660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82997f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8299980"/>
        <function-ref name="get" scoped="" ref="0x7f93c8299b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8299ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8299e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8298020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82982b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8298440"/>
        <function-ref name="set" scoped="" ref="0x7f93c82985d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8298760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82991b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82988f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8298a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f93c82818a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f93c82818a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8281c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8281db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8280020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c827fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8280340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82804d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8280660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82807f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8280980"/>
        <function-ref name="get" scoped="" ref="0x7f93c8280b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8280ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8280e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c827f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c827f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c827f440"/>
        <function-ref name="set" scoped="" ref="0x7f93c827f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c827f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82801b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c827f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c827fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f93c826c8a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f93c826c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c826cc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c826cdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c826b020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c826ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c826b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c826b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c826b660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c826b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c826b980"/>
        <function-ref name="get" scoped="" ref="0x7f93c826bb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c826bca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c826be30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c826a020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c826a2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c826a440"/>
        <function-ref name="set" scoped="" ref="0x7f93c826a5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c826a760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c826b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c826a8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c826aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f93c82edd50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f93c82edd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82de100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82de290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82de420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82dc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82de740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82de8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82dea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82debf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82ded80"/>
        <function-ref name="get" scoped="" ref="0x7f93c82dd020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82dd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82dd340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82dd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82dd760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82dd8f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82dda80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82ddc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82de5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82ddda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f93c82c6d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f93c82c6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82c5100"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82c5290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82c5420"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82c31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82c5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82c58d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82c5a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82c5bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82c5d80"/>
        <function-ref name="get" scoped="" ref="0x7f93c82c4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82c41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82c4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82c44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82c4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82c48f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c82c4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82c4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82c55b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82c4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f93c82ace50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f93c82ace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82ab210"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c82ab3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82ab530"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82a9340"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82ab850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82ab9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c82abb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82abd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82aa020"/>
        <function-ref name="get" scoped="" ref="0x7f93c82aa1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82aa340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c82aa4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82aa660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c82aa8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82aaa80"/>
        <function-ref name="set" scoped="" ref="0x7f93c82aac10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82aada0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c82ab6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82a9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f93c8292020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f93c8292020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8292530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82926c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82904d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82929e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8292b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8292d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8291020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c82911b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8291340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82914d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8291660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82917f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8291a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8291c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8291da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8290020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8292850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c82901b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8290340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f93c8244d40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f93c8244d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82430e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8243270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8243400"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82411b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8243720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82438b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8243a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8243bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8243d60"/>
        <function-ref name="get" scoped="" ref="0x7f93c8242020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82421b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8242340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82424d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8242760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82428f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8242a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8242c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8243590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8242da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8241020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f93c8231560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f93c8231560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82318e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8231a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8231c00"/>
        <function-ref name="clr" scoped="" ref="0x7f93c822f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8230020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82301b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8230340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8230660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82307f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8230980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8230b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8230ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c822f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c822f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c822f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c822f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8231d90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c822f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c822f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f93c825f580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f93c825f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c825f900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c825fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c825fc20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c825d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c825e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c825e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c825e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c825e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c825e660"/>
        <function-ref name="get" scoped="" ref="0x7f93c825e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c825e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c825eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c825eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c825d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c825d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c825d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c825d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c825fdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c825d660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c825d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f93c828d020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f93c828d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c828d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c828d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c828d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c828b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c828d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c828db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c828dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c828c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c828c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c828c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c828c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c828c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c828c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c828ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c828cc10"/>
        <function-ref name="set" scoped="" ref="0x7f93c828cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c828b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c828d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c828b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c828b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f93c822fd40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f93c822fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c822e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c822e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c822e400"/>
        <function-ref name="clr" scoped="" ref="0x7f93c822c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c822e720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c822e8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c822ea40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c822ebd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c822ed60"/>
        <function-ref name="get" scoped="" ref="0x7f93c822d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c822d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c822d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c822d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c822d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c822d8f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c822da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c822dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c822e590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c822dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c822c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f93c8227580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f93c8227580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8227900"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8227a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8227c20"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8225980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8226020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c82261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8226340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c82264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8226660"/>
        <function-ref name="get" scoped="" ref="0x7f93c82267f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8226980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8226b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8226ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8225020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82251b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8225340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c82254d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8227db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8225660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c82257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f93c82678f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f93c82678f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c82660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8266230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c82663c0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c82641b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c82666e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8266870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8266a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8266b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8266d20"/>
        <function-ref name="get" scoped="" ref="0x7f93c8265020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c82651b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8265340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c82654d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8265760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c82658f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8265a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8265c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8266550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8265da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8264020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8222d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8222d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81f30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81f3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81f3400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81f11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81f3720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81f38b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81f3a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81f3bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81f3d60"/>
        <function-ref name="get" scoped="" ref="0x7f93c81f2020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81f21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81f2340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81f24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81f2760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81f28f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c81f2a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81f2c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81f2da0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81f3590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81ee260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81ee260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81ee5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81ee770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81ee900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81ec660"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81eec20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81eedb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81ed020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81ed1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81ed340"/>
        <function-ref name="get" scoped="" ref="0x7f93c81ed4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81ed660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81ed7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81ed980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81edc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81edda0"/>
        <function-ref name="set" scoped="" ref="0x7f93c81ec020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81ec1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81ec340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81eea90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81e9740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81e9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81e9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81e9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81e9de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81e7a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81e81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81e8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81e84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81e8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81e87f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c81e8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81e8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81e8ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81e8e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81e7120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81e72b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c81e7440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81e75d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81e7760"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81e8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81e78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81e4b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81e4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81e3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81e31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81e3340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81e1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81e3660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81e37f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81e3980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81e3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81e3ca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c81e3e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81e2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81e21b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81e2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81e25d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81e2760"/>
        <function-ref name="set" scoped="" ref="0x7f93c81e28f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81e2a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81e2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81e34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81e2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81de060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81de060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81de3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81de570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81de700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81db4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81dea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81debb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81ded40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81dc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81dc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c81dc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81dc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81dc660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81dc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81dca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81dcc10"/>
        <function-ref name="set" scoped="" ref="0x7f93c81dcda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81db020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81db1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81de890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81d8540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81d8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81d88c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81d8a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81d8be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81d6980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81d7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81d74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81d7660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81d77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81d7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81d7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81d7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81d6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81d61b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c81d6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81d64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81d6660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81d8d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81d3b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81d3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81d2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81d21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81d2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81d0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81d2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81d27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81d2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81d2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81d2ca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c81d2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81d1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81d11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81d1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81d15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81d1760"/>
        <function-ref name="set" scoped="" ref="0x7f93c81d18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81d1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81d1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81d24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81d1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81cd060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81cd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81cd3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81cd570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81cd700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81cb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81cda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81cdbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81cdd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81cc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81cc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c81cc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81cc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81cc660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81cc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81cca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81ccc10"/>
        <function-ref name="set" scoped="" ref="0x7f93c81ccda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81cb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81cb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81cd890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81c8540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81c8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81c88c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81c8a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81c8be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81c6980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81c7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81c71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81c7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81c74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81c7660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81c77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81c7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81c7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81c7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81c6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81c61b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c81c6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81c64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81c6660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81c8d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81c3b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81c3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81c2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81c21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81c2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81c0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81c2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81c27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81c2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81c2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81c2ca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c81c2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81c1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81c11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81c1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81c15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81c1760"/>
        <function-ref name="set" scoped="" ref="0x7f93c81c18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81c1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81c1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81c24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81bd060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81bd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81bd3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81bd570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81bd700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81bb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81bda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81bdbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81bdd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81bc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81bc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c81bc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81bc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81bc660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81bc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81bca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81bcc10"/>
        <function-ref name="set" scoped="" ref="0x7f93c81bcda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81bb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81bb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81bd890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81b8540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81b8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81b88c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81b8a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81b8be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81b6980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81b7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81b71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81b7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81b74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81b7660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81b77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81b7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81b7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81b7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81b6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81b61b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c81b6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81b64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81b6660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81b8d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81b67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81b2d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81b2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81b10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81b1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81b1400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81af1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81b1720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81b18b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81b1a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81b1bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81b1d60"/>
        <function-ref name="get" scoped="" ref="0x7f93c81b0020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81b01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81b0340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81b04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81b0760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81b08f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c81b0a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81b0c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81b0da0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81b1590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81ac260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81ac260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81ac5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81ac770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81ac900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81aa660"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81acc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81acdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81ab020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81ab340"/>
        <function-ref name="get" scoped="" ref="0x7f93c81ab4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81ab660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81ab7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81ab980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81abc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81abda0"/>
        <function-ref name="set" scoped="" ref="0x7f93c81aa020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81aa1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81aa340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81aca90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81a7740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81a7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81a7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81a7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81a7de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81a5a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81a61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81a6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81a64d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81a6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81a67f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c81a6980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81a6b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81a6ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81a6e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81a5120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81a52b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c81a5440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81a55d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81a5760"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81a6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81a58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c81a2b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c81a2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81a1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81a11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81a1340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c819f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81a1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81a17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81a1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81a1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81a1ca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c81a1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81a0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81a01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81a0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81a05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81a0760"/>
        <function-ref name="set" scoped="" ref="0x7f93c81a08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81a0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81a0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81a14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81a0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c819c060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c819c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c819c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c819c570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c819c700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c819a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c819ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c819cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c819cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c819b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c819b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c819b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c819b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c819b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c819b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c819ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c819bc10"/>
        <function-ref name="set" scoped="" ref="0x7f93c819bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c819a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c819a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c819c890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c819a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8197540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8197540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81978c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8197a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8197be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8195980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8196020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81961b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8196340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8196660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81967f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8196980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8196b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8196ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8195020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81951b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8195340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81954d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8195660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8197d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8192b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8192b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8191020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81911b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8191340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c818f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8191660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81917f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8191980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8191b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8191ca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8191e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8190020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c81901b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8190340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c81905d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8190760"/>
        <function-ref name="set" scoped="" ref="0x7f93c81908f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8190a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8190c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81914d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8190da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c818c060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c818c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c818c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c818c570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c818c700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81894d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c818ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c818cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c818cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c818a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c818a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c818a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c818a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c818a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c818a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c818aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c818ac10"/>
        <function-ref name="set" scoped="" ref="0x7f93c818ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8189020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81891b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c818c890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8189340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8186540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8186540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81868c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8186a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8186be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8184980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8185020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81851b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8185340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8185660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81857f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8185980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8185b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8185ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8184020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81841b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8184340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81844d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8184660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8186d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8181b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8181b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8180020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c81801b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8180340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c817e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8180660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81807f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8180980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8180b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8180ca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8180e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c817f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c817f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c817f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c817f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c817f760"/>
        <function-ref name="set" scoped="" ref="0x7f93c817f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c817fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c817fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c81804d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c817fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c817b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c817b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c817b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c817b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c817b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81794d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c817ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c817bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c817bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c817a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c817a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c817a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c817a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c817a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c817a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c817aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c817ac10"/>
        <function-ref name="set" scoped="" ref="0x7f93c817ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8179020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81791b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c817b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8179340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8176540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8176540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81768c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8176a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8176be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8174980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8175020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81751b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8175340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8175660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81757f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8175980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8175b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8175ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8174020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81741b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8174340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81744d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8174660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8176d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81747f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8171dc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8171dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8170180"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8170310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c81704a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c816e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81707c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8170950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8170ae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8170c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8170e00"/>
        <function-ref name="get" scoped="" ref="0x7f93c816f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c816f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c816f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c816f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c816f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c816f8f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c816fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c816fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c816fda0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8170630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c816e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c816b260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c816b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c816b5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c816b770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c816b900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8169660"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c816bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c816bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c816a020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c816a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c816a340"/>
        <function-ref name="get" scoped="" ref="0x7f93c816a4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c816a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c816a7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c816a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c816ac10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c816ada0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8169020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81691b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8169340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c816ba90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8166740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8166740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8166ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8166c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8166de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8164a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c81651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8165340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c81654d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8165660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81657f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8165980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8165b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8165ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8165e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8164120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81642b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8164440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81645d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8164760"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8165020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8161b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8161b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c815f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c815f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c815f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c815d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c815f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c815f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c815f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c815fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c815fca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c815fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c815e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c815e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c815e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c815e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c815e760"/>
        <function-ref name="set" scoped="" ref="0x7f93c815e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c815ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c815ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c815f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c815eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c815a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c815a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c815a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c815a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c815a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81584d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c815aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c815abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c815ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8159020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81591b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8159340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81594d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8159660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8159a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8159c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8159da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8158020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81581b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c815a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8158340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8155540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8155540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81558c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8155a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8155be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8153980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8154020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8154340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8154660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81547f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8154980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8154b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8154ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8153020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81531b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8153340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81534d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8153660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8155d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8150b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8150b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c814f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c814f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c814f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c814d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c814f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c814f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c814f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c814fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c814fca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c814fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c814e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c814e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c814e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c814e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c814e760"/>
        <function-ref name="set" scoped="" ref="0x7f93c814e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c814ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c814ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c814f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c814eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c814a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c814a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c814a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c814a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c814a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81484d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c814aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c814abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c814ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8149020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81491b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8149340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81494d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8149660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81497f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8149a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8149c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8149da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8148020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81481b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c814a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8148340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8145540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8145540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81458c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8145a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8145be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8143980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8144020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81441b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8144340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8144660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81447f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8144980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8144b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8144ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8143020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81431b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8143340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81434d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8143660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8145d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8140b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8140b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c813f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c813f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c813f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c813d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c813f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c813f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c813f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c813fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c813fca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c813fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c813e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c813e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c813e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c813e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c813e760"/>
        <function-ref name="set" scoped="" ref="0x7f93c813e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c813ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c813ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c813f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c813eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c813a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c813a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c813a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c813a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c813a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81384d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c813aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c813abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c813ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8139020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81391b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8139340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81394d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8139660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81397f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8139a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8139c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8139da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8138020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81381b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c813a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8138340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8134540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8134540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81348c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8134a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8134be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8132980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8133020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8133340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8133660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81337f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8133980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8133b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8133ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8132020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81321b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8132340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81324d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8132660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8134d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c812fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c812fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c812e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c812e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c812e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c812c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c812e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c812e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c812e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c812eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c812eca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c812ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c812d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c812d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c812d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c812d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c812d760"/>
        <function-ref name="set" scoped="" ref="0x7f93c812d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c812da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c812dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c812e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c812dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8129060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8129060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81293e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8129570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8129700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81274d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8129a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8129bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8129d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8128020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81281b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8128340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81284d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8128660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81287f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8128a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8128c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8128da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8127020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81271b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8129890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8127340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8124540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8124540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81248c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8124a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8124be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8122980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8123020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81231b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8123340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8123660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81237f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8123980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8123b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8123ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8122020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81221b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8122340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81224d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8122660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8124d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c811fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c811fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c811e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c811e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c811e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c811c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c811e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c811e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c811e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c811eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c811eca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c811ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c811d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c811d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c811d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c811d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c811d760"/>
        <function-ref name="set" scoped="" ref="0x7f93c811d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c811da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c811dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c811e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c811dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8119060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8119060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81193e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8119570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8119700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81174d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8119a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8119bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8119d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8118020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81181b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8118340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81184d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8118660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8118a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8118c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8118da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8117020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81171b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8119890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8117340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8114540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8114540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81148c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8114a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8114be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8112980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8113020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81131b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8113340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8113660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81137f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8113980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8113b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8113ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8112020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81121b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8112340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81124d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8112660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8114d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c810fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c810fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c810d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c810d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c810d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c810b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c810d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c810d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c810d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c810db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c810dca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c810de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c810c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c810c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c810c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c810c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c810c760"/>
        <function-ref name="set" scoped="" ref="0x7f93c810c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c810ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c810cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c810d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c810cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8108060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8108060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81083e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8108570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8108700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c81064d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8108a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8108bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8108d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8107020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c81071b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8107340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c81074d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8107660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c81077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8107a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8107c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c8107da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8106020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c81061b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8108890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8106340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c8103540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c8103540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c81038c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8103a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8103be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8101980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8102020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c81021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8102340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c81024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8102660"/>
        <function-ref name="get" scoped="" ref="0x7f93c81027f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8102980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8102b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8102ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8101020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c81011b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8101340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c81014d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8101660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8103d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c81017f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c80feb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c80feb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c80fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c80fd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c80fd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c80fb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c80fd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c80fd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c80fd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c80fdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c80fdca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c80fde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c80fc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c80fc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c80fc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c80fc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c80fc760"/>
        <function-ref name="set" scoped="" ref="0x7f93c80fc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c80fca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c80fcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c80fd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c80fcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c80f8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c80f8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c80f83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c80f8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c80f8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c80f64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c80f8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c80f8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c80f8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c80f7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c80f71b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c80f7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c80f74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c80f7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c80f77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c80f7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c80f7c10"/>
        <function-ref name="set" scoped="" ref="0x7f93c80f7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c80f6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c80f61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c80f8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c80f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f93c80f3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f93c80f3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c80f38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c80f3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c80f3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c80f1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c80f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c80f21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c80f2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c80f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c80f2660"/>
        <function-ref name="get" scoped="" ref="0x7f93c80f27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c80f2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c80f2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c80f2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c80f1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c80f11b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c80f1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c80f14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c80f1660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c80f3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c80f17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c8063610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c8063610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8063990"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8063b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8063cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c8061980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8062020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c80621b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c8062340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c80624d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8062660"/>
        <function-ref name="get" scoped="" ref="0x7f93c80627f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c8062980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8062b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8062ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8061020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c80611b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8061340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c80614d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c8061660"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8063e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c80617f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c8075480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c8075480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8075800"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8075990"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8075b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8075cb0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8075e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8063020"/>
        <function-ref name="set" scoped="" ref="0x7f93c80631b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8063340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c805dde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c805dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c805c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c805c310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c805c4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c805a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c805c7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c805c950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c805cae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c805cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c805ce00"/>
        <function-ref name="get" scoped="" ref="0x7f93c805b020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c805b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c805b340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c805b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c805b760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c805b8f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c805ba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c805bc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c805bda0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c805c630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c805a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c805fb20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c805fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c805d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c805d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c805d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c805d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f93c805d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c805d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c805d980"/>
        <function-ref name="clr" scoped="" ref="0x7f93c805db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c8057480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c8057480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8057800"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c8057990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c8057b20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c80557f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8057e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c8056020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c80561b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c8056340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c80564d0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8056660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c80567f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c8056980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c8056b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c8056da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c8055020"/>
        <function-ref name="set" scoped="" ref="0x7f93c80551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c8055340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c80554d0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c8057cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c8055660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c80581b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c80581b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c8058530"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c80586c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c8058850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c80589e0"/>
        <function-ref name="get" scoped="" ref="0x7f93c8058b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c8058d00"/>
        <function-ref name="set" scoped="" ref="0x7f93c8057020"/>
        <function-ref name="clr" scoped="" ref="0x7f93c80571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f93c7faf190" loc="20:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f93c7faf190"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f93c7faf510"/>
        <function-ref name="stopDone" scoped="" ref="0x7f93c7faf6a0"/>
        <function-ref name="start" scoped="" ref="0x7f93c7faf830"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7faf9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f93c804acf0" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f93c804acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f93c80470a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f93c7fd3c30" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f93c7fd3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c802b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c802b1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c802b340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c802b4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c802b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f93c7fc3020" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f93c7fc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7fc33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7fc3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7fc36c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7fc3850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c7fc39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f93c7fa70f0" loc="21:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7fa70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f93c7fa7470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f93c7fa7600"/>
        <function-ref name="getRssi" scoped="" ref="0x7f93c7fa7790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f93c7fa7920"/>
        <function-ref name="getPower" scoped="" ref="0x7f93c7fa7ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f93c7fa7c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerDormir" ref="0x7f93c80311c0" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerDormir" scoped="" ref="0x7f93c80311c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c802d630"/>
        <function-ref name="fired" scoped="" ref="0x7f93c8030c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c802f9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c802f550"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c802c020"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c802dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c802f0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c8031db0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c802d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c80302e0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c80307b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f93c7fb3840" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c7fb3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7fb3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f93c8047360" loc="10:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c8047360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c80476e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c8047870"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c8047a00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c8047b90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c8047d20"/>
        <function-ref name="get" scoped="" ref="0x7f93c8046020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c80461b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c80467f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c8046340"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c80464d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c8046660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7f93c803a820" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7f93c803a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c8039cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c8044300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c80390d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c8044c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c8037660"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c80371e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c8044780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c8045480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c80396e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c8045950"/>
        <function-ref name="stop" scoped="" ref="0x7f93c8045e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7f93c8037cd0" loc="13:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7f93c8037cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c8032220"/>
        <function-ref name="fired" scoped="" ref="0x7f93c80357c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c8034590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c8034110"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c8032b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c80326a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c8035c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c8036940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c8034ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c8036e10"/>
        <function-ref name="stop" scoped="" ref="0x7f93c8035340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f93c7fc2be0" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f93c7fc2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f93c802a020"/>
        <function-ref name="source" scoped="" ref="0x7f93c802a1b0"/>
        <function-ref name="address" scoped="" ref="0x7f93c802a340"/>
        <function-ref name="destination" scoped="" ref="0x7f93c802a4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f93c802a660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f93c802a7f0"/>
        <function-ref name="type" scoped="" ref="0x7f93c802a980"/>
        <function-ref name="setType" scoped="" ref="0x7f93c802ab10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f93c802aca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f93c802ae30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f93c7fd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f93c7f74980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7f74980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7c48e80"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7c494a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c7c48260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c7c49da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c7c477a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c7c47320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7c49920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c7c4a5a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c7c48870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c7c4aa70"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7c49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f93c7f69050" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f93c7f69050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7f66630"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7f68ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c7f67920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c7f674a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c7f64020"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c7f66ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7f67020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c7f69c40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c7f66020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c7f68170"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7f68640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f93c7f61c30" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f93c7f61c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7f5c110"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7f5f6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c7f5d4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c7f5d020"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c7f5ca10"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c7f5c590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7f5fb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c7f60860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c7f5dab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c7f60d30"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7f5f220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f93c7f57500" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f93c7f57500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7f59170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c7f64e50" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c7f64e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c7f61210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f93c7d1a870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f93c7d1a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7d16090"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7d18090"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c7d18a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7d18550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c7d16550"/>
        <function-ref name="start" scoped="" ref="0x7f93c7d196a0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7d19bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c7d1a020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c7d1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c7d1a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f93c6aa84f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f93c6aa84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c6aa6db0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c6aa7da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c6aa6760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c6aa62a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c6aa52a0"/>
        <function-ref name="start" scoped="" ref="0x7f93c6aa73d0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c6aa78e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c6aa9b10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c6aa9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c6aa8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f93c6a8eda0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c6a8eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c6a8d180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c6a8d310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c6a8d4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c6a8d630"/>
        <function-ref name="fired" scoped="" ref="0x7f93c6a8d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f93c6a90340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c6a90340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c6a906c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c6a90850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c6a909e0"/>
        <function-ref name="get" scoped="" ref="0x7f93c6a90b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c6a90d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c6a8f020"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c6a8f1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c6a8f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c6a8f4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c6a8f660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c6a8f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f93c6a8fa80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c6a8fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c6a8fe00"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c6a8e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c6a8e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c6a8e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c6a8e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c6a8e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c6a8e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c6a8e980"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c6a8eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f93c7f221d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c7f221d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f22550"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7f226e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7f22870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7f22a00"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7f22b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f93c7f27990" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7f27990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7f27d10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7f26020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f261b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7f26340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f264d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7f26660"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7f267f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7f26980"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7f26b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7f26ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7f26e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f93c7f24720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c7f24720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7f24aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7f24c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f24dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7f23020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7f231b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f23340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7f234d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7f23660"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7f237f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f93c7f11730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f93c7f11730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7f11ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7f11c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f11dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7f10020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7f101b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f10340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7f104d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7f10660"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7f107f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f93c7f0c280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f93c7f0c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7f0c600"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7f0c790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f0c920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7f0cab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7f0cc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f0cdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7f0b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7f0b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7f0b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f93c7f12700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f93c7f12700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f12a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7f12c10"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7f12da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7f11020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7f111b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7f11340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f93c7f00020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f93c7f00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f003a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7f00530"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7f006c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7f00850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7f009e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7f00b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f93c7f18890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f93c7f18890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f18c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7f18da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7f12020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7f121b0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7f12340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f93c7f01160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f93c7f01160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f014e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7f01670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7f01800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7f01990"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7f01b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f93c7ef6ae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f93c7ef6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7ef6e60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7ef5020"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7ef51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7ef5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7ef54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7ef5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f93c7efe020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f93c7efe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7efe3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7efe530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7efe6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7efe850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7efe9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7efeb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7efed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7efd020"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7efd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f93c7f1c0c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f93c7f1c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7f1c440"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7f1c5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f1c760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7f1c8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7f1ca80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f1cc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7f1cda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7f1b020"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7f1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f93c7f07a20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f93c7f07a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f07da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7f06020"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7f061b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7f06340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7f064d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7f06660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f93c7f08bb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f93c7f08bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f07020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7f071b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7f07340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7f074d0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7f07660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f93c7f09730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f93c7f09730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7f09ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7f09c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f09dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7f08020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7f081b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f08340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7f084d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7f08660"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7f087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f93c7f0fa20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f93c7f0fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f0fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7f0e020"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7f0e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7f0e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7f0e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7f0e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f93c7efc570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f93c7efc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7efc8f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7efca80"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7efcc10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7efcda0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7efb020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7efb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f93c7f06a50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f93c7f06a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7f06dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7f05020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f051b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7f05340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7f054d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f05660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7f057f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7f05980"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7f05b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f93c7f10bb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f93c7f10bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f0f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7f0f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7f0f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7f0f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7f0f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f93c7f20830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f93c7f20830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7f20bb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7f20d40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f1d020"/>
        <function-ref name="get" scoped="" ref="0x7f93c7f1d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f1d340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7f1d4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7f1d660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7f1d7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7f1d980"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7f1db10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7f1dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f93c7efd570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f93c7efd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7efdaf0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7efdc80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7efde10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7efc020"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7efc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f93c7f19410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f93c7f19410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7f19790"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7f19920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f19ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7f19c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7f19dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f18020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7f181b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7f18340"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7f184d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f93c7efb5a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f93c7efb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7efb920"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7efbab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7efbc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7efbdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7efa020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7efa1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7efa340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7efa4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7efa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f93c7f13410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f93c7f13410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f13790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7f13920"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7f13ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7f13c40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7f13dd0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7f19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f93c7f04da0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f93c7f04da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f03180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7f03310"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7f034a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7f03630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7f037c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7f03950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f93c7f1b570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f93c7f1b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f1b8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7f1ba80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7f1bc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7f1bda0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7f1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f93c7f04020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f93c7f04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f043a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7f04530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7f046c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7f04850"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7f049e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f93c7ef9890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f93c7ef9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7ef9c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7ef9da0"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7ef8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7ef81b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7ef8340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7ef84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f93c7f03d40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f93c7f03d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7f020e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7f02270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f02400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7f02590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7f02720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f028b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7f02a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7f02bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7f02d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f93c7f0e9e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f93c7f0e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7f0ed60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7f0d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7f0d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7f0d340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7f0d4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7f0d660"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7f0d7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7f0d980"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7f0db10"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7f0dca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7f0de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f93c7f0a700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f93c7f0a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f0aa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7f0ac10"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7f0ada0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7f09020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7f091b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7f09340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f93c7efaa20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f93c7efaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7efada0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7ef9020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7ef91b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7ef9340"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7ef94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f93c7ef7d40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f93c7ef7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7ef60e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7ef6270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7ef6400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7ef6590"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7ef6720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f93c7f0b700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f93c7f0b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7f0bb80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7f0bd10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7f0a020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7f0a1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7f0a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f93c7ef88c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f93c7ef88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7ef8c40"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7ef8dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7ef7020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7ef71b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7ef7340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7ef74d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7ef7660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7ef77f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7ef7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f93c7ebd940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f93c7ebd940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7ebdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f93c7ebd2f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f93c7ebd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7ebd670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f93c7ebc020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f93c7ebc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7ebc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f93c7ebebf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7ebebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7ebd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f93c7ebf3e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7ebf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7ebf760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7ebf8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7ebfa80"/>
        <function-ref name="get" scoped="" ref="0x7f93c7ebfc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7ebfda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7ebe020"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7ebe1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7ebe340"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7ebe4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7ebe660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7ebe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f93c7eb6750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f93c7eb6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7eb6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f93c7eb6100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f93c7eb6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7eb6480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f93c7eb6da0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f93c7eb6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7eb4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f93c7eb7a60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7eb7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7eb7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f93c7eb8260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7eb8260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7eb85e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7eb8770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7eb8900"/>
        <function-ref name="get" scoped="" ref="0x7f93c7eb8a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7eb8c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7eb8db0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7eb7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7eb71b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7eb7340"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7eb74d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7eb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7e6b7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7e6b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e6bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7e6bcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7e6be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e6a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e6a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7e6a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f93c7eb16d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f93c7eb16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7eb1a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7eb1be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7eb1d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7e6c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7e6c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e6c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7e6c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7e6c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7e6c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f93c7e68c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7e68c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f93c7e6cac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f93c7e6cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e6ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7e6b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7e6b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7e6b340"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7e6b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f93c7e6a610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7e6a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7e6a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7e6ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e6acb0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7e6ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e68020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e681b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7e68340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e684d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7e68660"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7e687f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7e68980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7e63cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7e63cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e620a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7e62230"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7e623c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e62550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e626e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7e62870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f93c7e65b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f93c7e65b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7e64020"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7e641b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e64340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7e644d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7e64660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e647f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7e64980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7e64b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7e64ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f93c7e602f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7e602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e60670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f93c7e63020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f93c7e63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e633a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7e63530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7e636c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7e63850"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7e639e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f93c7e62b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7e62b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7e61020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7e611b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e61340"/>
        <function-ref name="get" scoped="" ref="0x7f93c7e614d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e61660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e617f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7e61980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e61b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7e61ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7e61e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7e60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7e5b2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7e5b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e5b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7e5b800"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7e5b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e5bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e5bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7e5be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f93c7e5d220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f93c7e5d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7e5d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7e5d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e5d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7e5da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7e5dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e5dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7e5c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7e5c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7e5c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f93c7e597a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7e597a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e59b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f93c7e5c610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f93c7e5c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e5c990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7e5cb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7e5ccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7e5ce40"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7e5b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f93c7e5a160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7e5a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7e5a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7e5a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e5a800"/>
        <function-ref name="get" scoped="" ref="0x7f93c7e5a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e5ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e5acb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7e5ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e59020"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7e591b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7e59340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7e594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7e537a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7e537a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e53b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7e53cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7e53e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e52020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e521b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7e52340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f93c7e556d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f93c7e556d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7e55a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7e55be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e55d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7e54020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7e541b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e54340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7e544d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7e54660"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7e547f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f93c7e51c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7e51c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f93c7e54ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f93c7e54ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e54e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7e53020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7e531b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7e53340"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7e534d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f93c7e52610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7e52610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7e52990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7e52b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e52cb0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7e52e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e51020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e511b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7e51340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e514d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7e51660"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7e517f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7e51980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7e4ccb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7e4ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e4b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7e4b230"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7e4b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e4b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e4b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7e4b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f93c7e4eb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f93c7e4eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7e4d020"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7e4d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e4d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7e4d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7e4d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e4d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7e4d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7e4db10"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7e4dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f93c7e492f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7e492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e49670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f93c7e4c020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f93c7e4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e4c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7e4c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7e4c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7e4c850"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7e4c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f93c7e4bb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7e4bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7e4a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7e4a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e4a340"/>
        <function-ref name="get" scoped="" ref="0x7f93c7e4a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e4a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e4a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7e4a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e4ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7e4aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7e4ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7e49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7e432f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7e432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e43670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7e43800"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7e43990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e43b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e43cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7e43e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f93c7e45220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f93c7e45220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7e455a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7e45730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e458c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7e45a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7e45be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e45d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7e44020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7e441b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7e44340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f93c7e417a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7e417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e41b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f93c7e44610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f93c7e44610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e44990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7e44b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7e44cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7e44e40"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7e43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f93c7e42160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7e42160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7e424e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7e42670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e42800"/>
        <function-ref name="get" scoped="" ref="0x7f93c7e42990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e42b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e42cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7e42e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e41020"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7e411b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7e41340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7e414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7e3c7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7e3c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e3cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7e3ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7e3ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e3b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e3b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7e3b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f93c7e3e6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f93c7e3e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7e3ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7e3ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e3ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7e3d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7e3d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e3d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7e3d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7e3d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7e3d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f93c7e3ac50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7e3ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f93c7e3dac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f93c7e3dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e3de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7e3c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7e3c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7e3c340"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7e3c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f93c7e3b610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7e3b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7e3b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7e3bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e3bcb0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7e3be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e3a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e3a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7e3a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e3a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7e3a660"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7e3a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7e3a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7e34cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7e34cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e330a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7e33230"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7e333c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e33550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e336e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7e33870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f93c7e36b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f93c7e36b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7e35020"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7e351b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e35340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7e354d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7e35660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e357f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7e35980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7e35b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7e35ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f93c7e312f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7e312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e31670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f93c7e34020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f93c7e34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e343a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7e34530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7e346c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7e34850"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7e349e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f93c7e33b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7e33b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7e32020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7e321b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e32340"/>
        <function-ref name="get" scoped="" ref="0x7f93c7e324d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e32660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e327f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7e32980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e32b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7e32ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7e32e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7e31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7e2c2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7e2c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e2c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7e2c800"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7e2c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e2cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e2ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7e2ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f93c7e2e220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f93c7e2e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7e2e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7e2e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e2e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7e2ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7e2ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e2ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7e2d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7e2d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7e2d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f93c7e2a7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7e2a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e2ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f93c7e2d610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f93c7e2d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e2d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7e2db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7e2dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7e2de40"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7e2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f93c7e2b160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7e2b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7e2b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7e2b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e2b800"/>
        <function-ref name="get" scoped="" ref="0x7f93c7e2b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e2bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e2bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7e2be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e2a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7e2a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7e2a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7e2a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7e247a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7e247a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e24b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c7e24cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7e24e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e23020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e231b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c7e23340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f93c7e276d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f93c7e276d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c7e27a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c7e27be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e27d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c7e25020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c7e251b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e25340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c7e254d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c7e25660"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c7e257f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f93c7e22c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f93c7e22c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f93c7e25ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f93c7e25ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c7e25e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c7e24020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c7e241b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c7e24340"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7e244d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f93c7e23610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7e23610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7e23990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7e23b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7e23cb0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7e23e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7e22020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7e221b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7e22340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7e224d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7e22660"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7e227f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7e22980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f93c7e1cbc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f93c7e1cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f93c7e1d3f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f93c7e1d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e1d770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f93c7e1db80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f93c7e1db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f93c7e1c430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f93c7e1c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7e1c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f93c6a84a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c6a84a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c6a84e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c6a83020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c6a831b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c6a83340"/>
        <function-ref name="fired" scoped="" ref="0x7f93c6a834d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f93c6a86190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c6a86190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c6a86510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c6a866a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c6a86830"/>
        <function-ref name="get" scoped="" ref="0x7f93c6a869c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c6a86b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c6a86ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c6a86e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c6a85030"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c6a851c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c6a85350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c6a854e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f93c6a8a020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f93c6a8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c6a87870"/>
        <function-ref name="fired" scoped="" ref="0x7f93c6a89840"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c6a87220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c6a89d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c6a87d30"/>
        <function-ref name="start" scoped="" ref="0x7f93c6a8ae30"/>
        <function-ref name="stop" scoped="" ref="0x7f93c6a89380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c6a8b660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c6a8b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c6a8b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f93c6a85770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c6a85770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c6a85af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c6a85c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c6a85e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c6a84020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c6a841b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c6a84340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c6a844d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c6a84660"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c6a847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f93c7d938c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c7d938c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7d97700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7d960d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7d97bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7d96590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f93c7d918e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f93c7d918e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7d8e780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7d8c150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7d8ec40"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7d8c610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f93c7d7cc50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c7d7cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7d7a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7d7a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c7d7a340"/>
        <function-ref name="get" scoped="" ref="0x7f93c7d7a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c7d7a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7d7a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7d7a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7d7ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7d7aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c7d7ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c7d79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f93c7d8ab80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c7d8ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7d899b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7d7c360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7d89e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7d7c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f93c7d580f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f93c7d580f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7d57020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7d579a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7d574e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7d57e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f93c7d76cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c7d76cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7d5bb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7d59550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7d59090"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7d59a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f93c6aa3890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f93c6aa3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c6a9d0d0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c6a9e0d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c6a9ea50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c6a9e590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c6a9d590"/>
        <function-ref name="start" scoped="" ref="0x7f93c6aa26e0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c6aa2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f93c6a9a0a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f93c6a9a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c6a97b30"/>
        <function-ref name="fired" scoped="" ref="0x7f93c6a989f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c6a974e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c6a97020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c6a96020"/>
        <function-ref name="start" scoped="" ref="0x7f93c6a98020"/>
        <function-ref name="stop" scoped="" ref="0x7f93c6a98530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f93c6a9dc00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c6a9dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c6a9ca80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c6a9b4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c6a9b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c6a9b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f93c7ce49c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f93c7ce49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c7ce4d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c7ce3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f93c7ce8850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f93c7ce8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7ce4090"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7ce5090"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c7ce5a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7ce5550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c7ce4550"/>
        <function-ref name="start" scoped="" ref="0x7f93c7ce66a0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7ce6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f93c7ced2f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7ced2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7ce9870"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7cebe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c7ceac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c7cea780"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c7ce81e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c7ce9cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7cea300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c7ceb020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c7ce9260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c7ceb4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7ceb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f93c7c65020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f93c7c65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7c61630"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7c64a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c7c62920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c7c624a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c7c60020"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c7c61ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7c62020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c7c65c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c7c61020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c7c64110"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7c645e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f93c7c60450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f93c7c60450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f93c7c607d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f93c7c6c8e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7c6c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7c66020"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7c694c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c7c68300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c7c69e00"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c7c66960"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c7c664c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7c69960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c7c6b560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c7c68930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c7c6ba50"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7c69020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f93c68a5100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f93c68a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c68a5480"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c68a5610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f93c68ad3d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f93c68ad3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c68a9870"/>
        <function-ref name="fired" scoped="" ref="0x7f93c68abe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c68aac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c68aa780"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c68a71e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c68a9cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c68aa300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c68ab020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c68a9260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c68ab4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c68ab9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f93c68a6a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f93c68a6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f93c68a6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f93c68a75d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f93c68a75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f93c68a6660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f93c68a67f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f93c68a7c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f93c68a7e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f93c68a6020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f93c68a61b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f93c68a6340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f93c68a64d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f93c68a7950"/>
        <function-ref name="node_id" scoped="" ref="0x7f93c68a7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f93c68b4db0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c68b4db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c68ae470"/>
        <function-ref name="fired" scoped="" ref="0x7f93c68b19b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c68b07c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c68b0320"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c68aedb0"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c68ae910"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c68b1e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c68b2a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c68b0df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c68b1020"/>
        <function-ref name="stop" scoped="" ref="0x7f93c68b1510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f93c7c5d020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f93c7c5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7c5dc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f93c7c53300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c7c53300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7c51150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7c51ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7c51610"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7c50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f93c7c44260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7c44260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7c416e0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7c43ca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c7c42a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c7c425f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c7c3f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c7c41b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7c42170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c7c44e50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c7c410d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c7c43350"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7c43820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f93c7c3eb00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerDormir"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7c3eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7c39110"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7c3c5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c7c3b4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c7c3b020"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c7c39a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c7c39590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7c3ca30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c7c3d750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c7c3bab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c7c3dc20"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7c3c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f93c7c2a690" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f93c7c2a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f93c7c2aa10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f93c7c2aba0"/>
        <function-ref name="start" scoped="" ref="0x7f93c7c2ad30"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7c29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f93c7c202c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c7c202c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f93c7c20640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f93c7c207d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f93c7c20960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f93c7c20af0"/>
        <function-ref name="setCca" scoped="" ref="0x7f93c7c20c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f93c7c20e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f93c7c101d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f93c7c101d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f93c7c10650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f93c7c24760" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f93c7c24760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7c24ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c7c24c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7c24e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7c23020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c7c231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f93c7c297f0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f93c7c297f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7c29b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7c29d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7c28020"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7c281b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c7c28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f93c7c27880" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f93c7c27880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7c27c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f93c7c23480" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7c23480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f93c7c23800"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f93c7c23990"/>
        <function-ref name="getRssi" scoped="" ref="0x7f93c7c23b20"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f93c7c23cb0"/>
        <function-ref name="getPower" scoped="" ref="0x7f93c7c23e40"/>
        <function-ref name="getLqi" scoped="" ref="0x7f93c7c22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f93c7c0b130" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c7c0b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f93c7c0b4b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f93c7c0b640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f93c7c0b7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f93c7c0b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c7c28b20" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c7c28b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7c27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f93c7c21020" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c7c21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f93c7c213a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f93c7c21530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f93c7c216c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f93c7c02430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f93c7c02430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f93c7c027b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f93c7c02940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f93c7c02ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f93c7c02c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f93c7c02df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f93c7c25020" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f93c7c25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f93c7c253a0"/>
        <function-ref name="source" scoped="" ref="0x7f93c7c25530"/>
        <function-ref name="address" scoped="" ref="0x7f93c7c256c0"/>
        <function-ref name="destination" scoped="" ref="0x7f93c7c25850"/>
        <function-ref name="setSource" scoped="" ref="0x7f93c7c259e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f93c7c25b70"/>
        <function-ref name="type" scoped="" ref="0x7f93c7c25d00"/>
        <function-ref name="setType" scoped="" ref="0x7f93c7c24020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f93c7c241b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f93c7c24340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f93c7c244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f93c7c18170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f93c7c18170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f93c7c184f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f93c7bfd020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f93c7bfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f93c7bfd3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f93c7bfd530"/>
        <function-ref name="start" scoped="" ref="0x7f93c7bfd6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7bfd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f93c7bea9d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f93c7bea9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f93c7bead50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f93c7be9b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f93c7be9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f93c7be8020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f93c7be81b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f93c7be8340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f93c7be84d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f93c7be8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f93c7beb020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7beb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f93c7beb3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f93c7beb530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f93c7beb6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f93c7beb850"/>
        <function-ref name="getPower" scoped="" ref="0x7f93c7beb9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f93c7bebb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f93c7bf5a70" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f93c7bf5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7bf5df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7bed020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7bed1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7bed340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c7bed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f93c7be9080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c7be9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f93c7be9400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f93c7be9590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f93c7be9720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f93c7be98b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f93c7bf6690" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f93c7bf6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7bf6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f93c7bea020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c7bea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f93c7bea3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f93c7bea530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f93c7bea6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c7bfc530" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c7bfc530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7bfc8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7bfca40"/>
        <function-ref name="request" scoped="" ref="0x7f93c7bfcbd0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7bfcd60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7bfb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f93c7bec940" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f93c7bec940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7beccc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7bece50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7bf6020"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7bf61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c7bf6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f93c7bf6d50" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f93c7bf6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7bf5100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c7bf5290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7bf5420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7bf55b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c7bf5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f93c7bed840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f93c7bed840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7bedbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f93c7be5390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f93c7be5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f93c7be5710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f93c7be58a0"/>
        <function-ref name="start" scoped="" ref="0x7f93c7be5a30"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7be5bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f93c7be3330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c7be3330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f93c7be36b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f93c7be3840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f93c7be39d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f93c7be3b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f93c7be3cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f93c7be3e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f93c7be5e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c7be5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7be4220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7be43b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7be4540"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7be46d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c7be4860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c7be4b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c7be4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7be3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f93c7be2e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f93c7be2e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f93c7bdd220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f93c7bdd3b0"/>
        <function-ref name="start" scoped="" ref="0x7f93c7bdd540"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7bdd6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f93c7bdc7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c7bdc7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f93c7bdcb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f93c7bdccf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f93c7bdce80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f93c7bdb030"/>
        <function-ref name="setCca" scoped="" ref="0x7f93c7bdb1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f93c7bdb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f93c7bd1060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f93c7bd1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f93c7bd13e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f93c7bd1570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f93c7bd1700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f93c7bd1890"/>
        <function-ref name="setCca" scoped="" ref="0x7f93c7bd1a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f93c7bd1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f93c7bc6330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7bc6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f93c7bc66b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f93c7bc6840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f93c7bc69d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f93c7bc6b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f93c7bc6cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f93c7bc6e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f93c7bc82a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f93c7bc82a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7bc8620"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7bc87b0"/>
        <function-ref name="modify" scoped="" ref="0x7f93c7bc8940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c7bc8ad0"/>
        <function-ref name="resend" scoped="" ref="0x7f93c7bc8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f93c7bdd990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c7bdd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7bddd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7bdc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7bdc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7bdc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c7bdc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f93c7bc5420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f93c7bc5420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f93c7bc57a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f93c7bc5930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f93c7bd0760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f93c7bd0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f93c7bd0ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7bd0c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f93c7bbe920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c7bbe920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7bbeca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f93c7bbee30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f93c7bc3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f93c7bd3b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f93c7bd3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f93c7bd9020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f93c7bd91b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f93c7bd9340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f93c7bd94d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f93c7bd9660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f93c7bd97f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f93c7bd9980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f93c7bd9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f93c7bc5bf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c7bc5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c7bc7020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c7bc71b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c7bc7340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c7bc74d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c7bc7660"/>
        <function-ref name="get" scoped="" ref="0x7f93c7bc77f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c7bc7980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c7bc6020"/>
        <function-ref name="set" scoped="" ref="0x7f93c7bc7b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c7bc7ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c7bc7e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f93c7bdb640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c7bdb640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7bdb9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7bdbb50"/>
        <function-ref name="request" scoped="" ref="0x7f93c7bdbce0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7bdbe70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7bda030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f93c7bc2110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f93c7bc2110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f93c7bc2590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f93c7bc2720"/>
        <function-ref name="isState" scoped="" ref="0x7f93c7bc28b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f93c7bc2a40"/>
        <function-ref name="requestState" scoped="" ref="0x7f93c7bc2bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f93c7bc2d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f93c7bb4b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f93c7bb4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c7bb3020"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c7bb31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f93c7bb5ba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f93c7bb5ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c7bb4020"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c7bb41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f93c7bb7c20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f93c7bb7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c7bb5020"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c7bb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f93c7b5ddc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f93c7b5ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f93c7b69180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f93c7b69310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f93c7b694a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f93c7b69630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f93c7b697c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f93c7b69950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f93c7b69ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f93c7b69c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f93c7b69e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f93c7b68020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f93c7b681b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f93c7b68340"/>
        <function-ref name="sync" scoped="" ref="0x7f93c7b684d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f93c7b68760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f93c7b688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f93c7b590c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f93c7b590c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b59cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c7b58170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f93c7b68bf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f93c7b68bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f93c7b5b020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f93c7b5b1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f93c7b5b340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f93c7b5b4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f93c7b5b660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f93c7b5b7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f93c7b5b980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f93c7b5bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c7b6d950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c7b6d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7b6dcd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7b6de60"/>
        <function-ref name="request" scoped="" ref="0x7f93c7b6a020"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7b6a1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7b6a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f93c7b53970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f93c7b53970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f93c7b53cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f93c7b53e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f93c7b51030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f93c7b511c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f93c7b51350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f93c7b514e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f93c7b51670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f93c7b51800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f93c7b51990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f93c7b51b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f93c7b51cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f93c7b51e40"/>
        <function-ref name="sync" scoped="" ref="0x7f93c7b50020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f93c7b502b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f93c7b50440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f93c7b311e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c7b311e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b31560"/>
        <function-ref name="write" scoped="" ref="0x7f93c7b316f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f93c7b4c020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f93c7b4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f93c7b4c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f93c7b4ca10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f93c7b4ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7b482a0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7b492a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c7b49c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7b49760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c7b48760"/>
        <function-ref name="start" scoped="" ref="0x7f93c7b4b890"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7b4bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f93c7b35020" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c7b35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b353a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7b35530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f93c7b47e70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f93c7b47e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7b46220"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7b463b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7b46540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7b466d0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7b46860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7b469f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7b46b80"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7b46d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f93c7b4fb40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f93c7b4fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b4e750"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c7b4ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f93c7b1fca0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f93c7b1fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c7b1e0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c7b1e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f93c7b31a80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f93c7b31a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b31e00"/>
        <function-ref name="write" scoped="" ref="0x7f93c7b30020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f93c7b303c0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f93c7b303c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b30740"/>
        <function-ref name="write" scoped="" ref="0x7f93c7b308d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f93c7b32cd0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f93c7b32cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b390a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7b39230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f93c7b3b390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f93c7b3b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f93c7b3b710"/>
        <function-ref name="changed" scoped="" ref="0x7f93c7b3b8a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f93c7b3ba30"/>
        <function-ref name="setAddress" scoped="" ref="0x7f93c7b3bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f93c7b48c50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f93c7b48c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7b47020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7b471b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7b47340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7b474d0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7b47660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7b477f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7b47980"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7b47b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f93c7b2e450" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c7b2e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7b2e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f93c7b450f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f93c7b450f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7b45470"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7b45600"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7b45790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7b45920"/>
        <function-ref name="get" scoped="" ref="0x7f93c7b45ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7b45c40"/>
        <function-ref name="set" scoped="" ref="0x7f93c7b45dd0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7b44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c7b54510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c7b54510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c7b54890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f93c7b358f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c7b358f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b35c70"/>
        <function-ref name="write" scoped="" ref="0x7f93c7b35e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f93c7b2ed70" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f93c7b2ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7b2d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f93c7b2d520" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f93c7b2d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7b2d8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7b2da30"/>
        <function-ref name="request" scoped="" ref="0x7f93c7b2dbc0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7b2dd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7b2b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f93c7b29180" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f93c7b29180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7b29500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7b29690"/>
        <function-ref name="request" scoped="" ref="0x7f93c7b29820"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7b299b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7b29b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f93c7b50740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f93c7b50740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f93c7b50ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f93c7b50c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f93c7b50de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f93c7b4f020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f93c7b4f1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f93c7b4f340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f93c7b4f4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f93c7b4f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f93c7b395d0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f93c7b395d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b39950"/>
        <function-ref name="write" scoped="" ref="0x7f93c7b39ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f93c7b32420" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7b32420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b327a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7b32930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f93c7b2c570" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f93c7b2c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7b2c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f93c7b29e00" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c7b29e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c7b281c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c7b28350"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c7b284e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c7b28670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c7b28800"/>
        <function-ref name="get" scoped="" ref="0x7f93c7b28990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c7b28b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c7b271b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7b28cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c7b28e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c7b27020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f93c7b20db0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f93c7b20db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c7b1f180"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c7b1f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c7b54b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c7b54b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7b53020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7b531b0"/>
        <function-ref name="request" scoped="" ref="0x7f93c7b53340"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7b534d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7b53660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f93c7b36e20" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f93c7b36e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b3a1c0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7b3a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f93c7b364a0" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7b364a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7b36920"/>
        <function-ref name="write" scoped="" ref="0x7f93c7b36ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f93c7b3fc00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f93c7b3fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7b43020"/>
        <function-ref name="disable" scoped="" ref="0x7f93c7b431b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f93c7b43340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f93c7b434d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f93c7b2b3d0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f93c7b2b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7b2b750"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7b2b8e0"/>
        <function-ref name="request" scoped="" ref="0x7f93c7b2ba70"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7b2bc00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7b2bd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f93c7b2cc80" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f93c7b2cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7b2e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c7aa87e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c7aa87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c7aa8b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f93c7aa5220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f93c7aa5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7aa3b30"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7aa4a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c7aa34e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7aa3020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c7aa1020"/>
        <function-ref name="start" scoped="" ref="0x7f93c7aa4090"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7aa45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c7a9f260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c7a9f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c7a9f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f93c7a9faf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f93c7a9faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7a65390"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7a66360"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c7a66ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c7a66820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c7a65850"/>
        <function-ref name="start" scoped="" ref="0x7f93c7a67970"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7a67e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f93c684f180" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f93c684f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c684cb30"/>
        <function-ref name="fired" scoped="" ref="0x7f93c684e9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c684c4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c684c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c684b020"/>
        <function-ref name="start" scoped="" ref="0x7f93c684e020"/>
        <function-ref name="stop" scoped="" ref="0x7f93c684e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c6850900" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c6850900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c6850c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f93c68472a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f93c68472a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c6845b30"/>
        <function-ref name="fired" scoped="" ref="0x7f93c6846aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c68454e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c6845020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c6844020"/>
        <function-ref name="start" scoped="" ref="0x7f93c68460d0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c68465e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c6848a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c6848a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c6848d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f93c682fc10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c682fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c682e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c682e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c682e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c682e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c682e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f93c68311b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c68311b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c6831530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c68316c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c6831850"/>
        <function-ref name="get" scoped="" ref="0x7f93c68319e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c6831b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c6831d00"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c6830020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c68301b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c6830340"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c68304d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c6830660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f93c68308f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c68308f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c6830c70"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c6830e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c682f020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c682f1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c682f340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c682f4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c682f660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c682f7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c682f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f93c6822a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f93c6822a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c6822e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f93c6821020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f93c68211b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f93c6821340"/>
        <function-ref name="fired" scoped="" ref="0x7f93c68214d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f93c6824020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c6824020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c68243a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c6824530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c68246c0"/>
        <function-ref name="get" scoped="" ref="0x7f93c6824850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c68249e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c6824b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c6824d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c6823020"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c68231b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c6823340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c68234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f93c6829da0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f93c6829da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c6825670"/>
        <function-ref name="fired" scoped="" ref="0x7f93c6826610"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c6825020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c6826ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c6825b30"/>
        <function-ref name="start" scoped="" ref="0x7f93c6828bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c6826150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c6829510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c6829510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c6829890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f93c6823760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c6823760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c6823ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c6823c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c6823e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c6822020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c68221b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c6822340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c68224d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c6822660"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c68227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f93c7a89080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c7a89080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7a88020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7a889a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7a884e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7a88e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f93c7a800f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f93c7a800f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7a7f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7a7f9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7a7f4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7a7fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f93c7a84cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c7a84cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7a83b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7a82550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7a82090"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7a82a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f93c68415f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f93c68415f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c683fe50"/>
        <function-ref name="fired" scoped="" ref="0x7f93c6840e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c683f800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c683f340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c683e340"/>
        <function-ref name="start" scoped="" ref="0x7f93c6840430"/>
        <function-ref name="stop" scoped="" ref="0x7f93c6840940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f93c683cd20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f93c683cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c6838670"/>
        <function-ref name="fired" scoped="" ref="0x7f93c6839550"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c6838020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c6839a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c6838b30"/>
        <function-ref name="start" scoped="" ref="0x7f93c683ab60"/>
        <function-ref name="stop" scoped="" ref="0x7f93c6839090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f93c683e9b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c683e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c683d7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c683c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c683dca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c683c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f93c7a5e090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f93c7a5e090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a5e410"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a5e5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a5e730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a5e8c0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a5ea50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a5ebe0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a5ed70"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f93c7a5d390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f93c7a5d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a5d710"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a5d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a5da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a5dbc0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a5dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a5c020"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a5c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f93c7a5c6a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f93c7a5c6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a5ca20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a5cbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a5cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a5b020"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a5b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a5b340"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a5b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a5b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f93c7a60e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f93c7a60e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a5f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a5f3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a5f530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a5f6c0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a5f850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a5f9e0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a5fb70"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a5fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f93c7a5ace0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f93c7a5ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a59230"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a593c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a59550"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a596e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a59870"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a59a00"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a59b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f93c7aa6b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f93c7aa6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a60020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a601b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a60340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a604d0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a60660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a607f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a60980"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a60b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f93c7a5b9b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f93c7a5b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a5bd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a5a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a5a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a5a340"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a5a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a5a660"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a5a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a5a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c7a562f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a56670"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a56800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7a56990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c7a54660"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a56cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a56e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7a55020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7a551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a55340"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a554d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c7a55660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7a557f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c7a55980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7a55c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c7a55da0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a54020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c7a541b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7a54340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a56b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7a544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c7a57020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a57530"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a576c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a57850"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a579e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a57b70"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a57d00"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c7a517a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a517a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a51b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a51cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7a51e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c7a4fa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a50340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7a504d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7a50660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a507f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a50980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c7a50b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7a50ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c7a50e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7a4f120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c7a4f2b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a4f440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c7a4f5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7a4f760"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a50020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7a4f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c7a52630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a52630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a529b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a52b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a52cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a52e60"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a51020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a511b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a51340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a514d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c7a4bc60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a4bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a4a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a4a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7a4a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c7a48020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a4a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a4a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7a4a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7a4ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a4aca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a4ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c7a49020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7a491b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c7a49340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7a495d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c7a49760"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a498f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c7a49a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7a49c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a4a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7a49da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c7a4cb00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a4cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a4ce80"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a4b030"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a4b1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a4b350"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a4b4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a4b670"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a4b800"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a4b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c7a452f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a45670"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a45800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7a45990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c7a43660"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a45cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a45e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7a44020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7a441b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a44340"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a444d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c7a44660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7a447f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c7a44980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7a44c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c7a44da0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a43020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c7a431b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7a43340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a45b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7a434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c7a46020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a463a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a46530"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a466c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a46850"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a469e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a46b70"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a46d00"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a45020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c7a407a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a40b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a40cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7a40e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c7a3ea80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a3f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a3f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7a3f4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7a3f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a3f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a3f980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c7a3fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7a3fca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c7a3fe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7a3e120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c7a3e2b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a3e440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c7a3e5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7a3e760"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a3f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7a3e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c7a41630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a41630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a419b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a41b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a41cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a41e60"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a40020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a401b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a40340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a404d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c7a3bc60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a3bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a3a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a3a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7a3a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c7a38020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a3a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a3a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7a3a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7a3ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a3aca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a3ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c7a39020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7a391b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c7a39340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7a395d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c7a39760"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a398f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c7a39a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7a39c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a3a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7a39da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c7a3caf0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a3caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a3ce70"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a3b030"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a3b1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a3b350"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a3b4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a3b670"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a3b800"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a3b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c7a352f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7a352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a35670"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a35800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7a35990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c7a32660"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a35cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a35e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7a33020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7a331b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a33340"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a334d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c7a33660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7a337f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c7a33980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7a33c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c7a33da0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a32020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c7a321b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7a32340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a35b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7a324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c7a36020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c7a36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7a363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7a36530"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7a366c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7a36850"/>
        <function-ref name="get" scoped="" ref="0x7f93c7a369e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7a36b70"/>
        <function-ref name="set" scoped="" ref="0x7f93c7a36d00"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7a35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f93c7a13700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f93c7a13700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f93c7a13a80"/>
        <function-ref name="disable" scoped="" ref="0x7f93c7a13c10"/>
        <function-ref name="captured" scoped="" ref="0x7f93c7a13da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f93c7a1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f93c7a1b400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f93c7a1b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7a1b780"/>
        <function-ref name="disable" scoped="" ref="0x7f93c7a1b910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f93c7a1baa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f93c7a1bc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f93c7a15060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f93c7a15060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7a153e0"/>
        <function-ref name="disable" scoped="" ref="0x7f93c7a15570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f93c7a15700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f93c7a15890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f93c79fca80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f93c79fca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f93c79fce00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f93c79fb020"/>
        <function-ref name="captured" scoped="" ref="0x7f93c79fb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c79fb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c79fb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f93c79fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f93c7a10c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f93c7a10c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f93c79fd020"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79fd1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f93c79fd340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f93c79fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f93c79fd760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f93c79fd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f93c79fdae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f93c79fdc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c79fde00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f93c79fc020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f93c79fc1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c79fc340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f93c79fc4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f93c79fc660"/>
        <function-ref name="setControl" scoped="" ref="0x7f93c79fc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f93c79fb930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c79fb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c79fbcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c79fbe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c79fa020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c79f9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c79fa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c79fa4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c79fa660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c79fa7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c79fa980"/>
        <function-ref name="get" scoped="" ref="0x7f93c79fab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c79faca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c79fae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c79f9020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c79f92b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c79f9440"/>
        <function-ref name="set" scoped="" ref="0x7f93c79f95d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c79f9760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c79f98f0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c79fa1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c79f9a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f93c79e93f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f93c79e93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79e9770"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79e9900"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79e9a90"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79e9c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79e9db0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79e8020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79e81b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f93c79dc3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f93c79dc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79dc770"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79dc900"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79dca90"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79dcc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79dcdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79db020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79db1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f93c79e6d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f93c79e6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79e5100"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79e5290"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79e5420"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79e55b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79e5740"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79e58d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79e5a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79e5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f93c79e33f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f93c79e33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79e3770"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79e3900"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79e3a90"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79e3c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79e3db0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79e1020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79e11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f93c79f1bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f93c79f1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79eb020"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79eb1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79eb340"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79eb4d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79eb660"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79eb7f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79eb980"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79ebb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f93c79dfd50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f93c79dfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79de210"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79de3a0"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79de530"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79de6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79de850"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79de9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79deb70"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79ded00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f93c79e8710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f93c79e8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79e8a90"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79e8c20"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79e8db0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79e7020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79e71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79e7340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79e74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f93c79db710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f93c79db710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79dba90"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79dbc20"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79dbdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79da020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79da1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79da340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79da4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f93c79ec620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f93c79ec620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79ec9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79ecb30"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79eccc0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79ece50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79f2020"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79f21b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79f2340"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f93c79e1710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f93c79e1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79e1a90"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79e1c20"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79e1db0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79e0020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79e01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79e0340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79e04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f93c79ea020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f93c79ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79ea3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79ea530"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79ea6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79ea850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79ea9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79eab70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79ead00"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f93c79dd100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f93c79dd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79dd480"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79dd610"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79dd7a0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79dd930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79ddac0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79ddc50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79ddde0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f93c79e7a30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f93c79e7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79e7db0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79e6020"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79e61b0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79e6340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79e64d0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79e6660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79e67f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79e6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f93c79e4020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f93c79e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79e43a0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79e4530"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79e46c0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79e4850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79e49e0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79e4b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79e4d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f93c79f28a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f93c79f28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79f2c20"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79f2db0"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79f1020"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79f11b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79f1340"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79f14d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79f1660"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79f17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f93c79e0a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f93c79e0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79e0db0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79df020"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79df1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79df340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79df4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79df660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79df7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79df980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f93c79d23f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f93c79d23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79d2770"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79d2900"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79d2a90"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79d2c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79d2db0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79d1020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79d11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f93c79c63f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f93c79c63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79c6770"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79c6900"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79c6a90"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79c6c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79c6db0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79c5020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79c51b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f93c79cfd50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f93c79cfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79ce100"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79ce290"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79ce420"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79ce5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79ce740"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79ce8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79cea60"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79cebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f93c79cc3f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f93c79cc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79cc770"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79cc900"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79cca90"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79ccc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79ccdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79cb020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79cb1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f93c79d5d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f93c79d5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79d4100"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79d4290"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79d4420"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79d45b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79d4740"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79d48d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79d4a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79d4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f93c79c9d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f93c79c9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79c8210"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79c83a0"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79c8530"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79c86c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79c8850"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79c89e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79c8b70"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79c8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f93c79d1710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f93c79d1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79d1a90"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79d1c20"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79d1db0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79d0020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79d01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79d0340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79d04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f93c79c5710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f93c79c5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79c5a90"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79c5c20"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79c5db0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79c3020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79c31b0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79c3340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79c34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f93c79d97a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f93c79d97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79d9b20"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79d9cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79d9e40"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79d6020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79d61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79d6340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79d64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f93c79cb710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f93c79cb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79cba90"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79cbc20"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79cbdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79ca020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79ca1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79ca340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79ca4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f93c79d3020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f93c79d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79d33a0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79d3530"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79d36c0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79d3850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79d39e0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79d3b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79d3d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f93c79c7100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f93c79c7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79c7480"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79c7610"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79c77a0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79c7930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79c7ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79c7c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79c7de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f93c79d0a30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f93c79d0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79d0db0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79cf020"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79cf1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79cf340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79cf4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79cf660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79cf7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79cf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f93c79cd020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f93c79cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79cd3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79cd530"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79cd6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79cd850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79cd9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79cdb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79cdd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f93c79d6a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f93c79d6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79d6db0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79d5020"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79d51b0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79d5340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79d54d0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79d5660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79d57f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f93c79caa30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f93c79caa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c79cadb0"/>
        <function-ref name="fired" scoped="" ref="0x7f93c79c9020"/>
        <function-ref name="disable" scoped="" ref="0x7f93c79c91b0"/>
        <function-ref name="edge" scoped="" ref="0x7f93c79c9340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c79c94d0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c79c9660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c79c97f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c79c9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f93c78b92f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f93c78b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c78b9670"/>
        <function-ref name="fired" scoped="" ref="0x7f93c78b9800"/>
        <function-ref name="disable" scoped="" ref="0x7f93c78b9990"/>
        <function-ref name="edge" scoped="" ref="0x7f93c78b9b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c78b9cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c78b9e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c78ab020"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c78ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f93c78ba680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f93c78ba680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c78baa00"/>
        <function-ref name="disable" scoped="" ref="0x7f93c78bab90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f93c78bad20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f93c78b9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f93c78a87a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f93c78a87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c78a8b20"/>
        <function-ref name="fired" scoped="" ref="0x7f93c78a8cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f93c78a8e40"/>
        <function-ref name="edge" scoped="" ref="0x7f93c78a7020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f93c78a71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f93c78a7340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f93c78a74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f93c78a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f93c78aab70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f93c78aab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c78a8020"/>
        <function-ref name="disable" scoped="" ref="0x7f93c78a81b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f93c78a8340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f93c78a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f93c744ae50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c744ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7449410"/>
        <function-ref name="write" scoped="" ref="0x7f93c74495a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f93c7453160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f93c7453160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c74534e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f93c744de50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c744de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c744c210"/>
        <function-ref name="write" scoped="" ref="0x7f93c744c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f93c7447880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7447880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7447c00"/>
        <function-ref name="write" scoped="" ref="0x7f93c7447d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f93c743f0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f93c743f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c743f420"/>
        <function-ref name="write" scoped="" ref="0x7f93c743f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f93c74460a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f93c74460a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7446420"/>
        <function-ref name="write" scoped="" ref="0x7f93c74465b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f93c7431500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f93c7431500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7431880"/>
        <function-ref name="write" scoped="" ref="0x7f93c7431a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f93c7434500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f93c7434500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7434880"/>
        <function-ref name="write" scoped="" ref="0x7f93c7434a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f93c7452490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f93c7452490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7452810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f93c743a880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f93c743a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c743ac00"/>
        <function-ref name="write" scoped="" ref="0x7f93c743ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f93c7435500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c7435500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7435880"/>
        <function-ref name="write" scoped="" ref="0x7f93c7435a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f93c744ce50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f93c744ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c744b210"/>
        <function-ref name="write" scoped="" ref="0x7f93c744b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f93c744be50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f93c744be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c744a210"/>
        <function-ref name="write" scoped="" ref="0x7f93c744a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f93c7442880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f93c7442880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7442c00"/>
        <function-ref name="write" scoped="" ref="0x7f93c7442d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f93c74430a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f93c74430a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7443420"/>
        <function-ref name="write" scoped="" ref="0x7f93c74435b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f93c7446880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f93c7446880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7446c00"/>
        <function-ref name="write" scoped="" ref="0x7f93c7446d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f93c7456a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7456a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f93c7456e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f93c7455020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f93c74551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f93c7451e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c7451e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c74501c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f93c7450490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f93c7450490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7450910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f93c7439c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f93c7439c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74370a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7437230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f93c7450be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f93c7450be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c744e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f93c7435ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7435ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74340a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7434230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f93c7451160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c7451160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c74514e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f93c743a0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f93c743a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c743a420"/>
        <function-ref name="write" scoped="" ref="0x7f93c743a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f93c744b670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f93c744b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c744b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c744bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f93c744c670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c744c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c744c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c744cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f93c7455ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f93c7455ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7455e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f93c743b0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f93c743b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c743b420"/>
        <function-ref name="write" scoped="" ref="0x7f93c743b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f93c743f880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f93c743f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c743fc00"/>
        <function-ref name="write" scoped="" ref="0x7f93c743fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f93c743b880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f93c743b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c743bc00"/>
        <function-ref name="write" scoped="" ref="0x7f93c743bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f93c7433ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f93c7433ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74310a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7431230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f93c7434ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f93c7434ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74330a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7433230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f93c7443880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f93c7443880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7443c00"/>
        <function-ref name="write" scoped="" ref="0x7f93c7443d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f93c743e0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f93c743e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c743e420"/>
        <function-ref name="write" scoped="" ref="0x7f93c743e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f93c7436ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f93c7436ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74350a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7435230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f93c7445880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f93c7445880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7445c00"/>
        <function-ref name="write" scoped="" ref="0x7f93c7445d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f93c7431ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f93c7431ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c74300a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c7430230"/>
        <function-ref name="write" scoped="" ref="0x7f93c74303c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c7430550"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c74306e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f93c7455480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f93c7455480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7455800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f93c744d670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f93c744d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c744d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c744db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f93c744a670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f93c744a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c744a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c744ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f93c74400a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f93c74400a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7440420"/>
        <function-ref name="write" scoped="" ref="0x7f93c74405b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f93c74450a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f93c74450a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7445420"/>
        <function-ref name="write" scoped="" ref="0x7f93c74455b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f93c7440880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f93c7440880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7440c00"/>
        <function-ref name="write" scoped="" ref="0x7f93c7440d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f93c7449870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7449870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7449bf0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7449d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f93c74537b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f93c74537b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7453b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f93c74470a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c74470a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7447420"/>
        <function-ref name="write" scoped="" ref="0x7f93c74475b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c7457e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c7457e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c74561c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7456350"/>
        <function-ref name="request" scoped="" ref="0x7f93c74564e0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7456670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7456800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f93c744e2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f93c744e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c744e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f93c744d020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f93c744d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c744d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f93c7436500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f93c7436500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7436880"/>
        <function-ref name="write" scoped="" ref="0x7f93c7436a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f93c7437ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7437ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74360a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7436230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f93c74517b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c74517b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7451b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f93c7437500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f93c7437500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7437880"/>
        <function-ref name="write" scoped="" ref="0x7f93c7437a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f93c7433500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f93c7433500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7433880"/>
        <function-ref name="write" scoped="" ref="0x7f93c7433a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f93c74420a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f93c74420a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7442420"/>
        <function-ref name="write" scoped="" ref="0x7f93c74425b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f93c743e880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f93c743e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c743ec00"/>
        <function-ref name="write" scoped="" ref="0x7f93c743ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f93c7453e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f93c7453e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c74521c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f93c7452ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f93c7452ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7452e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f93c74440a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f93c74440a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7444420"/>
        <function-ref name="write" scoped="" ref="0x7f93c74445b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f93c744e940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f93c744e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c744ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f93c7444880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f93c7444880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7444c00"/>
        <function-ref name="write" scoped="" ref="0x7f93c7444d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f93c74390a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f93c74390a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7439820"/>
        <function-ref name="write" scoped="" ref="0x7f93c74399b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f93c74309b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f93c74309b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c7430d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c742f020"/>
        <function-ref name="write" scoped="" ref="0x7f93c742f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c742f340"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c742f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f93c78662c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f93c78662c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c7866640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c78667d0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7866960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c7866af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c7866c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f93c7867350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7867350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f93c78676d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f93c7867860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f93c78679f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f93c7865540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f93c7865540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c78658c0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7865a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f93c7863370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f93c7863370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c78636f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7863880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c78684d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c78684d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7868850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c78689e0"/>
        <function-ref name="request" scoped="" ref="0x7f93c7868b70"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7868d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7867020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f93c78621d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f93c78621d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7862550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f93c784c2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f93c784c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c784c660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c784c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f93c785d890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f93c785d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c785dc10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c785dda0"/>
        <function-ref name="write" scoped="" ref="0x7f93c785c020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c785c1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c785c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f93c785f660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c785f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f93c785f9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f93c785fb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f93c785fd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f93c7855c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f93c7855c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f93c7857020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f93c784cb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f93c784cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f93c7856020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f93c78561b0"/>
        <function-ref name="isState" scoped="" ref="0x7f93c7856340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f93c78564d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f93c7856660"/>
        <function-ref name="forceState" scoped="" ref="0x7f93c78567f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f93c7858060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f93c7858060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c78583e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7858570"/>
        <function-ref name="request" scoped="" ref="0x7f93c7858700"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7858890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7858a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f93c785cba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f93c785cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c785a020"/>
        <function-ref name="write" scoped="" ref="0x7f93c785a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f93c785aa30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f93c785aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c785adb0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7859020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f93c7856a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c7856a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c7856df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c7854020"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c78541b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c7854340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c78544d0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7854660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c78547f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c7854e30"/>
        <function-ref name="set" scoped="" ref="0x7f93c7854980"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c7854b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c7854ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c785e510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c785e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c785e890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c785ea20"/>
        <function-ref name="request" scoped="" ref="0x7f93c785ebb0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c785ed40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c785d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f93c7849bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f93c7849bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c7847020"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c78471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f93c78598b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f93c78598b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7859c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f93c77ee770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f93c77ee770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f93c77eeaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f93c77eec80"/>
        <function-ref name="isState" scoped="" ref="0x7f93c77eee10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f93c77ea020"/>
        <function-ref name="requestState" scoped="" ref="0x7f93c77ea1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f93c77ea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f93c77e91d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f93c77e91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f93c77e9550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f93c77e96e0"/>
        <function-ref name="isState" scoped="" ref="0x7f93c77e9870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f93c77e9a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f93c77e9b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f93c77e9d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c77e4020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c77e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c77e43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f93c77e4b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f93c77e4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f93c77e3020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f93c77e31b0"/>
        <function-ref name="isState" scoped="" ref="0x7f93c77e3340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f93c77e34d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f93c77e3660"/>
        <function-ref name="forceState" scoped="" ref="0x7f93c77e37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f93c747d020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f93c747d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c747d3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c747d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f93c77cb8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f93c77cb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f93c77cbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c77ccc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c77ccc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c77cb020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c77cb1b0"/>
        <function-ref name="request" scoped="" ref="0x7f93c77cb340"/>
        <function-ref name="granted" scoped="" ref="0x7f93c77cb4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c77cb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f93c674a5d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c674a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f93c674a950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f93c674aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f93c6748020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f93c6748020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c67483a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6748530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f93c67487c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f93c67487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f93c6748b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f93c674ad70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f93c674ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f93c6749180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c674b940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c674b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c674bcc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c674be50"/>
        <function-ref name="request" scoped="" ref="0x7f93c674a020"/>
        <function-ref name="granted" scoped="" ref="0x7f93c674a1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c674a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f93c6749410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f93c6749410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f93c6749790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f93c6749920"/>
        <function-ref name="splitRead" scoped="" ref="0x7f93c6749ab0"/>
        <function-ref name="write" scoped="" ref="0x7f93c6749c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f93c77618e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c77618e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f93c7761c60"/>
        <function-ref name="configure" scoped="" ref="0x7f93c7761df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f93c7764850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f93c7764850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7764bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c7764d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f93c775fa40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f93c775fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f93c775fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f93c7765110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f93c7765110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f93c7765490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f93c7760690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f93c7760690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7760a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7760ba0"/>
        <function-ref name="request" scoped="" ref="0x7f93c7760d30"/>
        <function-ref name="granted" scoped="" ref="0x7f93c775f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c775f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c776ad80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c776ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7766180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7766310"/>
        <function-ref name="request" scoped="" ref="0x7f93c77664a0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7766630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c77667c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f93c7765790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f93c7765790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f93c7765b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f93c7765ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f93c7765e30"/>
        <function-ref name="write" scoped="" ref="0x7f93c7764020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f93c775ab40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f93c775ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f93c775d020"/>
        <function-ref name="txDone" scoped="" ref="0x7f93c775d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f93c76eac40" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c76eac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f93c76e9020"/>
        <function-ref name="configure" scoped="" ref="0x7f93c76e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f93c76e7700" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f93c76e7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c76e7aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c76e7c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f93c76e6e00" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f93c76e6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f93c76e51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f93c76e9440" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f93c76e9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f93c76e97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f93c76e5490" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f93c76e5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f93c76e5810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f93c76e59a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f93c76e5b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f93c76e5cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f93c76e5e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f93c76e4020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f93c76e41b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f93c76e4340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f93c76e44d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f93c76e4660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f93c76e47f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f93c76e4980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f93c76e4b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f93c76e4da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f93c76e3020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f93c76e31b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f93c76e3340"/>
        <function-ref name="isUart" scoped="" ref="0x7f93c76e34d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f93c76e3660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f93c76e37f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f93c76e3980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f93c76e3b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f93c76e3ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f93c76e3e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c76e2020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f93c76e23b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f93c76e2540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f93c76e26d0"/>
        <function-ref name="tx" scoped="" ref="0x7f93c76e2860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f93c76e29f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f93c76e2b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f93c76e2d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f93c76e1020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f93c76e11b0"/>
        <function-ref name="rx" scoped="" ref="0x7f93c76e1340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f93c76e14d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f93c76e1660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f93c76e17f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f93c76e1980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f93c76e1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f93c76e05a0" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c76e05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c76e0920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c76e0ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c76e0c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c76e0dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c76df020"/>
        <function-ref name="get" scoped="" ref="0x7f93c76df1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c76df340"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c76df980"/>
        <function-ref name="set" scoped="" ref="0x7f93c76df660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c76df4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c76df7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f93c76e6060" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f93c76e6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c76e6400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c76e6590"/>
        <function-ref name="request" scoped="" ref="0x7f93c76e6720"/>
        <function-ref name="granted" scoped="" ref="0x7f93c76e68b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c76e6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c76ebe80" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c76ebe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c76ea240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c76ea3d0"/>
        <function-ref name="request" scoped="" ref="0x7f93c76ea560"/>
        <function-ref name="granted" scoped="" ref="0x7f93c76ea6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c76ea880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f93c76e9a50" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f93c76e9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f93c76e9dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f93c76e7020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f93c76e71b0"/>
        <function-ref name="write" scoped="" ref="0x7f93c76e7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f93c76e1de0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f93c76e1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f93c76e0180"/>
        <function-ref name="txDone" scoped="" ref="0x7f93c76e0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f93c76dfc50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f93c76dfc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c76de020"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c76de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f93c76cf8a0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f93c76cf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c76cfc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f93c76d23b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f93c76d23b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f93c76d2730"/>
        <function-ref name="txDone" scoped="" ref="0x7f93c76d28c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f93c76d98a0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f93c76d98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f93c76d9c20"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f93c76d9db0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f93c76d6020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f93c76d61b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f93c76d6340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f93c76d64d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f93c76d6660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f93c76d67f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f93c76d6980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f93c76d6b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f93c76d6ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f93c76d6e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f93c76d5020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f93c76d52b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f93c76d5440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f93c76d55d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f93c76d5760"/>
        <function-ref name="isUart" scoped="" ref="0x7f93c76d58f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f93c76d5a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f93c76d5c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f93c76d5da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f93c76d4020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f93c76d41b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f93c76d4340"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c76d44d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f93c76d4860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f93c76d49f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f93c76d4b80"/>
        <function-ref name="tx" scoped="" ref="0x7f93c76d4d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f93c76d3020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f93c76d31b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f93c76d3340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f93c76d34d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f93c76d3660"/>
        <function-ref name="rx" scoped="" ref="0x7f93c76d37f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f93c76d3980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f93c76d3b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f93c76d3ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f93c76d3e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f93c76d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f93c7694570" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f93c7694570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c76948f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7694a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7694c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7692980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7693020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c76931b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7693340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c76934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7693660"/>
        <function-ref name="get" scoped="" ref="0x7f93c76937f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c7693980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7693b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c7693ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7692020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c76921b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7692340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c76924d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7694da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7692660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c76927f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f93c76c8910" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f93c76c8910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f93c76c8c90"/>
        <function-ref name="txDone" scoped="" ref="0x7f93c76c8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f93c7692d40" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f93c7692d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c76910e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7691270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7691400"/>
        <function-ref name="clr" scoped="" ref="0x7f93c768f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7691720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c76918b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7691a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7691bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7691d60"/>
        <function-ref name="get" scoped="" ref="0x7f93c7690020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c76901b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7690340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c76904d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7690760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c76908f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7690a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c7690c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7691590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7690da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c768f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f93c768f570" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f93c768f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c768f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c768fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c768fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c768d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c768e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c768e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c768e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c768e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c768e660"/>
        <function-ref name="get" scoped="" ref="0x7f93c768e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c768e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c768eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c768eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c768d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c768d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c768d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c768d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c768fda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c768d660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c768d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f93c76d1d00" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f93c76d1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f93c76cc0a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f93c76cc230"/>
        <function-ref name="setUctl" scoped="" ref="0x7f93c76cc3c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f93c76cc550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f93c76cc6e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f93c76cc870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f93c76cca00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f93c76ccb90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f93c76ccd20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f93c76cb020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f93c76cb1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f93c76cb340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f93c76cb4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f93c76cb760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f93c76cb8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f93c76cba80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f93c76cbc10"/>
        <function-ref name="isUart" scoped="" ref="0x7f93c76cbda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f93c76ca020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f93c76ca1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f93c76ca340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f93c76ca4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f93c76ca660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f93c76ca7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c76ca980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f93c76cad10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f93c76c9020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f93c76c91b0"/>
        <function-ref name="tx" scoped="" ref="0x7f93c76c9340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f93c76c94d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f93c76c9660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f93c76c97f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f93c76c9980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f93c76c9b10"/>
        <function-ref name="rx" scoped="" ref="0x7f93c76c9ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f93c76c9e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f93c76c8020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f93c76c81b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f93c76c8340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f93c76c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f93c769e5b0" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f93c769e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f93c769e930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f93c769eac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f93c769ec50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f93c769ede0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f93c76c6020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f93c76c61b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f93c76c6340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f93c76c64d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c76c6660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f93c76c67f0"/>
        <function-ref name="getData" scoped="" ref="0x7f93c76c6980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f93c76c6b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f93c76c6ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f93c76c5020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f93c76c51b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f93c76c5340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f93c76c54d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f93c76c5660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f93c76c57f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f93c76c5980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f93c76c5b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f93c76c5ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f93c76c5e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f93c769d020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f93c769d1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f93c769d540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f93c769d6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f93c769d860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f93c769d9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f93c769db80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f93c769dd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f93c769c020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f93c769c1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f93c769c340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f93c769c4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f93c769c660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f93c769c7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f93c769c980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f93c769cb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f93c769cca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f93c769ce30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f93c769b020"/>
        <function-ref name="setData" scoped="" ref="0x7f93c769b1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f93c769b340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f93c769b4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f93c769b660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f93c769b7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f93c769b980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f93c769bb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f93c769a420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f93c769a5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f93c769a740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f93c769a8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f93c769aa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f93c769abf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f93c769ad80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f93c7699020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f93c76991b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f93c7699340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f93c7697e40" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f93c7697e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c76961e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7696370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7696500"/>
        <function-ref name="clr" scoped="" ref="0x7f93c76941b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7696820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c76969b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7696b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7696cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7696e60"/>
        <function-ref name="get" scoped="" ref="0x7f93c7695020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c76951b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7695340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c76954d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7695760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c76958f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7695a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c7695c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7696690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7695da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c7694020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f93c76c7290" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f93c76c7290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c76c7610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f93c7699700" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f93c7699700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7699a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7699c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7699da0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7697a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c76981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7698340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c76984d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7698660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c76987f0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7698980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c7698b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c7698ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c7698e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c7697120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c76972b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7697440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c76975d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7698020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7697760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c76978f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f93c673f020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c673f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f93c673f3a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f93c673f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f93c6739440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f93c6739440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c67397c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f93c6732760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c6732760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f93c6732ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f93c6732c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f93c6739a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f93c6739a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f93c6739dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f93c6738020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f93c67381b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f93c6738340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f93c67384d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f93c6738660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f93c67387f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f93c6738980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c6738b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f93c6738ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f93c6738e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f93c6737020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f93c67371b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f93c6737440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f93c67375d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f93c6737760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f93c67378f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f93c6737a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f93c6737c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f93c6737da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f93c6736020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f93c67361b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f93c6736340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f93c67364d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f93c6736660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f93c67369f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f93c6736b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f93c6736d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f93c6735020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f93c67351b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f93c6735340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f93c67354d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f93c6735660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f93c67357f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f93c6735980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f93c6735b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f93c6735ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f93c6735e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f93c6734020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f93c67341b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f93c6734340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f93c67344d0"/>
        <function-ref name="setData" scoped="" ref="0x7f93c6734660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f93c67347f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f93c6734980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f93c6734b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f93c6734ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f93c6734e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f93c6733020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f93c67335b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f93c6733740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f93c67338d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f93c6733a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f93c6733bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f93c6733d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f93c6732020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f93c67321b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f93c6732340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f93c67324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f93c673ac10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f93c673ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f93c6739020"/>
        <function-ref name="txDone" scoped="" ref="0x7f93c67391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c6740340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c6740340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c67406c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c6740850"/>
        <function-ref name="request" scoped="" ref="0x7f93c67409e0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c6740b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c6740d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f93c673e020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f93c673e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f93c673e3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f93c673e530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f93c673e6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f93c673e850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f93c673e9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f93c673eb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f93c673ed00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f93c673d020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f93c673d1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f93c673d340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f93c673d4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f93c673d660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f93c673d7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f93c673da80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f93c673dc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f93c673dda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f93c673c020"/>
        <function-ref name="isUart" scoped="" ref="0x7f93c673c1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f93c673c340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f93c673c4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f93c673c660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f93c673c7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f93c673c980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f93c673cb10"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c673cca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f93c673b220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f93c673b3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f93c673b540"/>
        <function-ref name="tx" scoped="" ref="0x7f93c673b6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f93c673b860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f93c673b9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f93c673bb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f93c673bd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f93c673a020"/>
        <function-ref name="rx" scoped="" ref="0x7f93c673a1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f93c673a340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f93c673a4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f93c673a660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f93c673a7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f93c673a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f93c673f7c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c673f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f93c673fb40"/>
        <function-ref name="userId" scoped="" ref="0x7f93c673fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f93c75e78a0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c75e78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f93c75e7c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f93c75e7db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f93c75e4020" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c75e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f93c75e43a0"/>
        <function-ref name="configure" scoped="" ref="0x7f93c75e4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f93c75eca80" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f93c75eca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f93c75ece00"/>
        <function-ref name="txDone" scoped="" ref="0x7f93c75e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c75e85c0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c75e85c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c75e8940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c75e8ad0"/>
        <function-ref name="request" scoped="" ref="0x7f93c75e8c60"/>
        <function-ref name="granted" scoped="" ref="0x7f93c75e8df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c75e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f93c75e99a0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f93c75e99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c75e9d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f93c75e5130" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c75e5130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f93c75e54b0"/>
        <function-ref name="userId" scoped="" ref="0x7f93c75e5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f93c75cf4b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c75cf4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f93c75cf830"/>
        <function-ref name="userId" scoped="" ref="0x7f93c75cf9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f93c75e25c0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f93c75e25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f93c75e2960"/>
        <function-ref name="txDone" scoped="" ref="0x7f93c75e2af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f93c75d1e70" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f93c75d1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c75cf220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f93c75d1020" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f93c75d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c75d13c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f93c75d1690" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f93c75d1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f93c75d1a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f93c75d1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f93c7550530" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c7550530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f93c75508d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f93c7550a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f93c754e270" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c754e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f93c754e610"/>
        <function-ref name="configure" scoped="" ref="0x7f93c754e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f93c7550cb0" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f93c7550cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c754f0a0"/>
        <function-ref name="requested" scoped="" ref="0x7f93c754f230"/>
        <function-ref name="granted" scoped="" ref="0x7f93c754f3c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c754f550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f93c754f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c75516a0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c75516a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7551a40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7551bd0"/>
        <function-ref name="request" scoped="" ref="0x7f93c7551d60"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7550020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c75501b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f93c754e9f0" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f93c754e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f93c754ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f93c754f930" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c754f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f93c754fcb0"/>
        <function-ref name="userId" scoped="" ref="0x7f93c754fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c66c7020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c66c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c66c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f93c66c7630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f93c66c7630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f93c66c79b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f93c66c7b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f93c66c7cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f93c66c7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f93c66c36c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f93c66c36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f93c66c3a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f93c66c3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f93c66c19d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f93c66c19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f93c66c1d70"/>
        <function-ref name="configure" scoped="" ref="0x7f93c66c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f93c66c02b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f93c66c02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f93c66c0630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f93c66c07c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f93c66c0950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f93c66c0ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f93c66c3e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f93c66c3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c66c21e0"/>
        <function-ref name="requested" scoped="" ref="0x7f93c66c2370"/>
        <function-ref name="granted" scoped="" ref="0x7f93c66c2500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c66c2690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f93c66c2820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f93c66c0d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c66c0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c66be0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c66be270"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c66be400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c66be590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c66be720"/>
        <function-ref name="get" scoped="" ref="0x7f93c66be8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c66bea40"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c66bd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c66bed60"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c66bebd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c66bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c66c4850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c66c4850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c66c4bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c66c4d80"/>
        <function-ref name="request" scoped="" ref="0x7f93c66c3020"/>
        <function-ref name="granted" scoped="" ref="0x7f93c66c31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c66c3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f93c66c12d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f93c66c12d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f93c66c1650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f93c66c2a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f93c66c2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f93c66c2df0"/>
        <function-ref name="userId" scoped="" ref="0x7f93c66c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f93c66bd480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f93c66bd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c66bd800"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c66bd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f93c75468c0" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f93c75468c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f93c7546c40"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f93c7546dd0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f93c7543020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f93c75431b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f93c7543340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f93c75434d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f93c7543660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f93c75437f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c7543980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f93c7543b10"/>
        <function-ref name="getData" scoped="" ref="0x7f93c7543ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f93c7543e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f93c7542020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f93c75422b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f93c7542440"/>
        <function-ref name="getIV" scoped="" ref="0x7f93c75425d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f93c7542760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f93c75428f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f93c7542a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f93c7542c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f93c7542da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f93c7541020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f93c75411b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f93c7541340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f93c75414d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f93c7541860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f93c75419f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f93c7541b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f93c7541d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f93c7540020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f93c75401b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f93c7540340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f93c75404d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f93c7540660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f93c75407f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f93c7540980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f93c7540b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f93c7540ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f93c7540e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f93c753f020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f93c753f1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f93c753f340"/>
        <function-ref name="setData" scoped="" ref="0x7f93c753f4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f93c753f660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f93c753f7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f93c753f980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f93c753fb10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f93c753fca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f93c753fe30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f93c753e420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f93c753e5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f93c753e740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f93c753e8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f93c753ea60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f93c753ebf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f93c753ed80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f93c753d020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f93c753d1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f93c753d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f93c7533250" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f93c7533250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f93c75335d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f93c7533760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f93c75338f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f93c7533a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f93c7533c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f93c7533da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f93c7532020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f93c75321b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f93c7532340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f93c75324d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f93c7532660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f93c75327f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f93c7532980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f93c7532c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f93c7532da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f93c7531020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f93c75311b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f93c7531340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f93c75314d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f93c7531660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f93c75317f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f93c7531980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f93c7531b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f93c7531ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c7531e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f93c7530220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f93c75303b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f93c7530540"/>
        <function-ref name="tx" scoped="" ref="0x7f93c75306d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f93c7530860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f93c75309f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f93c7530b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f93c7530d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f93c752f020"/>
        <function-ref name="rx" scoped="" ref="0x7f93c752f1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f93c752f340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f93c752f4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f93c752f660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f93c752f7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f93c752f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f93c752c570" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f93c752c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c752c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c752ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c752cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c752a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c752b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c752b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c752b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c752b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c752b660"/>
        <function-ref name="get" scoped="" ref="0x7f93c752b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c752b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c752bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c752bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c752a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c752a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c752a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c752a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c752cda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c752a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c752a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f93c753a390" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f93c753a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f93c753a710"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f93c753a8a0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f93c753aa30"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f93c753abc0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f93c753ad50"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f93c7539020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f93c75391b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f93c7539340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c75394d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f93c7539660"/>
        <function-ref name="getData" scoped="" ref="0x7f93c75397f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f93c7539980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f93c7539b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f93c7539da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f93c7538020"/>
        <function-ref name="getIV" scoped="" ref="0x7f93c75381b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f93c7538340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f93c75384d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f93c7538660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f93c75387f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f93c7538980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f93c7538b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f93c7538ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f93c7538e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f93c7537020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f93c75373b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f93c7537540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f93c75376d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f93c7537860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f93c75379f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f93c7537b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f93c7537d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f93c7536020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f93c75361b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f93c7536340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f93c75364d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f93c7536660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f93c75367f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f93c7536980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f93c7536b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f93c7536ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f93c7536e30"/>
        <function-ref name="setData" scoped="" ref="0x7f93c7535020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f93c75351b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f93c7535340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f93c75354d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f93c7535660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f93c75357f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f93c7535980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f93c7534020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f93c75341b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f93c7534340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f93c75344d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f93c7534660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f93c75347f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f93c7534980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f93c7534b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f93c7534ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f93c7534e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f93c752fd40" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f93c752fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c752e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c752e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c752e400"/>
        <function-ref name="clr" scoped="" ref="0x7f93c752c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c752e720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c752e8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c752ea40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c752ebd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c752ed60"/>
        <function-ref name="get" scoped="" ref="0x7f93c752d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c752d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c752d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c752d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c752d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c752d8f0"/>
        <function-ref name="set" scoped="" ref="0x7f93c752da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c752dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c752e590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c752dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c752c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f93c7417c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c7417c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7416210"/>
        <function-ref name="write" scoped="" ref="0x7f93c74163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f93c7422da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f93c7422da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7421180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f93c741bb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c741bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c741a020"/>
        <function-ref name="write" scoped="" ref="0x7f93c741a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f93c7415670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7415670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74159f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7415b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f93c740ee50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f93c740ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c740d210"/>
        <function-ref name="write" scoped="" ref="0x7f93c740d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f93c7415e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f93c7415e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7414210"/>
        <function-ref name="write" scoped="" ref="0x7f93c74143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f93c74012f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f93c74012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7401670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7401800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f93c74032f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f93c74032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7403670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7403800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f93c7420120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f93c7420120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c74204a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f93c7409670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f93c7409670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74099f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7409b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f93c74042f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c74042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7404670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7404800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f93c741ac60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f93c741ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7418020"/>
        <function-ref name="write" scoped="" ref="0x7f93c74181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f93c7418c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f93c7418c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7417020"/>
        <function-ref name="write" scoped="" ref="0x7f93c74171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f93c740f670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f93c740f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c740f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c740fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f93c7411e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f93c7411e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7410210"/>
        <function-ref name="write" scoped="" ref="0x7f93c74103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f93c7414670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f93c7414670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74149f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7414b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f93c7423760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c7423760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f93c7423ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f93c7423c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f93c7423e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f93c741eaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c741eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c741ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f93c741d120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f93c741d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c741d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f93c7408a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f93c7408a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7408df0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7407020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f93c741d870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f93c741d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c741dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f93c7404ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7404ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7404e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7403020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f93c7420dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c7420dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c741e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f93c740ae50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f93c740ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7409210"/>
        <function-ref name="write" scoped="" ref="0x7f93c74093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f93c7418480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f93c7418480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7418800"/>
        <function-ref name="write" scoped="" ref="0x7f93c7418990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f93c741a480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c741a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c741a800"/>
        <function-ref name="write" scoped="" ref="0x7f93c741a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f93c7422750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f93c7422750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7422ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f93c740be50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f93c740be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c740a210"/>
        <function-ref name="write" scoped="" ref="0x7f93c740a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f93c740d670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f93c740d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c740d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c740db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f93c740a670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f93c740a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c740a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c740ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f93c7402ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f93c7402ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7402e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7401020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f93c7403ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f93c7403ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7403e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7402020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f93c7410670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f93c7410670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74109f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7410b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f93c740de50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f93c740de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c740b210"/>
        <function-ref name="write" scoped="" ref="0x7f93c740b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f93c7406ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f93c7406ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7406e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7404020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f93c7412670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f93c7412670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74129f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7412b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f93c7401ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f93c7401ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c7401e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c7400020"/>
        <function-ref name="write" scoped="" ref="0x7f93c74001b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c7400340"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c74004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f93c7422100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f93c7422100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7422480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f93c741b370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f93c741b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c741b6f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c741b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f93c7417480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f93c7417480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7417800"/>
        <function-ref name="write" scoped="" ref="0x7f93c7417990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f93c740fe50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f93c740fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c740e210"/>
        <function-ref name="write" scoped="" ref="0x7f93c740e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f93c7414e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f93c7414e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7412210"/>
        <function-ref name="write" scoped="" ref="0x7f93c74123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f93c740e670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f93c740e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c740e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c740eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f93c7416670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7416670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74169f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7416b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f93c7421450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f93c7421450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c74217d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f93c7416e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c7416e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7415210"/>
        <function-ref name="write" scoped="" ref="0x7f93c74153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c7424a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c7424a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7424e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7423020"/>
        <function-ref name="request" scoped="" ref="0x7f93c74231b0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7423340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c74234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f93c741c020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f93c741c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c741c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f93c741ccc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f93c741ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c741b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f93c74062f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f93c74062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7406670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7406800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f93c7407ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7407ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7407e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7406020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f93c741e450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c741e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c741e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f93c74072f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f93c74072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7407670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7407800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f93c74022f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f93c74022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7402670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7402800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f93c7410e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f93c7410e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c740f210"/>
        <function-ref name="write" scoped="" ref="0x7f93c740f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f93c740b670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f93c740b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c740b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c740bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f93c7421aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f93c7421aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7421e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f93c7420770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f93c7420770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7420af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f93c7412e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f93c7412e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7411210"/>
        <function-ref name="write" scoped="" ref="0x7f93c74113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f93c741c670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f93c741c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c741c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f93c7411670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f93c7411670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c74119f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7411b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f93c7409e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f93c7409e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7408610"/>
        <function-ref name="write" scoped="" ref="0x7f93c74087a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f93c74007a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f93c74007a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c7400b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c7400cb0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7400e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c73ff020"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c73ff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f93c73ebc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c73ebc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e9210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f93c73f5da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f93c73f5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f93c73eeb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c73eeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73ed020"/>
        <function-ref name="write" scoped="" ref="0x7f93c73ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f93c73e8670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c73e8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e89f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f93c73e1e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f93c73e1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e0210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f93c73e8e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f93c73e8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e7210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f93c73d42f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f93c73d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73d4670"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f93c73d72f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f93c73d72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73d7670"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f93c73f3120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f93c73f3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f93c73dd670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f93c73dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73dd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73ddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f93c73d82f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c73d82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73d8670"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f93c73edc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f93c73edc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73ec020"/>
        <function-ref name="write" scoped="" ref="0x7f93c73ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f93c73ecc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f93c73ecc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73eb020"/>
        <function-ref name="write" scoped="" ref="0x7f93c73eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f93c73e2670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f93c73e2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e29f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f93c73e5e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f93c73e5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e4210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f93c73e7670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f93c73e7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e79f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f93c73f7760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c73f7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f93c73f7ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f93c73f7c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f93c73f7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f93c73f2aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c73f2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f2e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f93c73f1120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f93c73f1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f15a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f93c73dba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f93c73dba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73dbdf0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f93c73f1870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f93c73f1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f93c73d8ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c73d8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73d8e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f93c73f3dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c73f3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f93c73dee50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f93c73dee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73dd210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f93c73ec480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f93c73ec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73ec800"/>
        <function-ref name="write" scoped="" ref="0x7f93c73ec990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f93c73ed480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c73ed480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73ed800"/>
        <function-ref name="write" scoped="" ref="0x7f93c73ed990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f93c73f5750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f93c73f5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f93c73dfe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f93c73dfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73de210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f93c73e0670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f93c73e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e09f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f93c73de670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f93c73de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73de9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73deb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f93c73d6ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f93c73d6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73d6e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f93c73d7ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f93c73d7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73d7e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f93c73e4670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f93c73e4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e49f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f93c73e0e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f93c73e0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73df210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f93c73d9ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f93c73d9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73d9e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f93c73e6670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f93c73e6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e69f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f93c73d4ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f93c73d4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c73d4e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c73d3020"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d31b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c73d3340"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c73d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f93c73f5100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f93c73f5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f5480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f93c73ee370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f93c73ee370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73ee6f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73ee880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f93c73eb480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f93c73eb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73eb800"/>
        <function-ref name="write" scoped="" ref="0x7f93c73eb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f93c73e2e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f93c73e2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e1210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f93c73e7e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f93c73e7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e6210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f93c73e1670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f93c73e1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e19f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f93c73e9670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f93c73e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e99f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f93c73f4450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f93c73f4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f93c73e9e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c73e9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e8210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c73f89e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c73f89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c73f8d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c73f7020"/>
        <function-ref name="request" scoped="" ref="0x7f93c73f71b0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c73f7340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c73f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f93c73ef020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f93c73ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73ef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f93c73efcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f93c73efcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73ee0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f93c73d92f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f93c73d92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73d9670"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f93c73daad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f93c73daad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73dae50"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f93c73f2450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c73f2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f93c73da2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f93c73da2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73da670"/>
        <function-ref name="write" scoped="" ref="0x7f93c73da800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f93c73d62f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f93c73d62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73d6670"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f93c73e4e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f93c73e4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e2210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f93c73df670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f93c73df670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73df9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73dfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f93c73f4aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f93c73f4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f93c73f3770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f93c73f3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73f3af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f93c73e6e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f93c73e6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e5210"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f93c73ef670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f93c73ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c73ef9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f93c73e5670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f93c73e5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73e59f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73e5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f93c73dde50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f93c73dde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73db610"/>
        <function-ref name="write" scoped="" ref="0x7f93c73db7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f93c73d37a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f93c73d37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c73d3b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c73d3cb0"/>
        <function-ref name="write" scoped="" ref="0x7f93c73d3e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c73d2020"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c73d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f93c73cbb20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f93c73cbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f93c73c8020"/>
        <function-ref name="changed" scoped="" ref="0x7f93c73c81b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f93c73c8340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f93c73c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f93c73cad20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f93c73cad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f93c73b40e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f93c73af310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f93c73af310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f93c73af690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f93c73ac880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f93c73ac880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73acc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f93c73a1020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f93c73a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73a13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f93c7397bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f93c7397bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c739a020"/>
        <function-ref name="write" scoped="" ref="0x7f93c739a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f93c739a530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f93c739a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f93c739a8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c739aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f93c739b140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f93c739b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c739b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f93c73a0c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f93c73a0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7387020"/>
        <function-ref name="write" scoped="" ref="0x7f93c73871b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f93c7387540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f93c7387540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c73878c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7387a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7387be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7387d70"/>
        <function-ref name="get" scoped="" ref="0x7f93c7386020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c73861b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7386340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c73864d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f93c737d950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f93c737d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dd640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f93c83dd9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f93c7380780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f93c7383150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f93c7383150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c73834d0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7383660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f93c73839f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f93c73839f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7383d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7382020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c73821b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7382340"/>
        <function-ref name="get" scoped="" ref="0x7f93c73824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7382660"/>
        <function-ref name="set" scoped="" ref="0x7f93c73827f0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7382980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f93c7385ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f93c7385ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dd640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f93c83dd9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f93c735dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f93c735ba90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f93c735ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dd640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f93c83dd9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f93c735a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f93c734a020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c734a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dd640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f93c83dd9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c734ae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7349800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7349340"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7349cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f93c7345530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f93c7345530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dd640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f93c83dd9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c73443d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c7344d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c7344890"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c7342260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f93c733d020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f93c733d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c733d3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f93c733d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f93c733d6c0"/>
        <function-ref name="get" scoped="" ref="0x7f93c733d850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f93c733d9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c733db70"/>
        <function-ref name="getMode" scoped="" ref="0x7f93c733dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c733c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c733c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f93c733c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f93c733c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f93c7341e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c7341e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dd640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f93c83dd9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7340ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c733f670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c733f1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c733fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f93c7388590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f93c7388590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7388910"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7388aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7388c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7388dc0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7338020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c73381b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7338340"/>
        <function-ref name="clr" scoped="" ref="0x7f93c73384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f93c7336c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f93c7336c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7335020"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c73351b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f93c7335340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f93c7333020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7335660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c73357f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f93c7335980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f93c7335b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7335ca0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7335e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f93c7334020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f93c73341b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f93c7334340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f93c73345d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f93c7334760"/>
        <function-ref name="set" scoped="" ref="0x7f93c73348f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f93c7334a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f93c7334c10"/>
        <function-ref name="clr" scoped="" ref="0x7f93c73354d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f93c7334da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f93c73379e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f93c73379e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7337d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7336020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c73361b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7336340"/>
        <function-ref name="get" scoped="" ref="0x7f93c73364d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7336660"/>
        <function-ref name="set" scoped="" ref="0x7f93c73367f0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7336980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f93c732e1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f93c732e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f93c732e530"/>
        <function-ref name="stop" scoped="" ref="0x7f93c732e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f93c731dcb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c731dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f93c731c0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f93c731c230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f93c731c3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f93c731c550"/>
        <function-ref name="setCca" scoped="" ref="0x7f93c731c6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f93c731c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f93c7319990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f93c7319990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f93c7319d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f93c731d020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f93c731d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c731d3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c731d530"/>
        <function-ref name="modify" scoped="" ref="0x7f93c731d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c731d850"/>
        <function-ref name="resend" scoped="" ref="0x7f93c731d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f93c73226c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f93c73226c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f93c7322a40"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7322bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f93c731b150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f93c731b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f93c731b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f93c730f970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c730f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f93c730fcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f93c730fe80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f93c730e030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f93c730e1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f93c730e350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f93c730e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f93c7302c60" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f93c7302c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f93c7305210"/>
        <function-ref name="clear" scoped="" ref="0x7f93c7305940"/>
        <function-ref name="isValid" scoped="" ref="0x7f93c7306ac0"/>
        <function-ref name="set" scoped="" ref="0x7f93c72fc090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f93c72e9020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c72e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72e93a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c72e9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f93c72e9890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f93c72e9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72e9c10"/>
        <function-ref name="write" scoped="" ref="0x7f93c72e9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f93c730e900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f93c730e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f93c730ec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f93c72ec530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f93c72ec530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c72ec8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f93c72fba80" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f93c72fba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f93c72fbe00"/>
        <function-ref name="disable" scoped="" ref="0x7f93c72fa020"/>
        <function-ref name="captured" scoped="" ref="0x7f93c72fa1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f93c72fa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f93c730dae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f93c730dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7309390"/>
        <function-ref name="fired" scoped="" ref="0x7f93c730b360"/>
        <function-ref name="startAt" scoped="" ref="0x7f93c730bce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c730b820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f93c7309850"/>
        <function-ref name="start" scoped="" ref="0x7f93c730c970"/>
        <function-ref name="stop" scoped="" ref="0x7f93c730ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f93c7309d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7309d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f93c73080a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f93c7308230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f93c73083c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f93c7308550"/>
        <function-ref name="getPower" scoped="" ref="0x7f93c73086e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f93c7308870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f93c72ee550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c72ee550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72ee8d0"/>
        <function-ref name="write" scoped="" ref="0x7f93c72eea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f93c72eee00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f93c72eee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72ed1c0"/>
        <function-ref name="write" scoped="" ref="0x7f93c72ed350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f93c72e2d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f93c72e2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c72e60e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f93c72e6270"/>
        <function-ref name="sfd" scoped="" ref="0x7f93c72e6400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f93c7310bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c7310bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c730f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c730f1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f93c730f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c730f4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f93c730f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f93c72f0d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c72f0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f93c72ef0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f93c72ef270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f93c72ef400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f93c72ecc60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c72ecc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c72eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f93c72f49b0" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f93c72f49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c72f4d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c72f2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c72f21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c72f2340"/>
        <function-ref name="get" scoped="" ref="0x7f93c72f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c72f2660"/>
        <function-ref name="set" scoped="" ref="0x7f93c72f27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c72f2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c7311c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c7311c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c7310020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f93c7308bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c7308bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7307020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f93c73071b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f93c7307340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f93c72f5e80" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f93c72f5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c72fb220"/>
        <function-ref name="isSet" scoped="" ref="0x7f93c72fb3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c72fb540"/>
        <function-ref name="set" scoped="" ref="0x7f93c72fb6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f93c72eb3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c72eb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72eb960"/>
        <function-ref name="write" scoped="" ref="0x7f93c72ebaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f93c72f0020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f93c72f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c72f03a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c72f0530"/>
        <function-ref name="request" scoped="" ref="0x7f93c72f06c0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c72f0850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c72f09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f93c72fa690" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f93c72fa690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c72fab10"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c72faca0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c72fae30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c72f4020"/>
        <function-ref name="get" scoped="" ref="0x7f93c72f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c72f4340"/>
        <function-ref name="set" scoped="" ref="0x7f93c72f44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c72f4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f93c72e8130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f93c72e8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72e84b0"/>
        <function-ref name="write" scoped="" ref="0x7f93c72e8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f93c72e89c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f93c72e89c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72e8d40"/>
        <function-ref name="write" scoped="" ref="0x7f93c72e7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f93c72ed6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f93c72ed6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c72eda50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f93c72f2cd0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f93c72f2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c72f10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c72f1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c72f13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c72f1550"/>
        <function-ref name="get" scoped="" ref="0x7f93c72f16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c72f1870"/>
        <function-ref name="set" scoped="" ref="0x7f93c72f1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f93c72f1b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f93c72e66c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c72e66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c72e6a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c72e6bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c72e6d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c72e5020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c72e51b0"/>
        <function-ref name="get" scoped="" ref="0x7f93c72e5340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c72e54d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c72e5b10"/>
        <function-ref name="set" scoped="" ref="0x7f93c72e5660"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c72e57f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c72e5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f93c72ea5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c72ea5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72ea960"/>
        <function-ref name="write" scoped="" ref="0x7f93c72eaaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f93c7310320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f93c7310320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f93c73106a0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7310830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f93c72ef780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f93c72ef780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c72efb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c72efc90"/>
        <function-ref name="write" scoped="" ref="0x7f93c72efe20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c72ee020"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c72ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f93c72edde0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f93c72edde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c72ec180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f93c72ebe80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f93c72ebe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c72ea220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f93c730d0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f93c730d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f93c730d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f93c7248c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c7248c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7247210"/>
        <function-ref name="write" scoped="" ref="0x7f93c72473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f93c7252020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f93c7252020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c72523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f93c724bc70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c724bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c724a020"/>
        <function-ref name="write" scoped="" ref="0x7f93c724a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f93c7246670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7246670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72469f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7246b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f93c723fe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f93c723fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c723d210"/>
        <function-ref name="write" scoped="" ref="0x7f93c723d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f93c7246e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f93c7246e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7244210"/>
        <function-ref name="write" scoped="" ref="0x7f93c72443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f93c72322f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f93c72322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7232670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7232800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f93c72342f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f93c72342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7234670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7234800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f93c7250370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f93c7250370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c72506f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f93c723a670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f93c723a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c723a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c723ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f93c72352f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c72352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7235670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7235800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f93c724ac60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f93c724ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7249020"/>
        <function-ref name="write" scoped="" ref="0x7f93c72491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f93c7249c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f93c7249c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7248020"/>
        <function-ref name="write" scoped="" ref="0x7f93c72481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f93c7240670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f93c7240670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72409f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7240b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f93c7242e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f93c7242e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7241210"/>
        <function-ref name="write" scoped="" ref="0x7f93c72413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f93c7244670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f93c7244670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72449f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7244b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f93c72548f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c72548f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f93c7254c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f93c7254e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f93c7253020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f93c724fd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c724fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c724e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f93c724e370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f93c724e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c724e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f93c7239a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f93c7239a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7239df0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7238020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f93c724eac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f93c724eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c724ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f93c7235ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7235ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7235e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7234020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f93c724f060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c724f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c724f3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f93c723be50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f93c723be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c723a210"/>
        <function-ref name="write" scoped="" ref="0x7f93c723a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f93c7249480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f93c7249480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7249800"/>
        <function-ref name="write" scoped="" ref="0x7f93c7249990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f93c724a480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c724a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c724a800"/>
        <function-ref name="write" scoped="" ref="0x7f93c724a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f93c7253940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f93c7253940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7253cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f93c723ce50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f93c723ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c723b210"/>
        <function-ref name="write" scoped="" ref="0x7f93c723b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f93c723d670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f93c723d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c723d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c723db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f93c723b670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f93c723b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c723b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c723bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f93c7233ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f93c7233ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7233e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7232020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f93c7234ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f93c7234ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7234e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7233020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f93c7241670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f93c7241670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72419f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7241b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f93c723de50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f93c723de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c723c210"/>
        <function-ref name="write" scoped="" ref="0x7f93c723c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f93c7236ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f93c7236ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7236e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7235020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f93c7243670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f93c7243670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72439f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7243b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f93c7232ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f93c7232ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c7232e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c7231020"/>
        <function-ref name="write" scoped="" ref="0x7f93c72311b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c7231340"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c72314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f93c72532f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f93c72532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7253670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f93c724b490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f93c724b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c724b810"/>
        <function-ref name="write" scoped="" ref="0x7f93c724b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f93c7248480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f93c7248480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7248800"/>
        <function-ref name="write" scoped="" ref="0x7f93c7248990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f93c7240e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f93c7240e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c723f210"/>
        <function-ref name="write" scoped="" ref="0x7f93c723f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f93c7244e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f93c7244e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7243210"/>
        <function-ref name="write" scoped="" ref="0x7f93c72433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f93c723f670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f93c723f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c723f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c723fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f93c7247670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7247670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72479f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7247b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f93c7252670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f93c7252670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c72529f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f93c7247e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c7247e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7246210"/>
        <function-ref name="write" scoped="" ref="0x7f93c72463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c7255c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c7255c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7254020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c72541b0"/>
        <function-ref name="request" scoped="" ref="0x7f93c7254340"/>
        <function-ref name="granted" scoped="" ref="0x7f93c72544d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7254660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f93c724d160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f93c724d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c724d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f93c724de00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f93c724de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c724b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f93c72362f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f93c72362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7236670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7236800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f93c7238ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7238ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7238e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7236020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f93c724f6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c724f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c724fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f93c72382f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f93c72382f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7238670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7238800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f93c72332f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f93c72332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7233670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7233800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f93c7241e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f93c7241e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7240210"/>
        <function-ref name="write" scoped="" ref="0x7f93c72403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f93c723c670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f93c723c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c723c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c723cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f93c7252cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f93c7252cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c72500a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f93c72509c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f93c72509c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7250d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f93c7243e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f93c7243e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7242210"/>
        <function-ref name="write" scoped="" ref="0x7f93c72423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f93c724d7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f93c724d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c724db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f93c7242670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f93c7242670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72429f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7242b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f93c723ae50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f93c723ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7239610"/>
        <function-ref name="write" scoped="" ref="0x7f93c72397a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f93c72317a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f93c72317a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c7231b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c7231cb0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7231e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c722f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c722f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f93c7224df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f93c7224df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c72211c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f93c7221350"/>
        <function-ref name="sfd" scoped="" ref="0x7f93c72214e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c72217c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c72217c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7221b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f93c7220020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f93c7220020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f93c72203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f93c72245c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f93c72245c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f93c7224940"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7224ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f93c7218380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f93c7218380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7218700"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7218890"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7218a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7218bb0"/>
        <function-ref name="get" scoped="" ref="0x7f93c7218d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7217020"/>
        <function-ref name="set" scoped="" ref="0x7f93c72171b0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7217340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f93c7211b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f93c7211b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f93c7210020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f93c72101b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f93c7210340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f93c72104d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f93c7210660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f93c72107f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f93c7210980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f93c7210b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f93c7210ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f93c7210e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f93c720f020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f93c720f1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f93c720f340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f93c720f5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f93c720f760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f93c71f99d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f93c71f99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c71f9d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c71f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f93c720fd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f93c720fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f93c720c330"/>
        <function-ref name="clear" scoped="" ref="0x7f93c720ca60"/>
        <function-ref name="isValid" scoped="" ref="0x7f93c720dba0"/>
        <function-ref name="set" scoped="" ref="0x7f93c720b210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f93c72176b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f93c72176b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c7217a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7217bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c7217d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7216020"/>
        <function-ref name="get" scoped="" ref="0x7f93c72161b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7216340"/>
        <function-ref name="set" scoped="" ref="0x7f93c72164d0"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7216660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f93c7209cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7209cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72080a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7208230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f93c7208590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f93c7208590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7208910"/>
        <function-ref name="write" scoped="" ref="0x7f93c7208aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f93c72076d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f93c72076d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7207a50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7207be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f93c7212330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c7212330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f93c72126b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f93c7212840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f93c72129d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f93c7212b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f93c7212cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f93c7212e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f93c721b550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f93c721b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c721b8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f93c721ba60"/>
        <function-ref name="sfd" scoped="" ref="0x7f93c721bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f93c72133a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f93c72133a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7213720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f93c7219020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f93c7219020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f93c72193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f93c7219530"/>
        <function-ref name="toggle" scoped="" ref="0x7f93c72196c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f93c7219850"/>
        <function-ref name="get" scoped="" ref="0x7f93c72199e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f93c7219b70"/>
        <function-ref name="set" scoped="" ref="0x7f93c7219d00"/>
        <function-ref name="clr" scoped="" ref="0x7f93c7218020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f93c7206020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7206020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72063a0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7206530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c721c620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c721c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c721c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f93c72111e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c72111e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7211560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f93c72116f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f93c7211880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c721a020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c721a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c721a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f93c72156e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f93c72156e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7215a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7215bf0"/>
        <function-ref name="request" scoped="" ref="0x7f93c7215d80"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7214020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c72141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f93c7208e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f93c7208e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c72071c0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7207350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f93c7214530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f93c7214530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c72148b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c7214a40"/>
        <function-ref name="write" scoped="" ref="0x7f93c7214bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c7214d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c7213020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f93c72068b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f93c72068b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7206e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f93c721a7c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f93c721a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f93c721ab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f93c7205150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c7205150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c72054d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c7205660"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c72057f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c7205980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c7205b10"/>
        <function-ref name="get" scoped="" ref="0x7f93c7205ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c7205e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c72044d0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7204020"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c72041b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c7204340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f93c72093e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c72093e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7209760"/>
        <function-ref name="write" scoped="" ref="0x7f93c72098f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f93c720bb10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f93c720bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7209020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f93c7216a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f93c7216a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f93c7216dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f93c7215020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f93c72151b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f93c7215340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f93c7213ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c7213ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7212020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f93c721cca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f93c721cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f93c721b0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c721b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f93c7199a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f93c7199a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f93c7199df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f93c719d670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c719d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f93c719d9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f93c719db80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f93c719dd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f93c719a020"/>
        <function-ref name="getPower" scoped="" ref="0x7f93c719a1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f93c719a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f93c7198550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f93c7198550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f93c7197b00"/>
        <function-ref name="clear" scoped="" ref="0x7f93c71952a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f93c71973d0"/>
        <function-ref name="set" scoped="" ref="0x7f93c71959d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f93c71990c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c71990c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7199440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f93c71995d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f93c7199760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f93c7190480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f93c7190480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7190800"/>
        <function-ref name="isSet" scoped="" ref="0x7f93c7190990"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7190b20"/>
        <function-ref name="set" scoped="" ref="0x7f93c7190cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f93c7194660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f93c7194660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f93c7193ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f93c7191460"/>
        <function-ref name="isValid" scoped="" ref="0x7f93c71935b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7191b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f93c719a6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f93c719a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f93c719aa60"/>
        <function-ref name="noAck" scoped="" ref="0x7f93c719abf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f93c719ad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f93c7189020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f93c7189020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f93c71893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f93c718fd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c718fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f93c718c0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f93c718c270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f93c718c400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f93c718c590"/>
        <function-ref name="getPower" scoped="" ref="0x7f93c718c720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f93c718c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f93c71804a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f93c71804a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c7180820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c71809b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7180b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7180cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c7180e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f93c7189a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f93c7189a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f93c7187020"/>
        <function-ref name="clear" scoped="" ref="0x7f93c7187750"/>
        <function-ref name="isValid" scoped="" ref="0x7f93c71888d0"/>
        <function-ref name="set" scoped="" ref="0x7f93c7187e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f93c718b640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c718b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f93c718b9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f93c718bb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f93c718bce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f93c71828b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f93c71828b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c7182c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f93c7182dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7180020"/>
        <function-ref name="set" scoped="" ref="0x7f93c71801b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f93c717f3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f93c717f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c717e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f93c717e6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f93c717e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c717d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f93c7186af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f93c7186af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f93c71830d0"/>
        <function-ref name="clear" scoped="" ref="0x7f93c7183800"/>
        <function-ref name="isValid" scoped="" ref="0x7f93c7184970"/>
        <function-ref name="set" scoped="" ref="0x7f93c7182020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f93c718cc50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f93c718cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f93c718b020"/>
        <function-ref name="noAck" scoped="" ref="0x7f93c718b1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f93c718b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f93c712d020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f93c712d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c712dc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f93c712c300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f93c712c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f93c712b150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f93c712bad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f93c712b610"/>
        <function-ref name="overflow" scoped="" ref="0x7f93c712a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f93c7127450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f93c7127450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f93c7124a20"/>
        <function-ref name="fired" scoped="" ref="0x7f93c7125020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f93c7125da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f93c7125920"/>
        <function-ref name="getdt" scoped="" ref="0x7f93c71234a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f93c7123020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f93c71254a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f93c7126090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f93c7124410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f93c7126560"/>
        <function-ref name="stop" scoped="" ref="0x7f93c7126a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f93c7112c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f93c7112c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7111210"/>
        <function-ref name="write" scoped="" ref="0x7f93c71113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f93c711c020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f93c711c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c711c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f93c7116c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f93c7116c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7115020"/>
        <function-ref name="write" scoped="" ref="0x7f93c71151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f93c7110670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f93c7110670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c71109f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7110b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f93c7109e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f93c7109e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7108210"/>
        <function-ref name="write" scoped="" ref="0x7f93c71083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f93c7110e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f93c7110e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c710f210"/>
        <function-ref name="write" scoped="" ref="0x7f93c710f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f93c70fc2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f93c70fc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c70fc670"/>
        <function-ref name="write" scoped="" ref="0x7f93c70fc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f93c70fe2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f93c70fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c70fe670"/>
        <function-ref name="write" scoped="" ref="0x7f93c70fe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f93c711b370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f93c711b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c711b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f93c7104670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f93c7104670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c71049f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7104b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f93c71002f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f93c71002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7100670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7100800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f93c7115c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f93c7115c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7113020"/>
        <function-ref name="write" scoped="" ref="0x7f93c71131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f93c7113c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f93c7113c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7112020"/>
        <function-ref name="write" scoped="" ref="0x7f93c71121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f93c710a670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f93c710a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c710a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c710ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f93c710ce50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f93c710ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c710b210"/>
        <function-ref name="write" scoped="" ref="0x7f93c710b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f93c710f670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f93c710f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c710f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c710fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f93c711e970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f93c711e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f93c711ecf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f93c711ee80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f93c711d030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f93c7119d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f93c7119d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c71180a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f93c7118370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f93c7118370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c71187f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f93c7103a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f93c7103a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7103df0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7102020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f93c7118ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f93c7118ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7118e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f93c7100ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f93c7100ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7100e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c70fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f93c7119060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f93c7119060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c71193e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f93c7105e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f93c7105e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7104210"/>
        <function-ref name="write" scoped="" ref="0x7f93c71043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f93c7113480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f93c7113480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7113800"/>
        <function-ref name="write" scoped="" ref="0x7f93c7113990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f93c7115480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f93c7115480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7115800"/>
        <function-ref name="write" scoped="" ref="0x7f93c7115990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f93c711d950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f93c711d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c711dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f93c7106e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f93c7106e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7105210"/>
        <function-ref name="write" scoped="" ref="0x7f93c71053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f93c7108670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f93c7108670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c71089f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7108b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f93c7105670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f93c7105670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c71059f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7105b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f93c70fdad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f93c70fdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c70fde50"/>
        <function-ref name="write" scoped="" ref="0x7f93c70fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f93c70fead0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f93c70fead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c70fee50"/>
        <function-ref name="write" scoped="" ref="0x7f93c70fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f93c710b670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f93c710b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c710b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c710bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f93c7108e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f93c7108e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7106210"/>
        <function-ref name="write" scoped="" ref="0x7f93c71063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f93c7101ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f93c7101ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7101e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7100020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f93c710e670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f93c710e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c710e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c710eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f93c70fcad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f93c70fcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c70fce50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c70fb020"/>
        <function-ref name="write" scoped="" ref="0x7f93c70fb1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c70fb340"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c70fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f93c711d300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f93c711d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c711d680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f93c7116490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f93c7116490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7116810"/>
        <function-ref name="write" scoped="" ref="0x7f93c71169a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f93c7112480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f93c7112480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7112800"/>
        <function-ref name="write" scoped="" ref="0x7f93c7112990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f93c710ae50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f93c710ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7109210"/>
        <function-ref name="write" scoped="" ref="0x7f93c71093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f93c710fe50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f93c710fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c710e210"/>
        <function-ref name="write" scoped="" ref="0x7f93c710e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f93c7109670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f93c7109670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c71099f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7109b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f93c7111670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f93c7111670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c71119f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7111b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f93c711c670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f93c711c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c711c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f93c7111e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f93c7111e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7110210"/>
        <function-ref name="write" scoped="" ref="0x7f93c71103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c711fd00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c711fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c711e0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c711e230"/>
        <function-ref name="request" scoped="" ref="0x7f93c711e3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f93c711e550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c711e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f93c7117160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f93c7117160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c71174e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f93c7117e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f93c7117e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c71161c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f93c71012f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f93c71012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7101670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7101800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f93c7102ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f93c7102ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7102e50"/>
        <function-ref name="write" scoped="" ref="0x7f93c7101020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f93c71196b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f93c71196b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7119a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f93c71022f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f93c71022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7102670"/>
        <function-ref name="write" scoped="" ref="0x7f93c7102800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f93c70fd2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f93c70fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c70fd670"/>
        <function-ref name="write" scoped="" ref="0x7f93c70fd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f93c710be50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f93c710be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c710a210"/>
        <function-ref name="write" scoped="" ref="0x7f93c710a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f93c7106670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f93c7106670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c71069f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c7106b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f93c711ccc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f93c711ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c711b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f93c711b9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f93c711b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c711bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f93c710ee50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f93c710ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c710c210"/>
        <function-ref name="write" scoped="" ref="0x7f93c710c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f93c71177b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f93c71177b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f93c7117b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f93c710c670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f93c710c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c710c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f93c710cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f93c7104e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f93c7104e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f93c7103610"/>
        <function-ref name="write" scoped="" ref="0x7f93c71037a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f93c70fb7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f93c70fb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f93c70fbb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f93c70fbcb0"/>
        <function-ref name="write" scoped="" ref="0x7f93c70fbe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f93c70fa020"/>
        <function-ref name="readDone" scoped="" ref="0x7f93c70fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f93c70d1a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f93c70d1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f93c70d1da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f93c70d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f93c70cf920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f93c70cf920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c70d1560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c70d5990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c70d5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c70d5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f93c70cba20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f93c70cba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f93c70cbda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f93c70c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f93c70cc940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f93c70cc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c70cb560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c70cc080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c70cc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c70cc400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f93c70d3aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f93c70d3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f93c70d3e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f93c70cd020"/>
        <function-ref name="isState" scoped="" ref="0x7f93c70cd1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f93c70cd340"/>
        <function-ref name="requestState" scoped="" ref="0x7f93c70cd4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f93c70cd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f93c70af020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f93c70af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c70af3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c70af530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c70af6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c70af850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c70af9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f93c70b0220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c70b0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c70b05a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c70b0730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c70b08c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c70b0a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c70b0be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f93c70abe60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f93c70abe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c70aa210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c70aa3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c70aa530"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c70aa6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c70aa850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f93c70aea10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c70aea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c70aed90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c70ab020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c70ab1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c70ab340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c70ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f93c70a98f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f93c70a98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f93c70a9c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f93c70a9e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c70ab750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c70ab750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c70abad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f93c70a8170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c70a8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f93c70a84f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f93c70a8680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f93c70a8810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f93c70aaae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f93c70aaae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f93c70aae60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f93c70a9020"/>
        <function-ref name="isState" scoped="" ref="0x7f93c70a91b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f93c70a9340"/>
        <function-ref name="requestState" scoped="" ref="0x7f93c70a94d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f93c70a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f93c70ac690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f93c70ac690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f93c70aca10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f93c70acba0"/>
        <function-ref name="isState" scoped="" ref="0x7f93c70acd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f93c7097020"/>
        <function-ref name="requestState" scoped="" ref="0x7f93c70971b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f93c7097340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f93c7090950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f93c7090950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7090cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c7093aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c7093aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7093e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f93c7090200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f93c7090200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7090580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f93c708b3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f93c708b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c708b770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c708cb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c708cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c708b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c708fe30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c708fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c708c1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f93c708ba70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c708ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f93c708bdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f93c708a020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f93c708a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f93c708c570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f93c708c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c708c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f93c705d020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f93c705d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c705d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f93c705d6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f93c705d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c705da30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c705dbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c705dd50"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c705c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c705c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f93c70618e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c70618e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7061c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7061df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7060020"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c70601b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c7060340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f93c7060c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f93c7060c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c705f0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c705f230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c705f3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c705f550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c705f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c70605e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c70605e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7060960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c7062be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c7062be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7061020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c70611b0"/>
        <function-ref name="request" scoped="" ref="0x7f93c7061340"/>
        <function-ref name="granted" scoped="" ref="0x7f93c70614d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c7061660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f93c705fa50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f93c705fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c705fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f93c705e170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f93c705e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c705e4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c705e680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c705e810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c705e9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c705eb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f93c7053d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f93c7053d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7052180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7052310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c70524a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7052630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c70527c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f93c7052b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f93c7052b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7051020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f93c7023db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f93c7023db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c7022180"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c7022310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f93c70512f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c70512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f93c7051670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f93c7051800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f93c7051990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f93c7051b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f93c7051cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f93c7051e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f93c7055a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f93c7055a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7055da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c7054020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c70541b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7054340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c70544d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f93c7050b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f93c7050b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f93c704f020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f93c704f1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f93c704f340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f93c704f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f93c7050170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c7050170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f93c70504f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f93c7050680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f93c7050810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f93c7055370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f93c7055370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c70556f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f93c70577b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f93c70577b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c7057b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c7057cc0"/>
        <function-ref name="request" scoped="" ref="0x7f93c7057e50"/>
        <function-ref name="granted" scoped="" ref="0x7f93c7056020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c70561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f93c70564d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f93c70564d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c7056850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c70569e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7056b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c7056d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c7055020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f93c7054840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f93c7054840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c7054bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f93c7053020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f93c7053020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c70533a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c7053530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c70536c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c7053850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c70539e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f93c7003dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f93c7003dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f93c7002180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f93c7002410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f93c7002410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f93c7002790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f93c7002920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f93c7002ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f93c7002c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f93c6ff7b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f93c6ff7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f93c6ff6020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f93c6ff61b0"/>
        <function-ref name="start" scoped="" ref="0x7f93c6ff6340"/>
        <function-ref name="stop" scoped="" ref="0x7f93c6ff64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f93c6ff5860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f93c6ff5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6ff5be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6ff5d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6ff4020"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6ff41b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6ff4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f93c6ff4690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f93c6ff4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c6ff4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f93c6ffbce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c6ffbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6ff80a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6ff8230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6ff83c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6ff8550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6ff86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f93c6ff7080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c6ff7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f93c6ff7400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f93c6ff7590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f93c6ff7720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f93c6ff78b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f93c6ff6800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f93c6ff6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f93c6ff6b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f93c6ff6d10"/>
        <function-ref name="isState" scoped="" ref="0x7f93c6ff5020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f93c6ff51b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f93c6ff5340"/>
        <function-ref name="forceState" scoped="" ref="0x7f93c6ff54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f93c6ff4d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f93c6ff4d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f93c6ff3180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f93c6ff3310"/>
        <function-ref name="start" scoped="" ref="0x7f93c6ff34a0"/>
        <function-ref name="stop" scoped="" ref="0x7f93c6ff3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c6ff8980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c6ff8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c6ff8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f93c6ff02d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c6ff02d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f93c6ff0650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f93c6ff07e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f93c6ff0970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f93c6ff0b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f93c6ff2580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f93c6ff2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f93c6ff2900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f93c6ff2a90"/>
        <function-ref name="isState" scoped="" ref="0x7f93c6ff2c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f93c6ff2db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f93c6fe7020"/>
        <function-ref name="forceState" scoped="" ref="0x7f93c6fe71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f93c6fe2d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f93c6fe2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6fe1180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6fe1310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6fe14a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6fe1630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6fe17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f93c6fe5350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c6fe5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6fe56d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6fe5860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6fe59f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6fe5b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6fe5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f93c6fe2020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f93c6fe2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f93c6fe23a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f93c6fe2530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f93c6fe26c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f93c6fe2850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f93c6fe29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f93c6fdd1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c6fdd1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f93c6fdd540"/>
        <function-ref name="noAck" scoped="" ref="0x7f93c6fdd6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f93c6fdd860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f93c6fe0410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f93c6fe0410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f93c6fe0790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f93c6fe0920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f93c6fe0ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f93c6fe0c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f93c6fe0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f93c6fbd690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f93c6fbd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c6fbda10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f93c6fbf860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f93c6fbf860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6fbfbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6fbfd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6fbd020"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6fbd1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6fbd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f93c6fbb610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f93c6fbb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f93c6fbb990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f93c6fbbb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f93c6fbbcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f93c6fbbe40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f93c6fba020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f93c6fba1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f93c6fba340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f93c6fba4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f93c6fba660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f93c6fba7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f93c6fba980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f93c6fbab10"/>
        <function-ref name="sync" scoped="" ref="0x7f93c6fbaca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f93c6fb9020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f93c6fb91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f93c6fc08b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f93c6fc08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f93c6fc0c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f93c6fc0dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f93c6fbf020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f93c6fbf1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f93c6fbf340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f93c6fbf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f93c6fc1ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f93c6fc1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f93c6fc00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f93c6fb81f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f93c6fb81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f93c6fb8570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f93c6fb8700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f93c6fb8890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f93c6fb8a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f93c6fb8bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f93c6fb8d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f93c6fc2a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f93c6fc2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c6fc2e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c6fc1020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6fc11b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6fc1340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c6fc14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f93c6fc6020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f93c6fc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6fc63a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6fc6530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6fc66c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6fc6850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6fc69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f93c6fc4df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f93c6fc4df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c6fc31c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f93c6fbdce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f93c6fbdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f93c6fbc0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f93c6fbc230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f93c6fbc3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f93c6fbc550"/>
        <function-ref name="getPower" scoped="" ref="0x7f93c6fbc6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f93c6fbc870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f93c6fb94d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f93c6fb94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f93c6fb9950"/>
        <function-ref name="changed" scoped="" ref="0x7f93c6fb9ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f93c6fb9c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f93c6fb9e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f93c6fbcb70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f93c6fbcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6fbb020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f93c6fbb1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f93c6fbb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c6fc4210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c6fc4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c6fc4590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f93c6fb7d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f93c6fb7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f93c6fb60e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f93c6fb6270"/>
        <function-ref name="led1On" scoped="" ref="0x7f93c6fb6400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f93c6fb6590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f93c6fb6720"/>
        <function-ref name="get" scoped="" ref="0x7f93c6fb68b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f93c6fb6a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f93c6fb51b0"/>
        <function-ref name="set" scoped="" ref="0x7f93c6fb6bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f93c6fb6d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f93c6fb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f93c6fc3470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f93c6fc3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f93c6fc37f0"/>
        <function-ref name="source" scoped="" ref="0x7f93c6fc3980"/>
        <function-ref name="address" scoped="" ref="0x7f93c6fc3b10"/>
        <function-ref name="destination" scoped="" ref="0x7f93c6fc3ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f93c6fc3e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f93c6fc2020"/>
        <function-ref name="type" scoped="" ref="0x7f93c6fc21b0"/>
        <function-ref name="setType" scoped="" ref="0x7f93c6fc2340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f93c6fc24d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f93c6fc2660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f93c6fc27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f93c6fb70f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f93c6fb70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f93c6fb7470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f93c6fb7600"/>
        <function-ref name="request" scoped="" ref="0x7f93c6fb7790"/>
        <function-ref name="granted" scoped="" ref="0x7f93c6fb7920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f93c6fb7ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f93c6f32360" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f93c6f32360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f93c6f326e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f93c6f32870"/>
        <function-ref name="start" scoped="" ref="0x7f93c6f32a00"/>
        <function-ref name="stop" scoped="" ref="0x7f93c6f32b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f93c6f313f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f93c6f313f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6f31770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6f31900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6f31a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6f31c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6f31db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f93c6f2e1d0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f93c6f2e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c6f2e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f93c6f2e7e0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f93c6f2e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c6f2eb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c6f2ecf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6f2ee80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6f2d030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c6f2d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f93c6f2ba20" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f93c6f2ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83dee30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f93c83dd200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f93c6f28020"/>
        <function-ref name="clear" scoped="" ref="0x7f93c6f28750"/>
        <function-ref name="isValid" scoped="" ref="0x7f93c6f2a890"/>
        <function-ref name="set" scoped="" ref="0x7f93c6f28e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f93c6f23890" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f93c6f23890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f93c6f23c10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f93c6f23da0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f93c6f22020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f93c6f221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c6f2f5c0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c6f2f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c6f2f940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f93c6f2cb20" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f93c6f2cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f93c6f2b020"/>
        <function-ref name="noAck" scoped="" ref="0x7f93c6f2b1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f93c6f2b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f93c6f2d470" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f93c6f2d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f93c6f2d7f0"/>
        <function-ref name="source" scoped="" ref="0x7f93c6f2d980"/>
        <function-ref name="address" scoped="" ref="0x7f93c6f2db10"/>
        <function-ref name="destination" scoped="" ref="0x7f93c6f2dca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f93c6f2de30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f93c6f2c020"/>
        <function-ref name="type" scoped="" ref="0x7f93c6f2c1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f93c6f2c340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f93c6f2c4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f93c6f2c660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f93c6f2c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f93c6f27af0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f93c6f27af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f93c83de680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f93c83de9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f93c6f240d0"/>
        <function-ref name="clear" scoped="" ref="0x7f93c6f24800"/>
        <function-ref name="isValid" scoped="" ref="0x7f93c6f26970"/>
        <function-ref name="set" scoped="" ref="0x7f93c6f23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f93c6e8c020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f93c6e8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6e8c3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6e8c530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6e8c6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6e8c850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6e8c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f93c6e8cc30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f93c6e8cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c6e8b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c6e8b1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6e8b340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6e8b4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c6e8b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f93c6e8b8b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f93c6e8b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f93c6e8bc30"/>
        <function-ref name="source" scoped="" ref="0x7f93c6e8bdc0"/>
        <function-ref name="address" scoped="" ref="0x7f93c6e8a020"/>
        <function-ref name="destination" scoped="" ref="0x7f93c6e8a1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f93c6e8a340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f93c6e8a4d0"/>
        <function-ref name="type" scoped="" ref="0x7f93c6e8a660"/>
        <function-ref name="setType" scoped="" ref="0x7f93c6e8a7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f93c6e8a980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f93c6e8ab10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f93c6e8aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f93c6e89020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f93c6e89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f93c6e893a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f93c6e89530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f93c6e896c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f93c653ee60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f93c653ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c653d210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c653d3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c653d530"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c653d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c653d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f93c653daa0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f93c653daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c653de20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c653b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c653b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c653b340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c653b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f93c653b720" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f93c653b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f93c653baa0"/>
        <function-ref name="source" scoped="" ref="0x7f93c653bc30"/>
        <function-ref name="address" scoped="" ref="0x7f93c653bdc0"/>
        <function-ref name="destination" scoped="" ref="0x7f93c653a020"/>
        <function-ref name="setSource" scoped="" ref="0x7f93c653a1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f93c653a340"/>
        <function-ref name="type" scoped="" ref="0x7f93c653a4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f93c653a660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f93c653a7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f93c653a980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f93c653ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f93c653ada0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f93c653ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f93c6539180"/>
        <function-ref name="noAck" scoped="" ref="0x7f93c6539310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f93c65394a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f93c65307f0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f93c65307f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6530b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6530d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c652f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c652f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c652f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f93c652f5f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c652f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c652f970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c652fb00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c652fc90"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c652fe20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c652e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f93c652e270" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f93c652e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f93c652e5f0"/>
        <function-ref name="source" scoped="" ref="0x7f93c652e780"/>
        <function-ref name="address" scoped="" ref="0x7f93c652e910"/>
        <function-ref name="destination" scoped="" ref="0x7f93c652eaa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f93c652ec30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f93c652edc0"/>
        <function-ref name="type" scoped="" ref="0x7f93c652d020"/>
        <function-ref name="setType" scoped="" ref="0x7f93c652d1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f93c652d340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f93c652d4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f93c652d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f93c6ef3930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c6ef3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6ef3cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6ef3e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6ef0020"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6ef01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6ef0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f93c6ea1400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f93c6ea1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6ea17a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6ea1930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6ea1ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6ea1c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6ea1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f93c6ea3df0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f93c6ea3df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f93c6ea21c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6ea2350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6ea24e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f93c6ea2670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f93c6ea2800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f93c6e9f720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f93c6e9f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c6e9faa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c6e9fc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6e9fdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6e9e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c6e9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f93c6ea2b80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f93c6ea2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f93c6ea1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f93c6e9e480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f93c6e9e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c6e9e800"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c6e9e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f93c6e9ec60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f93c6e9ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f93c6e9c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f93c6e9c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f93c6ea0060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f93c6ea0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f93c6ea03e0"/>
        <function-ref name="source" scoped="" ref="0x7f93c6ea0570"/>
        <function-ref name="address" scoped="" ref="0x7f93c6ea0700"/>
        <function-ref name="destination" scoped="" ref="0x7f93c6ea0890"/>
        <function-ref name="setSource" scoped="" ref="0x7f93c6ea0a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f93c6ea0bb0"/>
        <function-ref name="type" scoped="" ref="0x7f93c6ea0d40"/>
        <function-ref name="setType" scoped="" ref="0x7f93c6e9f020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f93c6e9f1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f93c6e9f340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f93c6e9f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f93c6e7f020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f93c6e7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f93c6e7f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f93c6e7f530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f93c6e7f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f93c6e7f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f93c6e7f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f93c6e80910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f93c6e80910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f93c6e80c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f93c6e7fc30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f93c6e7fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f93c6e7e020"/>
        <function-ref name="source" scoped="" ref="0x7f93c6e7e1b0"/>
        <function-ref name="address" scoped="" ref="0x7f93c6e7e340"/>
        <function-ref name="destination" scoped="" ref="0x7f93c6e7e4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f93c6e7e660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f93c6e7e7f0"/>
        <function-ref name="type" scoped="" ref="0x7f93c6e7e980"/>
        <function-ref name="setType" scoped="" ref="0x7f93c6e7eb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f93c6e7eca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f93c6e7ee30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f93c6e7d020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f93c83d3c60" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f93c83d4830" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f93c83c9d50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f93c83c5c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f93c83c5940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f93c83ca030" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f93c83cc870" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f93c83c8b40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f93c83c8550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f93c83c88b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f93c83c5020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f93c83c6cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f93c83c65a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f93c83c6320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f93c83c95b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f93c83cc0e0" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f93c83cadd0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f93c83ca7e0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f93c83cab40" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f93c8387b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f93c838ade0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f93c8387420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f93c838a700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f93c83895a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f93c838d8f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f93c838a020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f93c8389cc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f93c84f77e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f93c87bf700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f93c841da80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f93c841b1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f93c841d2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f93c8595020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f93c8f35e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f93c887de20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f93c887d610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f93c8871770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f93c886f020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f93c8323020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f93c83237d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f93c8322020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f93c8321020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f93c831f7d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f93c831e020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f93c83227b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f93c831eb90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f93c831e910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f93c8324850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f93c8321800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f93c831f020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f93c83148a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f93c8313020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f93c8316a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f93c8313e80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f93c8314190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f93c8313740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f93c8319c40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f93c8316350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f93c82e9880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f93c82e8020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f93c82e4b10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f93c82e4890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f93c82e25d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f93c82eb120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f93c82e7020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f93c82e2d60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f93c82e1860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f93c82e15e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f93c82e8760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f93c82e90e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f93c82df190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f93c82e5770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f93c82e3e30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f93c82eb8c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f93c82e33e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f93c82ec270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f93c82e77a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f93c82e4020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f93c82e5020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f93c82ec9a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f93c7fb17f0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f93c7fb1570" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f93c7fb0cd0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f93c7fb0a50" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f93c7fc1b60" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f93c7fb0070" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f93c7fdb6c0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7fdb440" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f93c7fd9750" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7fd94d0" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f93c7fd8ab0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7fd84b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c7fd87e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f93c7fd6b60" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f93c7fd7bf0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7fd7630" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c7fd7960" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f93c7fbf630" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f93c7fd4c80" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f93c7fbf060" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c7fbf390" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f93c7fb9020" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7fba890" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c7fbabc0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f93c7fba020" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f93c7fbd9c0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7fbd740" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f93c7fbb020" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7fbc900" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f93c7fbcc50" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f93c7fad810" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f93c7fad230" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f93c7fad580" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f93c7fa9e20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f93c7fa9820" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f93c7fa9b90" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f93c7fab350" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f93c8f29110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f93c7fab0d0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f93c7faad30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f93c7faaab0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f93c7fae9c0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f93c7fae740" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f93c7fabe80" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f93c7fabc00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c8043350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c8043350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f93c803c1f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f93c8041a60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f93c803e820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f93c803e250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f93c803e590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f93c803fa60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f93c803a270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f93c803c980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f93c803f270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f93c8042020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f93c8043c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f93c803d820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f93c803d250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f93c803d590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f93c8042ae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f93c8042860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f93c8041350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f93c7fb50d0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
              <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7fb6700" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f93c7fb6a50" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c7fb6d80" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f93c7fc6560" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f93c7fed590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f93c7fc62e0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f93c7fcf110" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f93c7fd0e30" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f93c7fd2510" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f93c7fd0020" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f93c7fd2d50" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f93c7fccb10" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f93c7fcc530" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f93c7fcc880" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f93c7fce600" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f93c7fce020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f93c7fce370" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f93c7fc9040" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f93c7fcbda0" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f93c7fc73a0" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f93c7fc9dc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f93c7fc7110" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f93c7fed1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f93c7fcada0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f93c7fcab20" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f93c7fc4a30" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f93c7fed590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f93c7fc4450" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f93c7fc47a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f93c7fed590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f93c7fc2890" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f93c7fed590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c7f5a6d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c7f5a6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f93c7f57020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c7f52070" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c7f52070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f93c7f522b0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7f522b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f93c7f4ee00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7f522b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f93c7f51e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f93c7f4e460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7f522b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7f522b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f93c7f4fe60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7f522b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f93c7f4e1d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7f522b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f93c7f4f640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f93c7f4d620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7f522b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f93c7f52e10" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7f522b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f93c7f52b90" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7f522b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f93c7f51680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f93c7f2c270" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f93c7f2cbf0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f93c7f2c970" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f93c7f2a610" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f93c7f2a390" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f93c7f29020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f93c7f2ad60" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f93c7f29710" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f93c7f3aad0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f93c7f37400" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f93c7f37180" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f93c7f39270" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f93c7f40d30" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f93c7f399b0" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f93c7f3cc50" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f93c7f3a3e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f93c7f3c510" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f93c7f3b390" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f93c7f3bca0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f93c7f3ba20" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f93c7f37e10" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f93c7f37b90" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f93c7f308f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f93c7f30320" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f93c7f30660" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f93c7f347d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f93c837e550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f93c837d020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f93c7f2f2b0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f93c7f2e1f0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f93c7f31a30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f93c7f2f9f0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f93c7f33020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f93c7f337b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f93c7f312a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f93c837e550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f93c837d020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f93c7f31020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f93c837e550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f93c837d020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f93c7f1ad60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f93c7f15400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f93c7f15180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f93c7f13020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f93c7f15d10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f93c7f169a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f93c7f160e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f93c7f17740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f93c7f174c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f93c7eea1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c7d9ae10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c7d9ae10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f93c7d95070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7d95070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f93c7d95990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7d95070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f93c7d94ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f93c7d94270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f93c7d93270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f93c7cd1e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f93c8f29930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f93c7cd1c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f93c8f29930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f93c7c13980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c13700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f93c7c15c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c159b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f93c7c17350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f93c7c170d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f93c7c19800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f93c7c19580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f93c7c17d80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f93c7c17b00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f93c7c14b10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c14890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f93c7c012b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f93c7c11c50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f93c7c01020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f93c7c0e680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c0e060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f93c7c0e3f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f93c7c0c850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c0c5d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f93c7c0f810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f93c7c1be10" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f93c7c1bb90" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f93c7c1f120" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c22e70" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f93c7c1e350" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c1e0d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f93c7c1d510" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c1d290" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f93c7c05b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c058b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f93c7c0ab90" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c0a570" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f93c7c0a900" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f93c7c08ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c08850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f93c7c08020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c07960" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f93c7c07cf0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f93c7c03b70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c038f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f93c7c1a780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7c1a500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f93c7bf42b0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7bfbc40" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c7bf4020" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f93c7bf0890" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7bf0290" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c7bf05c0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f93c7bef9b0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f93c7bf35f0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7bf3370" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f93c7bf1ac0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7bf14e0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f93c7bf1830" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f93c7bf8120" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f93c7bf9120" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f93c7bfa770" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f93c7bf9910" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f93c7bf8b70" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f93c7bce3a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f93c7bd2dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f93c7bce110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f93c7bcc6a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f93c7bcae70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f93c7bca060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f93c7bca8a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c7bcabd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f93c7bcb840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f93c7bcb260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f93c7bcb5b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f93c7bcee30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f93c7bcebb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f93c7bc50e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f93c7bcf870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f93c7bd8a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f93c7bd0270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f93c7bbf2e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7bbf020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f93c7bc1710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f93c8028950"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f93c8025390"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7bc1410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f93c7bbe620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f93c8025e50"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f93c80237e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7bbe320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f93c7bd66e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f93c7bd3840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f93c7bd3070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f93c7bdae20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f93c7bd7e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f93c7bd5020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f93c7bd5840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f93c7bd76c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f93c7bb9d00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f93c7bba350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f93c7bb9530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f93c7bb92b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f93c7bbaac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f93c7bbc020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f93c7bc3c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f93c7bbcad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f93c7bbc850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f93c7b5e870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f93c7b5e290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f93c7b5e5e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f93c7b5f1f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f93c7b60880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f93c7b60210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f93c7b605f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f93c7b67c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f93c7b67990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f93c7b5fa70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f93c7b63730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f93c7b634b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f93c7b65d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f93c7b65ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f93c7b5dae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f93c7b629c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f93c7b62740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f93c7b5d2b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f93c7b644d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f93c7c35480"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f93c7c35be0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f93c7b64cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f93c7b671f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f93c7b65390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f93c7b62020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f93c7b5a4a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f93c7b5a4a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f93c7b5ad60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f93c7b57ac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f93c7b5a4a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f93c7b57510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f93c7b57830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f93c7b5a4a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f93c7b34520" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f93c802ca30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c7b342a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f93c7b32030" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f93c802ca30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c7b34d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f93c7b4dc50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f93c7c35480"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f93c7c35be0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f93c7b3c0e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f93c7b3b070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f93c7b3c8c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f93c7fed590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f93c7b3d860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f93c7fed590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f93c7b3d280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f93c7fed590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f93c7b3d5d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f93c7fed970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f93c7b2c120" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f93c802ca30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f93c7b38840" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f93c802ca30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f93c7b3e9b0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f93c7b38250" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f93c7b385a0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f93c7b36020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f93c802ca30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f93c7b37150" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f93c7b379c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f93c7b37d10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f93c7b3f7e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f93c7b3f020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f93c7b41720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f93c7b44db0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f93c7a14190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f93c7a13350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f93c7a14b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f93c7a148b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f93c7a1c8f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f93c79f0800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f93c79ec270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f93c79f0070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f93c79ed9a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f93c79ed720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f93c79ed020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f93c79f3870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f93c79ef810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f93c79ef030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f93c789a810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f93c78990e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f93c7899920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f93c7872420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c7873e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f93c7872190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f93c786d700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c786ed90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f93c786d110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f93c786d460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f93c786e020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f93c802ca30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c786f970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f93c786fcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f93c7873020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f93c802ca30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c78749d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f93c7874d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f93c7871b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c7871250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f93c78715a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f93c78718f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f93c7853a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f93c78530d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f93c7853460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c78537a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f93c784f020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f93c78512a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f93c7851630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c7851970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f93c7851ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
              <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f93c78558f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f93c7855670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f93c7774b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f93c77714e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f93c7770aa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f93c77a62b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f93c77a7e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f93c776f6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c776f470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f93c776eb30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c776e8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f93c776e020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f93c776d5f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c776d370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f93c7761020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f93c7763750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f93c775a740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c775a4c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f93c775ecd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f93c7736390" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f93c77411f0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f93c774e020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f93c77c2020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f93c77c2860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f93c7751cf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f93c77c2020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f93c77c2860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f93c7744350" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f93c774b530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f93c77bd020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f93c77bd860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f93c774b2b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f93c77bd020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f93c77bd860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f93c773b750" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f93c7738cf0" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f93c774da90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f93c77c1ec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f93c77c0680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f93c774bd20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f93c77bd020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f93c77bd860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f93c7748b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f93c7748910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f93c77481f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f93c773b020" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f93c774d2a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f93c77c1ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f93c77c0680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f93c774d020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f93c77c1ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f93c77c0680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f93c7749020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f93c773be80" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f93c7749a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f93c7749780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f93c7745420" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f93c7745ba0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f93c773c190" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f93c773f0e0" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f93c7743270" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f93c773c8d0" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f93c77419d0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f93c773a5c0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f93c7746390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f93c77c8d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f93c77c44d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f93c773ad60" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f93c7737bd0" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f93c774a700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f93c774a480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f93c7736d30" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c7736ab0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f93c774e800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f93c77c2020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f93c77c2860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f93c7744ac0" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f93c7740190" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f93c773d940" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f93c7792b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f93c7792730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f93c773d6c0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f93c7792b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f93c7792730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f93c773fbf0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f93c77a62b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f93c77a7e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f93c773f970" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f93c77a62b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f93c77a7e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f93c7734590" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f93c7738570" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f93c7746b40" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f93c7737480" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f93c7740900" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f93c7743a50" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f93c76cf600" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f93c76a7070" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f93c76ba780" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f93c76afd50" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f93c76afad0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f93c76c3cb0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f93c76ab350" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f93c76b4cf0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f93c76bb770" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f93c76b9770" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f93c76bd600" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f93c76bd380" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f93c76bfb00" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f93c76b6790" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f93c76adc80" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f93c76a88f0" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f93c76af390" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f93c76a3b60" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f93c769e270" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f93c76c2b30" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f93c76b6020" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f93c76b5910" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f93c76bb020" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f93c76c49a0" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f93c76b0ba0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f93c76b0920" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f93c76c4270" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f93c76acb80" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f93c76a77d0" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f93c76a1350" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f93c769fa90" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f93c76aa270" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f93c76a6020" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f93c76ad520" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f93c76a4bb0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f93c76c0270" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f93c76b1020" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f93c76a4020" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f93c76a8190" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f93c76b4520" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f93c76b42a0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f93c76a1af0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f93c76b01f0" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f93c76abac0" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f93c76c3550" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f93c777e4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f93c777e080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f93c76c32d0" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f93c777e4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f93c777e080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f93c76b7770" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f93c76bf390" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f93c76bf110" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f93c76b5120" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f93c76b6e70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f93c76a33b0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f93c76bec40" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f93c76c09e0" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f93c76b19e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f93c76b1760" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f93c8f28520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f93c76c2420" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f93c76a6740" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f93c76aa9e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f93c76ac420" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f93c76b2740" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f93c76b24c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f93c76b7020" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f93c76ba020" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f93c769f2b0" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f93c76be4b0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f93c76be230" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f93c76a2350" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f93c76b9020" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f93c76a2b10" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f93c75fb780" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f93c75f9020" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f93c75c48b0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f93c75c39c0" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f93c75c4020" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f93c75c3190" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f93c75c2350" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f93c75bf460" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f93c75b7de0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f93c75c1d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f93c75b7b60" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f93c75c1d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f93c75bbe00" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f93c75b8960" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f93c75c1d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f93c75b86e0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f93c75c1d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f93c75b72b0" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f93c75c1d90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f93c73ac5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f93c73ac360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f93c7398b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f93c73981c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f93c7398530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c7398860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f93c7397880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f93c73972c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f93c73975f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c737e530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c737e530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f93c737e770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c737e770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f93c737d2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c737e770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f93c737d060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c737e770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f93c7319580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f93c7307af0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f93c7307af0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f93c7307d30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7307d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f93c7301bc0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7307d30"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7301940" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f93c7300d80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c7300b00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f93c7304920" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c73046a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f93c73020c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7307d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c72ffa80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f93c72ffde0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f93c7307d30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f93c72e29e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f93c72e2020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f93c72e2750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f93c72e37f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f93c72e3020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f93c72e7d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f93c8f28920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f93c72f85f0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f93c8f28160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c72f8370" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f93c72f95f0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c72f9370" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f93c72f55f0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c72f5370" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f93c72f65f0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f93c72f6370" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f93c7fdd5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f93c7fdcc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f93c70d25e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f93c70d25e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f93c70cf2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f93c887b020"/>
            <typename><typedef-ref name="error_t" ref="0x7f93c88731b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f93c70d25e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f93c70cf020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f93c70d25e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f93c6ee81f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f93c8881090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
