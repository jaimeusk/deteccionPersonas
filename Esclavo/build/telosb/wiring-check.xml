<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4d40009cf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4d40393c00"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4d40393c00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4d402f4110"/></to>
    </wire>
    <wire loc="27:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4d40006360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4d402dc0d0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4d402dc0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4d402dac40"/></to>
    </wire>
    <wire loc="28:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7f4d3fff9820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3febc980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3febc980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4d3feb2050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7f4d3fff6cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fb8c260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fb8c260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4d3feb2050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4d3ff16910"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4d3eddcc30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4d3eddcc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4d3e492aa0"/></to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4d3ff068d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4d3edda8b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4d3edda8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4d3e491720"/></to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f4d3fef3a50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4d3ee81360"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4d3ee81360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb79cc0"/></to>
    </wire>
    <wire loc="34:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4d3fefb8f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4d3eddc020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4d3eddc020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4d3e494e60"/></to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4d3fef6180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3edd5910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4d3edd5910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3ee7f5c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3feecc20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3fb73610"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3fb73610"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3fb3a020"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3ef53dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3efdcb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3effc750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3f019080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3f16c620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3f263c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3f9f87e0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3e61c020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3f734020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3faa3510"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3feade50"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4d402f4780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4d4083b1e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4d4083b1e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4d403e0140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f4d402f31d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d4038e0c0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d4038e0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d403811a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d402f38d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f4d40383130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f4d40381810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f4d4037f020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f4d40368900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f4d40368900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d4034f850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f4d4037f700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d40382640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f4d4037fde0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d402b1600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d4034f850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d403351c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4d40346de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4d40335830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4d404b6c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4d40334af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d403df040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f4d403da490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f4d406139a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d402b1600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d402da640"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4d402d11d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f4d402dbd80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4d402dbd80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d40034480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4d402d74d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f4d402b3020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4d402b3020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d4001eb20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4d402d67f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f4d402b2380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4d402b2380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d400171b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d40022610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f4d402458a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f4d402458a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400eeb90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d4001cde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f4d40242020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f4d40242020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400e8060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d40016480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f4d402408a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f4d402408a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400e3540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f4d40296580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4019d060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f4d4027d710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40166740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f4d401f3d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40156540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f4d401f8d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400b7060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f4d40221d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40151b90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f4d40278710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4015b060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f4d4025e8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40125740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f4d402308a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400c2540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f4d4021cd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40145540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f4d40208d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400d8060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f4d401e9d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400b2540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f4d4028fd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4018c060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f4d40219580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40140b90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f4d4028ad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40182b90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f4d40270e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4014b060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f4d40256020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40114540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f4d4023d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400deb90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f4d40228020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400b2540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f4d4029b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d401a8740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f4d40282580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40171d10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f4d40268710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4013a060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f4d40223580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40156540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f4d40200570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400c7060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f4d401eb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400b2540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f4d4020f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400f3540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f4d40263710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40130dc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f4d4024a8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400f9060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f4d402358a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400ceb90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f4d401fdd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400c2540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f4d40217d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40104540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f4d40294d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40197540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f4d4027be50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40161b90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f4d4023b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400d8060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f4d40276e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40156540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f4d4025b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40120b90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f4d4022d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400bdb90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f4d40212d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400f9060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f4d4029e530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d401e1d10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f4d40287580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4017c060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f4d4026d710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40145540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f4d402548a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4010fb90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f4d4020dd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4013a060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f4d40205570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400d3540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f4d401f5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400b2540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f4d4024f8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40104540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f4d4020a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40135540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f4d40299d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d401a3b90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f4d40280e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4016b260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f4d40266e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40135540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f4d40214580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400ffb90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f4d401fa570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400bdb90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f4d40260020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4012a260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f4d40247020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400f3540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f4d40232020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400c7060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f4d40291580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40192b90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f4d40237020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400d3540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f4d4028c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40187540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f4d40272710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40151b90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f4d402598a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40119060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f4d4022b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400b7060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f4d402acd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d401ad260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f4d40285d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40177540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f4d4026be50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40140b90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f4d40251020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d40109060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f4d40203d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400ceb90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f4d401f0560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4014b060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f4d4021e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4014b060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f4d4024c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400ffb90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f4d401eed40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400b7060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f4d401e6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d400deb90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f4d402268f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4d4015b060"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4d3feb2050"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4d3fea9c30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4d3fea9c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fbb48e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d3feade50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3fc62020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fbb48e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3e806db0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f4d3fe9f500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4d3fba5020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d3fc62020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3e9fcb10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f4d3fbad020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fc352f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4d3fc30850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4d3fc62870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4d3fc62870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4d3e9f5890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4d3fb9b300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4d3fcdb8c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4d3fcdb8c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4d3fcbecf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d3e9fcb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3e9dd660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f4d3e9ee0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4d3e9fb4f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4d3e9fb4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4d3e9dc020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4d3e9f1c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4d3fcdb8c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3e9d8190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3e9e4340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3e9e4340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fe6f990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3e9d7770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3e9e3a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3e9e3a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3fe6c720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3e9d6a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3e9e2da0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3e9e2da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3fe6a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fe6f990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4d3fe569e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f4d3fe569e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe00260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3fe6c720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f4d3fe54280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f4d3fe54280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4d3fd9e6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3fe6a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f4d3fe53700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f4d3fe53700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4d3fd9dac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fe6f990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4d3fe569e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3fe6c720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f4d3fe4ea50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f4d3fe4ea50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4d3fd8e220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3fe6a1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f4d3fe4c020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f4d3fe4c020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4d3fd8d610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fe6f990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4d3fe569e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3fe6c720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f4d3fe4bd40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f4d3fe4bd40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4d3fd866d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3fe6a1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f4d3fe49160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f4d3fe49160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4d3fd85ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fe6f990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4d3fe569e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3fe6c720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f4d3fe47020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f4d3fe47020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4d3fd7fb30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3fe6a1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f4d3fe46570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f4d3fe46570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4d3fd7d020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fe6f990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4d3fe569e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3fe6c720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f4d3fe445a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f4d3fe445a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4d3fd76220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3fe6a1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f4d3fe43a20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f4d3fe43a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4d3fd75610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fe6f990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4d3fe569e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3fe6c720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f4d3fe418c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f4d3fe418c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4d3fd6f6d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3fe6a1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f4d3fe3fd40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f4d3fe3fd40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4d3fd6eac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f4d3fe59730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4d3fda5220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f4d3fe5b700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3fdaccb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f4d3fe48020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3fd847a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f4d3fe61890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4d3fdac020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f4d3fe3eae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3fd6d7a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f4d3fe650c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4d3fdfa6d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f4d3fe4fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3fd94cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f4d3fe50bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4d3fd94020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f4d3fe51730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4d3fd96b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f4d3fe57a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3fda32f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f4d3fe45570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3fd7dcb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f4d3fe58bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4d3fda4610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f4d3fe69830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe083e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f4d3fe62410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4d3fdaeb30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f4d3fe5c410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3fdb37a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f4d3fe4cda0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3fd8c2f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f4d3fe64570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4d3fdb4ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f4d3fe42890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3fd742f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f4d3fe52700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3fd9b7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f4d3fe052f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fe06bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4d3fe05940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f4d3fd653f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4d3fe04020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f4d3fd65b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fdb2610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe083e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4d3fdb1c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fe06bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fdaab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe083e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4d3fda82f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fe06bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fda2160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe083e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4d3fda17a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fe06bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f4d3fdfe100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fdffa60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4d3fdfe750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f4d3fd64430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4d3fdfeda0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f4d3fd64bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fd9a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe00260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4d3fd99c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fdffa60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fd93b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe00260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4d3fd912f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fdffa60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fd8a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe00260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4d3fd897a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fdffa60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fd83610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe00260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4d3fd82c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fdffa60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fd7bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe00260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4d3fd792f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fdffa60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fd73160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe00260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4d3fd727a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fdffa60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3fd6c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4d3fe00260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4d3fd6ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4d3fdffa60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f4d3fca00f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4d3fcd98e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4d3fcd98e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4d3fcd2b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fcc4c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4d3fe569e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f4d3fc2c9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f4d3e7ff3d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f4d3fbad020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f4d3e7f9a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f4d3fba8450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f4d3e7fa5d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f4d40383130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f4d3e7f8100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb79cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb4c020"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb4c020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4d3ef46b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3fb6b2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3ef0f8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f4d3fb5f1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f4d3ef10ce0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4d3fb748f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4d3ef11a80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4d3fb78d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4d3ef15020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4d3fb76c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4d3ef14df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3fb3a020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f0ec670"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3fb5a130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3fb38080"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3fb38080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3ef46080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4d3fb76020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3ef14210"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3fb71080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3fb39020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3fb39020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4d3f0e96e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4d3fb51430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4d3fb38b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4d3fb38b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4d3ef32020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4d3fb752d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4d3ef12470"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4d3fb67170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4d3fb399d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4d3fb399d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4d3f0e8a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f4d3ef070f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3fb4b530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4d3ef0e860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4d3fb44a70"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f4d3fb44a70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4d3efafc90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4d3ef0d690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4d3fb3d840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f4d3fb3d840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4d3efaea50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4d3ef094d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4d3f31ab20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3ef0dce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f0ec670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f0ec670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f0ded20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3ef0cb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0e80c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0e80c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0da640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4d3ef0b610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4d3faacdc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4d3faacdc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4d3faa2970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f4d3ef081f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3fb32330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3fb32330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3fb2c7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4d3ef07d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4d402dc0d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4d3ef46b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f4d3ef43d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4d3f0e8a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4d3f0d9020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4d3ef32020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4d3ef30410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f4d3efafc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4d3efa4a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3ef46080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3ef3f2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f4d3fb45690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3efaf5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4d3efaf5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f4d3efa4370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4d3f0e96e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4d3f0dbc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3fb4b530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3efb1be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3efb1be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3efa77b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f4d3fb3c940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4d3efb08e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4d3efb08e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f4d3efa64d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4d3fb45d50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4d3efad170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4d3efad170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4d3efa2020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f4d3efaea50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4d3efa3840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4d3ef43d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb34390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb34390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb31e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4d3efac6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4d3f001220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4d3f001220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4d3efffa10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4d3f000020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4d3ef35350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4d3ef35350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4d3ef32d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4d3ef32d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4d3ef4ace0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4d3ef4ace0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4d3ef44860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4d3ef44860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4d3fb34e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4d3fb34e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4d3fb2d990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4d3efac020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3ef47980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4d3ef47980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4d3ef43690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4d3ef43690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3efe3aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4d3efe3aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3efdfe30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4d3efe0950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3fb33b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4d3fb33b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3f1717c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4d3f1717c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3f169020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3fb2b640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3fabc950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3fabc950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3faa3b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f4d3fb23b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f4d3fab7bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f4d3fab7bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f4d3faa0740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4d3fb1f760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4d3f2716c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4d3fb1f760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4d3f1745c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4d3f1745c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4d3f16cca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4d3f2716c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4d3f261320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4d3fb182a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4d3f26e020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4d3f26e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4d3f261bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f4d3fb21060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3f26ecb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3f26ecb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3f260970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3fb16330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f0ec670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3fb0e920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0e80c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4d3fb15420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4d3f01fa20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4d3f01fa20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4d3f018a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f4d3fb11110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4d3f021aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4d3f021aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4d3f7381d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4d3fb15bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4d402dc0d0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f4d3fb04b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f4d3fb05ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f4d3fb06c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f4d3faa90c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f4d3fa9fb40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f4d3fa9ba10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4d3f9f4220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4d3f9f4220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4d3f9eeaf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4d3fa97c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4d3f9b0e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4d3f9b0e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f9a1630"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4d3fa96e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f4d3f9ab6a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4d3f9ab6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f990630"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f4d3fa940f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f4d3f9a9ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f4d3f9a9ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f985020"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f4d3fa8fc00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f4d3f96b400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f4d3f96b400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4d3f80a680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4d3fa7c520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f3a4e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3f3a4e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f7b84d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4d3fa7b570"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f4d3f3a17b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4d3f3a17b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3fa7bc80"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f39fae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f39fae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3fa7dd70"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f3a2ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f3a2ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3fa7d450"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f39e160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f39e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3fa82420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f396870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f396870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3fa82cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f394880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f394880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3fa895d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f3920a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f3920a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3fa81020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f39be50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f39be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3fa818f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f399670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f399670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4d3fa85e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f4d3f386500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4d3f386500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3fa854a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f387ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f387ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3fa801e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f397e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f397e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4d3fa80a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f4d3f399e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4d3f399e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3fa7f3c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f398e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f398e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f4d3fa79180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f374a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3f374a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f7b84d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f4d3fa7a3d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f3479e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3f3479e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f7b84d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4d3fa8a390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4d3f31ab20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4d3fa9b020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4d3f319d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4d3f319d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4d3f2fe310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f4d3fa6eca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f4d3fa70db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d3f9f87e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3f9ee260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d3f9ee260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3e7a2720"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4d3f9eeaf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4d3e7a1020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d3e7a2720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3e79b760"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4d3e7a1020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4d3e7941d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d3e79b760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3e77e340"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f4d3e78eb90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4d3e79a020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4d3e79a020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4d3e77ebd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4d3e790690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4d3f9d8080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4d3f9d8080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4d3f9d3cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3e77bdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3e785e70"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3e785e70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fe6f990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3e778440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3e7825d0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3e7825d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3fe6c720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3e777760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3e7818f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3e7818f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3fe6a1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f4d3f9d00f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4d3fcd98e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f4d3f9ae090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f99cb00"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f4d3f9ad390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f996020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f4d3f9f6b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f9a6020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f4d3f9aa9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f98baf0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f9a52f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4d40296580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f9a07a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f4d4025e8a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f99bc60"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f4d40299d50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f9952f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4d4029e530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f98f7a0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f4d402548a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f98ac60"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f4d40260020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f9842f0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f4d40256020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f4d3f967700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4d3f964c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4d3f96a060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4d3f7fbb70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3f94d760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f4d3fe51730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f4d3f94ca80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f4d3fe4fa20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f94a930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f4d40260020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4d3f8092f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4d3f9383f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f4d3f9383f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4d3f9213f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4d3f7fa7a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4d3f93b620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f4d3f93b620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4d3f9297a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f4d3f92c3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f4d3f9153f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f4d3f935d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f4d3f91ed50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f4d3f9323f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f4d3f91b3f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f4d3f940bc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f4d3f924d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f4d3f92fd50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f4d3f918d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f4d3f937710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f4d3f920710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f4d3f92b710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f4d3f914710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f4d3f931710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f4d3f91a710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f4d3f939020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f4d3f922020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f4d3f92d100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f4d3f916100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f4d3f936a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f4d3f91fa30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f4d3f933020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f4d3f91c020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f4d3f9418a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f4d3f925a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f4d3f930a30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f4d3f919a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4d3f3a1160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f395880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4d3f38d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4d3f3940a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f381500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4d3f383500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f39f490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4d3f389880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f384500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4d3f38f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4d3f3900a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f3a3a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f7b6350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f7b6350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f7ae660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f39ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4d3f39d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4d3f388c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4d3f39dbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f384ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4d3f3890a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4d3f398670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4d3f38a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4d3f38d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4d3f38a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f382ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4d3f383ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4d3f390880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4d3f38b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4d3f386ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4d3f392880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f381ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4d3f3a2480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4d3f39b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4d3f397670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4d3f38e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4d3f38e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f3950a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f39c2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4d3f39b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f39e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4d3f387500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4d3f382500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4d3f38f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4d3f38b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4d3f3a1e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4d3f3910a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4d3f39c940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4d3f391880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4d3f3880a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f3809b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7ac890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7abba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7aaa30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3f7b84d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f7ad510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7a88b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f4d3f79cb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4d3f73d770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4d3f73d770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4d3f7381d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4d3f7a7060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f71bc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3f71bc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3e6a3940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4d3f7a4c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4d3f71a8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4d3f71a8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4d3e6a2d70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3f79c2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3f3cc020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3f3cc020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3e69f020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4d3f7a3a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4d402dc0d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f4d3f798bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4d3f7381d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4d3f734b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3e69f020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3f6b3850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4d3e6a2d70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4d3f6b4110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3e6a3940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f6bad80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3e6a25d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3e697020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3e697020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3f5352c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4d3f6b4110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4d3f638a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4d3e6a0410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4d3f6b4790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4d3f6b4790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4d3f637060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4d3f6aea40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4d3e69f7c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3e687760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f6b18e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4d3f6af690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3e698340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3e698340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f536020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4d3f6aab40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4d3e692c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4d3e692c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4d3f5384d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f6b18e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f638250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3f6b3850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3f637c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3f6bad80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f639470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4d3f6353e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4d3f6aea40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4d3f6365b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f4d3f6af690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4d3f62f480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4d3f6aab40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f4d3f635a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4d3f625020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4d3f625020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4d3f61c700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4d3f62fc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4d402dc0d0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f4d3f62d2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4d3f61d2c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4d3f617c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4d3f621d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4d3f6172d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4d3f5e8bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f4d40223580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f4d3f5e53e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f4d40221d50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4d3f5e3bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f4d4021e580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f4d3f5e03e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f4d40219580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f4d3f5debb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f4d4021cd50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f4d3f5eed10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f4d3f48bd40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4d3e68f440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4d3f5373f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4d3e68fa50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4d3f493020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4d3f493020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f4d3f48bd40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4d3e696020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4d3f625020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3e6977c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3f535ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3f535ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3f49ee80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f5348a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3e687760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3f5352c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3f49fa60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3f49fa60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3e6196c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f4d3f5384d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4d3f531d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3f536020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f4a0ca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3f4a0ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3e61a850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4d3f5373f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4d3f530710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3f49ee80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3e617a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f49d790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f5348a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3f51fbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3f49ee80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f4d3f530d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4d3f621d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4d3f51f5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4d3f61d2c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4d3f49e270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4d3e619e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3e6169d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f49d790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f4d3e6162d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f4d3f49c020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4d3e6152b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4d3e61c630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f4d3e613480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f4d3f482bb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4d3f61c700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4d3f47d700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f4d40223580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4d3f47be40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f4d4021e580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f367c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4d3f371da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f36ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f364670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4d3f35de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4d3f364e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f3502f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4d3f3532f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f36f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4d3f358670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f3542f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4d3f369c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f368c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4d3f35e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4d3f361e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f363670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f372760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f7b6350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f36eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4d3f36c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4d3f357a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4d3f36c870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f354ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f36fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4d3f35ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4d3f368480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f369480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f371750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4d3f35be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4d3f35c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4d3f35a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f351ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4d3f353ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4d3f35f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4d3f35ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4d3f355ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4d3f362670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f350ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4d3f371100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4d3f36a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4d3f367480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4d3f35ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f363e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4d3f35d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f365670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4d3f370450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f365e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f36b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4d3f36bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4d3f3552f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f356ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f36e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4d3f3562f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4d3f3512f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4d3f35fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4d3f35b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4d3f370aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f36f770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4d3f362e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4d3f36b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4d3f361670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4d3f358e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f34f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f33ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4d3f345da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f33eb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f338670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4d3f331e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4d3f338e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f3242f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4d3f3262f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f342120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4d3f32c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f3272f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4d3f33cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f33bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4d3f332670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4d3f334e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f336670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f346760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f7b6350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f341aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4d3f340120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4d3f32ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4d3f340870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f327ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f342dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4d3f32de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4d3f33b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f33c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f345750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4d3f32ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4d3f32f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4d3f32d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f325ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4d3f326ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4d3f333670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4d3f32fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4d3f328ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4d3f335670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f324ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4d3f345100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4d3f33e370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4d3f33a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4d3f332e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f336e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4d3f331670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f339670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4d3f344450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f339e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f33f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4d3f33fcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4d3f3282f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f32aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f341450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4d3f32a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4d3f3252f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4d3f333e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4d3f32e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4d3f344aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f342770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4d3f335e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4d3f33f670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4d3f334670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4d3f32ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f3237a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f4d3f2fb880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f4d3f2f0020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f4d3f2f0020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f4d3f2eb140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f4d3f2e6bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f4d3f2efc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f4d3f2efc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f4d3f2d2150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f4d3f2ea530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4d3f27d1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f4d3f2d6540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f4d3f2d7590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f4d3f2d7590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f2869e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4d3f2cd950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f4d3f2d4ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4d3f2d4ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f4d3f2aaa90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f4d3f2d29f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f4d3f2d6540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4d3f29a020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4d3f294530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4d3f294530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4d3f290e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3f28d020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f4d3fe69830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f285c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f4d40282580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4d3f26a990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4d3f25f900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f4d3f26c150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f4d3f25e0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f4d3f25eae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4d3f9f4220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f4d3f249690"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f4d3f9f6b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4d3f2439b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4d3f9b0e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f4d3f242cd0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f4d3f9aa9b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f4d3f24aa80"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f4d3f967700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4d3f240020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f1a4c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3f1a4c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f7b84d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f240d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f1a38f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f1a38f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f7b6350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4d3f23c6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f4d3f1a22f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4d3f1a22f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4d3f23cde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f4d3f1a1cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4d3f1a1cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f23b530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f1a0370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f1a0370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f23bc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f19fd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f19fd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f23de00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f198c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f198c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f23f780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f1807a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f1807a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f23d550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f1852f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f1852f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f23a3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f19a480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f19a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f2395e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f196e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f196e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f238020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f195670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f195670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4d3f23ae80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f4d3f19c7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4d3f19c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f2379c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f182ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f182ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4d3f238890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f4d3f1832f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4d3f1832f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4d3f237130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f4d3f183ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4d3f183ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f4d3f232d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f4d3f174df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f4d3f174df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f4d3f16a550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f258d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f0ec670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f257bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0e80c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4d3f250c60"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4d3f0e7550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4d3f0e7550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4d3f0d9a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4d3f244e80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4d3f0df480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4d3f0df480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4d3f0d18b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4d3f2356c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4d402dc0d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f197c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4d3f1a1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f19bc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4d3f18ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4d3f195e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f1812f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4d3f189670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4d3f19ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4d3f18f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4d3f191e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f194670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4d3f19d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4d3f188a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4d3f19dac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f185ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f19f060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4d3f18ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4d3f198480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f1a2940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4d3f18ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4d3f18d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4d3f18a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4d3f190670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4d3f18de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4d3f186ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4d3f193670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f181ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4d3f19b490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4d3f197480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4d3f18fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f194e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4d3f18e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f196670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4d3f1a1670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f19c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4d3f19ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4d3f1862f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f187ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f19f6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4d3f1872f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4d3f1822f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4d3f190e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4d3f18c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f1a09c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4d3f193e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4d3f191670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4d3f189e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f4d3f170020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f4d3f1697c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4d3f154150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4d402dc0d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4d3f168020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4d3f9b0e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f4d3f167380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f4d3f9ae090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f4d3f1666b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f4d3f9ad390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4d3f165a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4d3f96a060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4d3f1646e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f06fd00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4d3f06fd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4d3f7b84d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f163530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f04bad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f04bad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f162ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f0696b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f0696b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4d3f1623a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f4d3f068370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4d3f068370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f161330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f0ec670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f1601e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0e80c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4d3f15ed70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4d3f0e7550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4d3f160b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4d3faacdc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f1593e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f060e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f060e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f159cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f05f670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f05f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f15ab10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f066160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f066160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f1576d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f04b2f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f04b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4d3f158590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f4d3f04e2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4d3f04e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4d3f158e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f4d3f04ead0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4d3f04ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f156020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f04fad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f04fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4d3f1568b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f4d3f06c300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4d3f06c300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f4d3f1499d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4d3f0e3660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4d3f0d5af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4d3f07b300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4d3f9d8080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f4d3f0cf3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4d3f07d020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4d3f0ce6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4d3fe9f500"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4d3f077450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4d3feb2050"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f062c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4d3f06b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f065c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4d3f058e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4d3f05fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f06a370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4d3f053670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f04f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4d3f064c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f063c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4d3f059670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4d3f05ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f05e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f06d970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f7b6350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f069d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4d3f052a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4d3f068ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f069060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4d3f055e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4d3f063480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f064480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f06c950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4d3f056e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4d3f057670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4d3f055670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f04dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4d3f05b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4d3f057e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4d3f050ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4d3f05d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4d3f065490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4d3f062480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4d3f059e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f05ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4d3f058670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f060670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4d3f06b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4d3f066e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4d3f0502f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f051ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4d3f0512f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4d3f04d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4d3f05be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4d3f056670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4d3f06bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f06a9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4d3f05de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4d3f0667b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4d3f05c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4d3f053e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f04a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f4d3f01c920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f4d3f019940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4d3f023990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4d3f019080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4d3effce60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4d3f000020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4d3effbae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4d3effd690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4d3effd690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4d3f7381d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4d3effa8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4d3f01fa20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3eff9170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0e80c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4d3efe0200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4d3efdc570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4d3efda3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4d3efe0950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3efdaa70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0e80c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4d3efa2d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4d3efac6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4d3efa1b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4d3efac020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3efa02f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f0ec670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3ef9f170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0e80c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4d3ef9fb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4d3ef52410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f4d3ef73db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f4d3ef45800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4d3ef41580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4d3ef41580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4d3f7381d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3ef2d1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3fb39020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4d3ee803f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4d3fb78d20"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4d3ee7d1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4d3fb76c00"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4d3ee7d7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4d3fb748f0"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4d3ee7aa20"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4d3f0e7550"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3ee70890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3fb5a130"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4d3ee7f5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4d3fb76020"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3ee7bb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3fb71080"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4d3ee7c470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4d3fb752d0"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4d3ee74af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4d3f0e3660"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4d3e494e60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4d3e4867f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4d3e492aa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4d3ee7d7e0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4d3e491720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4d3ee7c470"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4d3edd8020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4d3e490da0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4d3e490da0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3ee7bb20"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4d3e4855f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4d3ee43930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4d3e484270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4d3ee7c470"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4d3ee43930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4d3edf2df0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4d3edf0400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4d3ee803f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4d3edef060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4d3ee7c470"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4d3edee720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4d3ee7d7e0"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f4d3eded480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f4d3ededc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4d3edcf020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4d3ee7d7e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4d3edcfc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4d3ee7c470"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="8:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3fc27530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039c640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4d4039c9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039c640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4d4039c9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f4d401e01d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f4d401e0580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f4d401e0930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f4d401e0ce0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f4d401df0d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f4d3fe39930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f4d3fe39cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f4d3fe380d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f4d3fe38450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f4d3fe387d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f4d3fe38b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f4d3fe37020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f4d3fe373b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f4d3fe37780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f4d3fdfcc80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f4d3fdf90d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4d3fd16cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4d3fd16cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4d3fcd3a40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4d3fcd3a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4d3fcbd570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4d3fcbd570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4d3fcbdd40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4d3fcbdd40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4d3fcbc160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4d3fcbc160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4d3fcbc940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4d3fcbc940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4d3fcbcd10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f4d3fcbb540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f4d3fcbb540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4d3fc9c6d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4d3fc9c6d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4d3fc99020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4d3fc99020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4d3fc99410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4d3fc99410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4d3fc99bf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4d3fc99bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4d3fc98020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d3fc5dcc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3fc5dcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d3fc27530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3fc27530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f4d3fc27880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d3fc18980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3fc18980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f4d3fc18cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d3fba4550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3fba4550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f4d3f5195e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f4d3f50e9b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f4d3f4f3cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d3f2a8020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3f2a8020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4d3f2a87b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3f2a87b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4d3ee68660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4d3ee5e360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4d3ee570d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f4d3ee3ec80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4d3edd4330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f4d40391160" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d40391160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d403914e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4d40393c00" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4d40393c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4d40392020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d4038e0c0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d4038e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d4038e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f4d40383130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f4d40383130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f4d4038d1b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f4d4038d340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f4d403837d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f4d40383960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f4d40383af0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f4d40383c80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f4d40383e10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f4d4038d020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f4d403834b0"/>
        <function-ref name="node_id" scoped="" ref="0x7f4d40383640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f4d4037f700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f4d4037f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d4037fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d403811a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d403811a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d40381520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f4d4037f020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f4d4037f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d4037f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f4d4037fde0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f4d4037fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d4037e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f4d40381810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f4d40381810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f4d40380980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f4d40380b10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f4d40380020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f4d403801b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f4d40380340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f4d403804d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f4d40380660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f4d403807f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f4d40381b90"/>
        <function-ref name="node_id" scoped="" ref="0x7f4d40381d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d40382640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d40382640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d403829c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f4d40368900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f4d40368900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d40368c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f4d40346de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4d40346de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4d4034bc70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4d4034b310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4d4034b4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4d4034b630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4d4034b180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4d4034b7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4d4034b950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4d4034bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d4034f850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d4034f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d4034fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f4d40335830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4d40335830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4d403347f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4d40335d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4d40334020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4d403341b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4d40335bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4d40334340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4d403344d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4d40334660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f4d40334af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4d40334af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4d40334e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d403351c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d403351c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d40335540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f4d404b6c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4d404b6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4d406910a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f4d406139a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f4d406139a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f4d40613d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f4d4072e020"/>
        <function-ref name="sleep" scoped="" ref="0x7f4d4072e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f4d405543d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f4d405543d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f4d40554750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f4d4034d8b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4d4034d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4d403007f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4d4034ddc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4d40300020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4d403001b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4d4034dc30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4d40300340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4d403004d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4d40300660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f4d402f38d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4d402f38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d402f3c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4d402f4110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4d402f4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4d402f4490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f4d402f31d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f4d402f31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d402f3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f4d402f4780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4d402f4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d402f4b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4d402f4c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4d402f4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4d4082e940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f4d4082e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d4082ecc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d4082ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4d4083b1e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4d4083b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d4083b560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4d4083b6f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4d4083b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4d403df040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f4d403df040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d403df3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d403df550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f4d403da490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f4d403da490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f4d403da810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f4d403da9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f4d403dab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4d403e0140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4d403e0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d403e04c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4d403e0650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4d403e07e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4d402dc0d0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d402dc0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d402dc450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d402dc5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d402dc770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d402dc900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d402dca90"/>
        <function-ref name="get" scoped="" ref="0x7f4d402dcc20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d402dcdb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d402e74d0"/>
        <function-ref name="set" scoped="" ref="0x7f4d402e7020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d402e71b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d402e7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f4d402d11d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f4d402d11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402d1550"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d402d16e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402d1870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402d1a00"/>
        <function-ref name="get" scoped="" ref="0x7f4d402d1b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402d1d20"/>
        <function-ref name="set" scoped="" ref="0x7f4d402d7020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d402da640" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d402da640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d402da9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f4d402d74d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f4d402d74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402d7850"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d402d79e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402d7b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402d7d00"/>
        <function-ref name="get" scoped="" ref="0x7f4d402d6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402d61b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d402d6340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4d402dac40" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d402dac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d402d9020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d402d91b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d402d9340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d402d94d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d402d9660"/>
        <function-ref name="get" scoped="" ref="0x7f4d402d97f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d402d9980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d402d8020"/>
        <function-ref name="set" scoped="" ref="0x7f4d402d9b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d402d9ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d402d9e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f4d402d67f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f4d402d67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402d6b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d402d6d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402d0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402d01b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d402d0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402d04d0"/>
        <function-ref name="set" scoped="" ref="0x7f4d402d0660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402d07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f4d402dbd80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f4d402dbd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402b4180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d402b4310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402b44a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402b4630"/>
        <function-ref name="get" scoped="" ref="0x7f4d402b47c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402b4950"/>
        <function-ref name="set" scoped="" ref="0x7f4d402b4ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402b4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f4d402b3020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f4d402b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402b33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d402b3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402b36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402b3850"/>
        <function-ref name="get" scoped="" ref="0x7f4d402b39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402b3b70"/>
        <function-ref name="set" scoped="" ref="0x7f4d402b3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402b2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f4d402b1600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d402b1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d402b1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f4d402b2380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f4d402b2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402b2700"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d402b2890"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402b2a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402b2bb0"/>
        <function-ref name="get" scoped="" ref="0x7f4d402b2d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402b1020"/>
        <function-ref name="set" scoped="" ref="0x7f4d402b11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402b1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4d40296580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4d40296580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40296900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40296a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40296c20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40294980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40295020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402951b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40295340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40295660"/>
        <function-ref name="get" scoped="" ref="0x7f4d402957f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40295980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40295b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40295ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40294020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402941b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40294340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402944d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40296db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40294660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402947f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4d4027d710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4d4027d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4027da90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4027dc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4027ddb0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4027ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4027c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4027c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4027c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4027c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4027c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4027c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4027cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4027cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4027ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4027b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4027b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4027b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4027b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4027c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4027b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4027b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f4d401f3d30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f4d401f3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401f20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401f2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401f2400"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401f01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401f2720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401f28b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401f2a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401f2bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401f2d60"/>
        <function-ref name="get" scoped="" ref="0x7f4d401f1020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401f11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401f1340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401f14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401f1760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401f18f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401f1a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401f1c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401f2590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401f1da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f4d401f8d40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f4d401f8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401f70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401f7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401f7400"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401f51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401f7720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401f78b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401f7a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401f7bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401f7d60"/>
        <function-ref name="get" scoped="" ref="0x7f4d401f6020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401f61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401f6340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401f64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401f6760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401f68f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401f6a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401f6c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401f7590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401f6da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f4d40221d50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f4d40221d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40220100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40220290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40220420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4021e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40220740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402208d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40220a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40220bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40220d80"/>
        <function-ref name="get" scoped="" ref="0x7f4d4021f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4021f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4021f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4021f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4021f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4021f8f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4021fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4021fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402205b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4021fda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4021e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f4d40278710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f4d40278710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40278a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40278c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40278db0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40276a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40277340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d402774d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40277660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402777f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40277980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40277b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40277ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40277e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40276120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402762b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40276440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402765d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40277020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40276760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402768f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f4d4025e8a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f4d4025e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4025ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4025edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4025d020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4025cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4025d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4025d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4025d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4025d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4025d980"/>
        <function-ref name="get" scoped="" ref="0x7f4d4025db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4025dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4025de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4025c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4025c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4025c440"/>
        <function-ref name="set" scoped="" ref="0x7f4d4025c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4025c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4025d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4025c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4025ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f4d402458a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f4d402458a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40245c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40245db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40244020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40243c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40244340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402444d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40244660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402447f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40244980"/>
        <function-ref name="get" scoped="" ref="0x7f4d40244b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40244ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40244e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40243020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402432b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40243440"/>
        <function-ref name="set" scoped="" ref="0x7f4d402435d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40243760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402441b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402438f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40243a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f4d402308a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f4d402308a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40230c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40230db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4022f020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4022ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4022f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4022f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4022f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4022f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4022f980"/>
        <function-ref name="get" scoped="" ref="0x7f4d4022fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4022fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4022fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4022e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4022e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4022e440"/>
        <function-ref name="set" scoped="" ref="0x7f4d4022e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4022e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4022f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4022e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4022ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f4d4021cd50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f4d4021cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4021b100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4021b290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4021b420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402191b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4021b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4021b8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4021ba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4021bbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4021bd80"/>
        <function-ref name="get" scoped="" ref="0x7f4d4021a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4021a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4021a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4021a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4021a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4021a8f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4021aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4021ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4021b5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4021ada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40219020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f4d40208d40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f4d40208d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402070e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40207270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40207400"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402051b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40207720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402078b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40207a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40207bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40207d60"/>
        <function-ref name="get" scoped="" ref="0x7f4d40206020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402061b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40206340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402064d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40206760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402068f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40206a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40206c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40207590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40206da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40205020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f4d401e9d50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f4d401e9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401e8100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401e8290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401e8420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401e61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401e8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401e88d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401e8a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401e8bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401e8d80"/>
        <function-ref name="get" scoped="" ref="0x7f4d401e7020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401e71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401e7340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401e74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401e7760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401e78f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401e7a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401e7c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401e85b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401e7da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4d4028fd50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4d4028fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4028e100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4028e290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4028e420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4028c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4028e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4028e8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4028ea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4028ebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4028ed80"/>
        <function-ref name="get" scoped="" ref="0x7f4d4028d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4028d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4028d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4028d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4028d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4028d8f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4028da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4028dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4028e5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4028dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4028c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f4d40219580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f4d40219580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40219900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40219a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40219c20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40217980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40218020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402181b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40218340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40218660"/>
        <function-ref name="get" scoped="" ref="0x7f4d402187f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40218980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40218b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40218ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40217020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402171b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40217340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402174d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40219db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40217660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4d4028ad50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4d4028ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40289100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40289290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40289420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402871b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40289740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402898d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40289a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40289bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40289d80"/>
        <function-ref name="get" scoped="" ref="0x7f4d40288020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402881b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40288340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402884d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40288760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402888f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40288a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40288c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402895b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40288da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40287020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f4d40270e50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f4d40270e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4026f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4026f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4026f530"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4026d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4026f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4026f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4026fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4026fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4026e020"/>
        <function-ref name="get" scoped="" ref="0x7f4d4026e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4026e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4026e4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4026e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4026e8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4026ea80"/>
        <function-ref name="set" scoped="" ref="0x7f4d4026ec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4026eda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4026f6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4026d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4026d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f4d40256020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f4d40256020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402563a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40256530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d402566c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402544d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402569e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40256b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40256d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40255020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402551b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40255340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402554d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40255660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402557f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40255a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40255c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40255da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40254020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40256850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402541b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40254340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f4d4023d020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f4d4023d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4023d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4023d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4023d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4023b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4023d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4023db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4023dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4023c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4023c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4023c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4023c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4023c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4023c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4023ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4023cc10"/>
        <function-ref name="set" scoped="" ref="0x7f4d4023cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4023b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4023d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4023b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4023b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f4d40228020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f4d40228020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402283a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40228530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d402286c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402264d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402289e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40228b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40228d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40227020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402271b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40227340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402274d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40227660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402277f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40227a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40227c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40227da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40226020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40228850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402261b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40226340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4d4029b580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4d4029b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4029b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4029ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4029bc20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40299980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4029a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4029a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4029a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4029a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4029a660"/>
        <function-ref name="get" scoped="" ref="0x7f4d4029a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4029a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4029ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4029aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40299020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402991b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40299340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402994d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4029bdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40299660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402997f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4d40282580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4d40282580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40282a00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40282b90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40282d20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40280a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40281340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d402814d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40281660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402817f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40281980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40281b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40281ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40281e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40280120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402802b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40280440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402805d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40281020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40280760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402808f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f4d40268710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f4d40268710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40268a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40268c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40268db0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40266a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40267340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d402674d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40267660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402677f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40267980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40267b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40267ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40267e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40266120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402662b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40266440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402665d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40267020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40266760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402668f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f4d40223580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f4d40223580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40223900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40223a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40223c20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40221980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40222020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402221b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40222340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40222660"/>
        <function-ref name="get" scoped="" ref="0x7f4d402227f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40222980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40222b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40222ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40221020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402211b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40221340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402214d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40223db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40221660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402217f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f4d40200570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f4d40200570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402008f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40200a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40200c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401fd980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401fe020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401fe1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401fe340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401fe660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401fe7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401fe980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401feb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401feca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401fd020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401fd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401fd340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401fd4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40200da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401fd660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401fd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f4d401eb570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f4d401eb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401eb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401eba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401ebc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401e9980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401ea020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401ea1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401ea340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401ea4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401ea660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401ea7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401ea980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401eab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401eaca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401e9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401e91b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401e9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401e94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401ebda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401e9660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401e97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f4d4020f580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f4d4020f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4020f900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4020fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4020fc20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4020d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4020e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4020e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4020e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4020e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4020e660"/>
        <function-ref name="get" scoped="" ref="0x7f4d4020e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4020e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4020eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4020eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4020d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4020d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4020d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4020d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4020fdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4020d660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4020d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f4d40263710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f4d40263710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40263c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40263e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40262020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40261c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40262340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402624d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40262660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402627f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40262980"/>
        <function-ref name="get" scoped="" ref="0x7f4d40262b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40262ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40262e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40261020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402612b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40261440"/>
        <function-ref name="set" scoped="" ref="0x7f4d402615d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40261760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402621b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402618f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40261a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f4d4024a8a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f4d4024a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4024ac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4024adb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40249020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40248c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40249340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402494d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40249660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402497f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40249980"/>
        <function-ref name="get" scoped="" ref="0x7f4d40249b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40249ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40249e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40248020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402482b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40248440"/>
        <function-ref name="set" scoped="" ref="0x7f4d402485d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40248760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402491b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402488f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40248a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f4d402358a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f4d402358a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40235c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40235db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40234020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40233c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40234340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402344d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40234660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402347f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40234980"/>
        <function-ref name="get" scoped="" ref="0x7f4d40234b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40234ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40234e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40233020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402332b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40233440"/>
        <function-ref name="set" scoped="" ref="0x7f4d402335d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40233760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402341b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402338f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40233a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f4d401fdd40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f4d401fdd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401fc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401fc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401fc400"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401fa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401fc720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401fc8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401fca40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401fcbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401fcd60"/>
        <function-ref name="get" scoped="" ref="0x7f4d401fb020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401fb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401fb340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401fb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401fb760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401fb8f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401fba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401fbc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401fc590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401fbda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f4d40217d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f4d40217d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402160e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40216270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40216400"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402141b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40216720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402168b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40216a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40216bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40216d60"/>
        <function-ref name="get" scoped="" ref="0x7f4d40215020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402151b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40215340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402154d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40215760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402158f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40215a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40215c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40216590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40215da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40214020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4d40294d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4d40294d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40293100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40293290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40293420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402911b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40293740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402938d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40293a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40293bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40293d80"/>
        <function-ref name="get" scoped="" ref="0x7f4d40292020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402921b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40292340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402924d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40292760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402928f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40292a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40292c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402935b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40292da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40291020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4d4027be50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4d4027be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4027a210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4027a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4027a530"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40278340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4027a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4027a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4027ab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4027ad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40279020"/>
        <function-ref name="get" scoped="" ref="0x7f4d402791b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40279340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d402794d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40279660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402798f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40279a80"/>
        <function-ref name="set" scoped="" ref="0x7f4d40279c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40279da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4027a6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40278020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f4d4023b8a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f4d4023b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4023bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4023bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40239020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40238c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40239340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402394d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40239660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402397f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40239980"/>
        <function-ref name="get" scoped="" ref="0x7f4d40239b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40239ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40239e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40238020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402382b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40238440"/>
        <function-ref name="set" scoped="" ref="0x7f4d402385d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40238760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402391b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402388f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40238a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f4d40276e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f4d40276e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40274210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d402743a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40274530"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40272340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40274850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402749e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40274b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40274d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40273020"/>
        <function-ref name="get" scoped="" ref="0x7f4d402731b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40273340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d402734d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40273660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402738f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40273a80"/>
        <function-ref name="set" scoped="" ref="0x7f4d40273c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40273da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402746c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40272020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f4d4025b020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f4d4025b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4025b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4025b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4025b6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402594d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4025b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4025bb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4025bd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4025a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4025a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4025a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4025a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4025a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4025a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4025aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4025ac10"/>
        <function-ref name="set" scoped="" ref="0x7f4d4025ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40259020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4025b850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402591b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40259340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f4d40242020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f4d40242020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40242530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d402426c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402404d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402429e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40242b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40242d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40241020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402411b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40241340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402414d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40241660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402417f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40241a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40241c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40241da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40240020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40242850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402401b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40240340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f4d4022d020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f4d4022d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4022d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4022d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4022d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4022b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4022d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4022db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4022dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4022c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4022c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4022c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4022c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4022c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4022c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4022ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4022cc10"/>
        <function-ref name="set" scoped="" ref="0x7f4d4022cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4022b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4022d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4022b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4022b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f4d40212d50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f4d40212d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40211100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40211290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40211420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4020f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40211740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402118d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40211a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40211bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40211d80"/>
        <function-ref name="get" scoped="" ref="0x7f4d40210020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402101b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40210340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402104d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40210760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402108f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40210a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40210c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402115b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40210da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4020f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4d4029e530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4d4029e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4029e8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4029ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4029ebd0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402ac980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402ad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d402ad340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402ad660"/>
        <function-ref name="get" scoped="" ref="0x7f4d402ad7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402ad980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d402adb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402adca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402ac020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402ac1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d402ac340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402ac4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4029ed60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402ac660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402ac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4d40287580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4d40287580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40287900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40287a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40287c20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40285980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40286020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402861b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40286340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402864d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40286660"/>
        <function-ref name="get" scoped="" ref="0x7f4d402867f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40286980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40286b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40286ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40285020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402851b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40285340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402854d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40287db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40285660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402857f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f4d4026d710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f4d4026d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4026da90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4026dc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4026ddb0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4026ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4026c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4026c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4026c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4026c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4026c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4026c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4026cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4026cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4026ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4026b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4026b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4026b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4026b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4026c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4026b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4026b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f4d402548a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f4d402548a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40254c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40254db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40253020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40252c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40253340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402534d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40253660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402537f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40253980"/>
        <function-ref name="get" scoped="" ref="0x7f4d40253b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40253ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40253e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40252020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402522b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40252440"/>
        <function-ref name="set" scoped="" ref="0x7f4d402525d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40252760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402531b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402528f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40252a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f4d4020dd50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f4d4020dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4020c100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4020c290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4020c420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4020a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4020c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4020c8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4020ca60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4020cbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4020cd80"/>
        <function-ref name="get" scoped="" ref="0x7f4d4020b020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4020b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4020b340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4020b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4020b760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4020b8f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4020ba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4020bc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4020c5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4020bda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4020a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f4d40205570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f4d40205570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402058f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40205a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40205c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40203980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40204020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402041b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40204340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40204660"/>
        <function-ref name="get" scoped="" ref="0x7f4d402047f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40204980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40204b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40204ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40203020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402031b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40203340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402034d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40205da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40203660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402037f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f4d401f5570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f4d401f5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401f58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401f5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401f5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401f3980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401f4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401f41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401f4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401f44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401f4660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401f47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401f4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401f4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401f4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401f3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401f31b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401f3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401f34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401f5da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401f3660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401f37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f4d4024f8a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f4d4024f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4024fc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4024fdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4024e020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4024dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4024e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4024e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4024e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4024e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4024e980"/>
        <function-ref name="get" scoped="" ref="0x7f4d4024eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4024eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4024ee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4024d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4024d2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4024d440"/>
        <function-ref name="set" scoped="" ref="0x7f4d4024d5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4024d760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4024e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4024d8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4024da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f4d4020a580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f4d4020a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4020a900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4020aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4020ac20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40208980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40209020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40209340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40209660"/>
        <function-ref name="get" scoped="" ref="0x7f4d402097f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40209980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40209b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40209ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40208020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402081b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40208340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402084d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4020adb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40208660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4d40299d50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4d40299d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40298100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40298290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40298420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402961b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40298740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402988d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40298a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40298bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40298d80"/>
        <function-ref name="get" scoped="" ref="0x7f4d40297020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402971b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40297340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402974d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40297760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402978f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40297a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40297c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402985b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40297da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40296020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4d40280e50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4d40280e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4027f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4027f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4027f530"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4027d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4027f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4027f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4027fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4027fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4027e020"/>
        <function-ref name="get" scoped="" ref="0x7f4d4027e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4027e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4027e4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4027e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4027e8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4027ea80"/>
        <function-ref name="set" scoped="" ref="0x7f4d4027ec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4027eda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4027f6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4027d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4027d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f4d40266e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f4d40266e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40265210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d402653a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40265530"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40263340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40265850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402659e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40265b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40265d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40264020"/>
        <function-ref name="get" scoped="" ref="0x7f4d402641b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40264340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d402644d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40264660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402648f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40264a80"/>
        <function-ref name="set" scoped="" ref="0x7f4d40264c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40264da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402656c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40263020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f4d40214580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f4d40214580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40214900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40214a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40214c20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40212980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40213020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402131b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40213340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40213660"/>
        <function-ref name="get" scoped="" ref="0x7f4d402137f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40213980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40213b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40213ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40212020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402121b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40212340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402124d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40214db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40212660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f4d401fa570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f4d401fa570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401fa8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401faa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401fac10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401f8980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401f9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401f91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401f9340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401f94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401f9660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401f97f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401f9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401f9b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401f9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401f8020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401f81b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401f8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401f84d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401fada0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401f8660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f4d40260020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f4d40260020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402603a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40260530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d402606c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4025e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402609e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40260b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40260d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4025f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4025f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4025f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4025f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4025f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4025f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4025fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4025fc10"/>
        <function-ref name="set" scoped="" ref="0x7f4d4025fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4025e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40260850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4025e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4025e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f4d40247020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f4d40247020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40247530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d402476c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402454d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402479e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40247b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40247d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40246020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402461b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40246340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402464d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40246660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402467f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40246a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40246c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40246da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40245020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40247850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402451b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40245340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f4d40232020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f4d40232020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402323a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40232530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d402326c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402304d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402329e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40232b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40232d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40231020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402311b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40231340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402314d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40231660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402317f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40231a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40231c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40231da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40230020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40232850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402301b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40230340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4d40291580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4d40291580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40291900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40291a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40291c20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4028f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40290020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402901b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40290340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402904d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40290660"/>
        <function-ref name="get" scoped="" ref="0x7f4d402907f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40290980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40290b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40290ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4028f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4028f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4028f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4028f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40291db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4028f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4028f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f4d40237020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f4d40237020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40237530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d402376c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402354d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402379e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40237b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40237d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40236020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402361b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40236340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402364d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40236660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402367f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40236a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40236c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40236da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40235020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40237850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402351b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40235340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4d4028c580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4d4028c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4028c900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4028ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4028cc20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4028a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4028b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4028b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4028b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4028b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4028b660"/>
        <function-ref name="get" scoped="" ref="0x7f4d4028b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4028b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4028bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4028bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4028a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4028a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4028a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4028a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4028cdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4028a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4028a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f4d40272710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f4d40272710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40272a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40272c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40272db0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40270a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402711b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40271340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d402714d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40271660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402717f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40271980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40271b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40271ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40271e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40270120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402702b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40270440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d402705d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40271020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40270760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402708f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f4d402598a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f4d402598a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40259c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40259db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40258020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40257c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40258340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402584d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40258660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d402587f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40258980"/>
        <function-ref name="get" scoped="" ref="0x7f4d40258b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40258ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40258e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40257020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402572b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40257440"/>
        <function-ref name="set" scoped="" ref="0x7f4d402575d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40257760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402581b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402578f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40257a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f4d402408a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f4d402408a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40240c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40240db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4023f020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4023ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4023f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4023f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4023f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4023f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4023f980"/>
        <function-ref name="get" scoped="" ref="0x7f4d4023fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4023fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4023fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4023e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4023e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4023e440"/>
        <function-ref name="set" scoped="" ref="0x7f4d4023e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4023e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4023f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4023e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4023ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f4d4022b8a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f4d4022b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4022bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4022bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4022a020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40229c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4022a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4022a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4022a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4022a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4022a980"/>
        <function-ref name="get" scoped="" ref="0x7f4d4022ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4022aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4022ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40229020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402292b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40229440"/>
        <function-ref name="set" scoped="" ref="0x7f4d402295d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40229760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4022a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d402298f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40229a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4d402acd50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4d402acd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4029d100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4029d290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4029d420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4029b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4029d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4029d8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4029da60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4029dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4029dd80"/>
        <function-ref name="get" scoped="" ref="0x7f4d4029c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4029c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4029c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4029c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4029c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4029c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4029ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4029cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4029d5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4029cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4029b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4d40285d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4d40285d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40284100"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40284290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40284420"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402821b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40284740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402848d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40284a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40284bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40284d80"/>
        <function-ref name="get" scoped="" ref="0x7f4d40283020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402831b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40283340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402834d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40283760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402838f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40283a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40283c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d402845b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40283da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40282020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f4d4026be50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f4d4026be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4026a210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4026a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4026a530"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40268340"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4026a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4026a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4026ab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4026ad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40269020"/>
        <function-ref name="get" scoped="" ref="0x7f4d402691b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40269340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d402694d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40269660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d402698f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40269a80"/>
        <function-ref name="set" scoped="" ref="0x7f4d40269c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40269da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4026a6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40268020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d402681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f4d40251020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f4d40251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40251530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d402516c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4024f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402519e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40251b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40251d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40250020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d402501b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40250340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402504d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40250660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402507f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40250a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40250c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40250da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4024f020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40251850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4024f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4024f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f4d40203d40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f4d40203d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402020e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40202270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40202400"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402001b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40202720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d402028b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40202a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40202bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40202d60"/>
        <function-ref name="get" scoped="" ref="0x7f4d40201020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402011b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40201340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402014d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40201760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402018f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40201a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40201c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40202590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40201da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40200020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f4d401f0560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f4d401f0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401f08e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401f0a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401f0c00"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401ee980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401ef020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401ef1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401ef340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401ef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401ef660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401ef7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401ef980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401efb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401efca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401ee020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401ee1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401ee340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401ee4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401f0d90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401ee660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401ee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f4d4021e580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f4d4021e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4021e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4021ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4021ec20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4021c980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4021d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4021d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4021d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4021d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4021d660"/>
        <function-ref name="get" scoped="" ref="0x7f4d4021d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4021d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4021db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4021dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4021c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4021c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4021c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4021c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4021edb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4021c660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4021c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f4d4024c020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f4d4024c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4024c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4024c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4024c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4024a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4024c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4024cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4024cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4024b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4024b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4024b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4024b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4024b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4024b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4024ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4024bc10"/>
        <function-ref name="set" scoped="" ref="0x7f4d4024bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4024a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4024c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4024a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4024a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f4d401eed40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f4d401eed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401ed0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401ed270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401ed400"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401eb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401ed720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401ed8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401eda40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401edbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401edd60"/>
        <function-ref name="get" scoped="" ref="0x7f4d401ec020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401ec1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401ec340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401ec4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401ec760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401ec8f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401eca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401ecc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401ed590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401ecda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f4d401e6580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f4d401e6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401e6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401e6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401e6c20"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401e4980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401e5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401e51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401e5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401e54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401e5660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401e57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401e5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401e5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401e5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401e4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401e41b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401e4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401e44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401e6db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401e4660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401e47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f4d402268f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f4d402268f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d402250a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40225230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d402253c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d402231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d402256e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40225870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40225a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40225b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40225d20"/>
        <function-ref name="get" scoped="" ref="0x7f4d40224020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d402241b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40224340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d402244d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40224760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d402248f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40224a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40224c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40225550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40224da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40223020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d401e1d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d401e1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401b20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401b2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401b2400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401b01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401b2720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401b28b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401b2a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401b2bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401b2d60"/>
        <function-ref name="get" scoped="" ref="0x7f4d401b1020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401b11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401b1340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401b14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401b1760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401b18f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401b1a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401b1c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401b1da0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401b2590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d401ad260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d401ad260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401ad5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401ad770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401ad900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401ab660"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401adc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401addb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401ac020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401ac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401ac340"/>
        <function-ref name="get" scoped="" ref="0x7f4d401ac4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401ac660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401ac7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401ac980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401acc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401acda0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401ab020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401ab1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401ab340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401ada90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d401a8740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d401a8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401a8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401a8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401a8de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401a6a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401a71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401a7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401a74d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401a7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401a77f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d401a7980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401a7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401a7ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401a7e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401a6120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401a62b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d401a6440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401a65d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401a6760"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401a7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401a68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d401a3b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d401a3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401a2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401a21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d401a2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401a0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401a2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401a27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401a2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401a2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401a2ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d401a2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401a1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401a11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401a1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401a15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401a1760"/>
        <function-ref name="set" scoped="" ref="0x7f4d401a18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401a1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401a1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401a24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401a1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d4019d060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d4019d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4019d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4019d570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4019d700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4019a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4019da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4019dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4019dd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4019b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4019b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4019b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4019b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4019b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4019b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4019ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4019bc10"/>
        <function-ref name="set" scoped="" ref="0x7f4d4019bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4019a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4019a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4019d890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4019a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40197540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40197540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401978c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40197a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40197be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40195980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40196020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401961b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40196340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40196660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401967f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40196980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40196b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40196ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40195020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401951b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40195340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401954d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40195660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40197d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40192b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40192b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40191020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401911b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40191340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4018f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40191660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401917f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40191980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40191b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40191ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40191e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40190020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401901b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40190340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401905d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40190760"/>
        <function-ref name="set" scoped="" ref="0x7f4d401908f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40190a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40190c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401914d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40190da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d4018c060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d4018c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4018c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4018c570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4018c700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4018a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4018ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4018cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4018cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4018b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4018b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4018b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4018b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4018b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4018b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4018ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4018bc10"/>
        <function-ref name="set" scoped="" ref="0x7f4d4018bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4018a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4018a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4018c890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4018a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40187540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40187540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401878c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40187a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40187be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40185980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40186020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401861b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40186340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401864d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40186660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401867f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40186980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40186b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40186ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40185020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401851b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40185340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401854d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40185660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40187d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401857f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40182b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40182b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40181020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401811b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40181340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4017f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40181660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401817f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40181980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40181b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40181ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40181e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40180020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401801b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40180340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d401805d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40180760"/>
        <function-ref name="set" scoped="" ref="0x7f4d401808f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40180a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40180c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401814d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40180da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d4017c060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d4017c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4017c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4017c570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4017c700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4017a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4017ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4017cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4017cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4017b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4017b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4017b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4017b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4017b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4017b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4017ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4017bc10"/>
        <function-ref name="set" scoped="" ref="0x7f4d4017bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4017a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4017a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4017c890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4017a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40177540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40177540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401778c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40177a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40177be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40175980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40176020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401761b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40176340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401764d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40176660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401767f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40176980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40176b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40176ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40175020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401751b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40175340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401754d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40175660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40177d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40171d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40171d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401700e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40170270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40170400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4016e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40170720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401708b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40170a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40170bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40170d60"/>
        <function-ref name="get" scoped="" ref="0x7f4d4016f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4016f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4016f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4016f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4016f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4016f8f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4016fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4016fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4016fda0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40170590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4016e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d4016b260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d4016b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4016b5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4016b770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4016b900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40169660"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4016bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4016bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4016a020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4016a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4016a340"/>
        <function-ref name="get" scoped="" ref="0x7f4d4016a4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4016a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4016a7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4016a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4016ac10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4016ada0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40169020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401691b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40169340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4016ba90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40166740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40166740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40166ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40166c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40166de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40164a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40165340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401654d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40165660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401657f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40165980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40165b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40165ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40165e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40164120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401642b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40164440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401645d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40164760"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40165020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40161b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40161b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40160020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401601b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40160340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4015e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40160660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401607f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40160980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40160b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40160ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40160e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4015f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4015f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4015f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4015f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4015f760"/>
        <function-ref name="set" scoped="" ref="0x7f4d4015f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4015fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4015fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401604d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4015fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d4015b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d4015b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4015b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4015b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4015b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401594d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4015ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4015bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4015bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4015a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4015a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4015a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4015a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4015a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4015a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4015aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4015ac10"/>
        <function-ref name="set" scoped="" ref="0x7f4d4015ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40159020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401591b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4015b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40159340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40156540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40156540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401568c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40156a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40156be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40154980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40155020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401551b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40155340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401554d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40155660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401557f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40155980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40155b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40155ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40154020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401541b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40154340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401544d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40154660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40156d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401547f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40151b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40151b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40150020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d401501b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40150340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4014e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40150660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401507f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40150980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40150b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40150ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40150e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4014f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4014f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4014f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4014f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4014f760"/>
        <function-ref name="set" scoped="" ref="0x7f4d4014f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4014fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4014fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d401504d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4014fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d4014b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d4014b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4014b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4014b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4014b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401484d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4014ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4014bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4014bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40149020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401491b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40149340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401494d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40149660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401497f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40149a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40149c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40149da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40148020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401481b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4014b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40148340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40145540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40145540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401458c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40145a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40145be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40143980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40144020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401441b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40144340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40144660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401447f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40144980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40144b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40144ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40143020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401431b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40143340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401434d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40143660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40145d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40140b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40140b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4013f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4013f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4013f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4013d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4013f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4013f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4013f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4013fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4013fca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4013fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4013e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4013e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4013e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4013e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4013e760"/>
        <function-ref name="set" scoped="" ref="0x7f4d4013e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4013ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4013ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4013f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4013eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d4013a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d4013a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4013a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4013a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4013a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401384d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4013aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4013abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4013ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40139020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401391b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40139340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401394d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40139660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401397f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40139a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40139c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40139da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40138020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401381b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4013a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40138340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40135540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40135540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401358c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40135a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40135be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40133980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40134020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401341b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40134340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401344d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40134660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401347f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40134980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40134b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40134ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40133020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401331b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40133340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401334d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40133660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40135d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40130dc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40130dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4012f180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4012f310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4012f4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4012d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4012f7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4012f950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4012fae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4012fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4012fe00"/>
        <function-ref name="get" scoped="" ref="0x7f4d4012e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4012e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4012e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4012e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4012e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4012e8f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4012ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4012ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4012eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4012f630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4012d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d4012a260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d4012a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4012a5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4012a770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4012a900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40128660"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4012ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4012adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40129020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40129340"/>
        <function-ref name="get" scoped="" ref="0x7f4d401294d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40129660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d401297f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40129980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40129c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40129da0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40128020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401281b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40128340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4012aa90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40125740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40125740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40125ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40125c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40125de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40123a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d401241b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40124340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d401244d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40124660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401247f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40124980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40124b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40124ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40124e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40123120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401232b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40123440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401235d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40123760"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40124020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401238f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40120b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40120b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4011e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4011e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4011e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4011c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4011e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4011e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4011e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4011eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4011eca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4011ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4011d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4011d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4011d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4011d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4011d760"/>
        <function-ref name="set" scoped="" ref="0x7f4d4011d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4011da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4011dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4011e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4011dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40119060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40119060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401193e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40119570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40119700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401174d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40119a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40119bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40119d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40118020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401181b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40118340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401184d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40118660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40118a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40118c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40118da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40117020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401171b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40119890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40117340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40114540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40114540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401148c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40114a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40114be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40112980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40113020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401131b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40113340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40113660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401137f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40113980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40113b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40113ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40112020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401121b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40112340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401124d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40112660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40114d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d4010fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d4010fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4010e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4010e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4010e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d4010c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4010e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4010e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4010e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4010eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4010eca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4010ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4010d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4010d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4010d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4010d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4010d760"/>
        <function-ref name="set" scoped="" ref="0x7f4d4010d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4010da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4010dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4010e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d4010dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40109060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40109060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401093e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40109570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40109700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d401074d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40109a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40109bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40109d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40108020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d401081b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40108340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d401084d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40108660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d401087f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40108a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40108c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d40108da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40107020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d401071b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40109890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40107340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d40104540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d40104540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d401048c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40104a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40104be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40102980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40103020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d401031b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40103340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d401034d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40103660"/>
        <function-ref name="get" scoped="" ref="0x7f4d401037f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40103980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40103b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40103ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40102020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d401021b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40102340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d401024d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40102660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40104d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d401027f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400ffb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400ffb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400fe020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400fe1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400fe340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400fc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400fe660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400fe7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400fe980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400feb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400feca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d400fee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400fd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400fd1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400fd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400fd5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400fd760"/>
        <function-ref name="set" scoped="" ref="0x7f4d400fd8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400fda80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400fdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400fe4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400fdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400f9060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400f9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400f93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400f9570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400f9700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400f74d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400f9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400f9bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400f9d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400f8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400f81b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d400f8340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400f84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400f8660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400f87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400f8a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400f8c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d400f8da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400f7020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400f71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400f9890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400f7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400f3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400f3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400f38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400f3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400f3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400f1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400f21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400f2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400f2660"/>
        <function-ref name="get" scoped="" ref="0x7f4d400f27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400f2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400f2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400f2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400f1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400f11b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d400f1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400f14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400f1660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400f3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400f17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400eeb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400eeb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400ed020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400ed1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400ed340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400ed660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400ed7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400ed980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400edb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400edca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d400ede30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400ec020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400ec1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400ec340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400ec5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400ec760"/>
        <function-ref name="set" scoped="" ref="0x7f4d400ec8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400eca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400ecc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400ed4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400ecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400e8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400e8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400e83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400e8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400e8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400e64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400e8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400e8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400e8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400e7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400e71b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d400e7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400e74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400e7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400e77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400e7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400e7c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d400e7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400e6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400e61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400e8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400e3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400e3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400e38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400e3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400e3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400e1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400e2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400e21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400e2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400e2660"/>
        <function-ref name="get" scoped="" ref="0x7f4d400e27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400e2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400e2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400e2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400e1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400e11b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d400e1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400e14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400e1660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400e3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400e17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400deb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400deb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400dd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400dd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400dd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400dd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400dd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400dd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400ddb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400ddca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d400dde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400dc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400dc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400dc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400dc760"/>
        <function-ref name="set" scoped="" ref="0x7f4d400dc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400dca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400dcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400dd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400d8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400d8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400d83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400d8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400d8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400d64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400d8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400d8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400d8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400d7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400d71b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d400d7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400d74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400d7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400d7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400d7c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d400d7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400d6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400d61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400d8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400d3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400d3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400d38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400d3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400d3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400d1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400d21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400d2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400d24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400d2660"/>
        <function-ref name="get" scoped="" ref="0x7f4d400d27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400d2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400d2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400d2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400d1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400d11b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d400d1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400d14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400d1660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400d3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400ceb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400ceb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400cc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400cc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400cc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400ca020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400cc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400cc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400cc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400ccb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400ccca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d400cce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400cb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400cb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400cb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400cb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400cb760"/>
        <function-ref name="set" scoped="" ref="0x7f4d400cb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400cba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400cbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400cc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400cbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400c7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400c7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400c73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400c7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400c7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400c54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400c7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400c7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400c7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400c6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400c61b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d400c6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400c64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400c6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400c67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400c6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400c6c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d400c6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400c5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400c51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400c7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400c2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400c2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400c28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400c2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400c2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400c0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400c1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400c11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400c1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400c14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400c1660"/>
        <function-ref name="get" scoped="" ref="0x7f4d400c17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400c1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400c1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400c1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400c0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400c01b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d400c0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400c04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400c0660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400c2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400c07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400bdb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400bdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400bc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400bc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400bc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400ba020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400bc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400bc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400bc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400bcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400bcca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d400bce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400bb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400bb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400bb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400bb760"/>
        <function-ref name="set" scoped="" ref="0x7f4d400bb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400bba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400bbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400bc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400bbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400b7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400b7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400b73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400b7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400b7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400b54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400b7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400b7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400b7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400b6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400b61b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d400b6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400b64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400b6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400b67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400b6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400b6c10"/>
        <function-ref name="set" scoped="" ref="0x7f4d400b6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400b5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400b51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400b7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4d400b2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4d400b2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d400b28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400b2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d400b2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400b0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d400b1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400b11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400b1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400b1660"/>
        <function-ref name="get" scoped="" ref="0x7f4d400b17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400b1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d400b1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d400b1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d400b0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400b01b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d400b0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400b04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400b0660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400b2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d40022610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d40022610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40022990"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40022b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40022cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d40020980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40021020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400211b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d40021340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d400214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40021660"/>
        <function-ref name="get" scoped="" ref="0x7f4d400217f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d40021980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40021b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40021ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40020020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d400201b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40020340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d400204d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d40020660"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40022e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d400207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d40034480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d40034480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40034800"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40034990"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40034b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40034cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40034e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40022020"/>
        <function-ref name="set" scoped="" ref="0x7f4d400221b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40022340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d4001cde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d4001cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4001b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4001b310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d4001b4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400191b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4001b7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4001b950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d4001bae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d4001bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4001be00"/>
        <function-ref name="get" scoped="" ref="0x7f4d4001a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d4001a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d4001a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d4001a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d4001a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d4001a8f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4001aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d4001ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d4001ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4001b630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40019020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d4001eb20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d4001eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d4001c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d4001c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d4001c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d4001c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4d4001c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d4001c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d4001c980"/>
        <function-ref name="clr" scoped="" ref="0x7f4d4001cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d40016480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d40016480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40016800"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d40016990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d40016b20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d400147f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40016e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d40015020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d400151b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d40015340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d400154d0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40015660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d400157f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d40015980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d40015b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d40015da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d40014020"/>
        <function-ref name="set" scoped="" ref="0x7f4d400141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d40014340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d400144d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d40016cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d40014660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d400171b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d400171b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d40017530"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d400176c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d40017850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d400179e0"/>
        <function-ref name="get" scoped="" ref="0x7f4d40017b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d40017d00"/>
        <function-ref name="set" scoped="" ref="0x7f4d40016020"/>
        <function-ref name="clr" scoped="" ref="0x7f4d400161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f4d3fef3a50" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f4d3fef3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4d3fef3dd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4d3fefc020"/>
        <function-ref name="start" scoped="" ref="0x7f4d3fefc1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fefc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f4d40009cf0" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4d40009cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4d400060a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4d3ff16910" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4d3ff16910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3ff16c90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3ff16e20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ffef020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ffef1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3ffef340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4d3fefb8f0" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4d3fefb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3fefbc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3fefbe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ff05020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3ff051b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3ff05340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4d3feecc20" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3feecc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4d3fefa020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4d3fefa1b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4d3fefa340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4d3fefa4d0"/>
        <function-ref name="getPower" scoped="" ref="0x7f4d3fefa660"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4d3fefa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f4d3fef6180" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3fef6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3fef6500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4d40006360" loc="10:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d40006360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d400066e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d40006870"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d40006a00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d40006b90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d40006d20"/>
        <function-ref name="get" scoped="" ref="0x7f4d40005020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d400051b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d400057f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d40005340"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d400054d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d40005660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7f4d3fff9820" loc="11:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7f4d3fff9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fff8cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d40003300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3fff80d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d40003c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3fff6660"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3fff61e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d40003780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d40004480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3fff86e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d40004950"/>
        <function-ref name="stop" scoped="" ref="0x7f4d40004e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7f4d3fff6cd0" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7f4d3fff6cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fff1220"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fff47c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3fff3590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3fff3110"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3fff1b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3fff16a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3fff4c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3fff5940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3fff3ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3fff5e10"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fff4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4d3ff068d0" loc="15:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4d3ff068d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4d3ff06c50"/>
        <function-ref name="source" scoped="" ref="0x7f4d3ff06de0"/>
        <function-ref name="address" scoped="" ref="0x7f4d3ffee020"/>
        <function-ref name="destination" scoped="" ref="0x7f4d3ffee1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4d3ffee340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4d3ffee4d0"/>
        <function-ref name="type" scoped="" ref="0x7f4d3ffee660"/>
        <function-ref name="setType" scoped="" ref="0x7f4d3ffee7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4d3ffee980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4d3ffeeb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4d3ffeeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4d3febc980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3febc980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fb90e80"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fb914a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3fb90260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3fb91da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3fb8f7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3fb8f320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3fb91920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3fb925a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3fb90870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3fb92a70"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fb91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4d3feb2050" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f4d3feb2050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3feae630"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3feb1ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3feaf920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3feaf4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3fead020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3feaeab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3feaf020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3feb2c40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3feae020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3feb1170"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3feb1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4d3fea9c30" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f4d3fea9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fea4110"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fea76a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3fea64a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3fea6020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3fea4a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3fea4590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3fea7b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3fea8860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3fea6ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3fea8d30"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fea7220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4d3fe9f500" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4d3fe9f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3fea1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3feade50" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3feade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3fea9210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4d3fc62870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4d3fc62870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fc5f090"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fc60090"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3fc60a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3fc60550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3fc5f550"/>
        <function-ref name="start" scoped="" ref="0x7f4d3fc616a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fc61bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3fc62020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3fc62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3fc623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4d3e9fb4f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4d3e9fb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e9f8db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e9fada0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3e9f8760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e9f82a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3e9f72a0"/>
        <function-ref name="start" scoped="" ref="0x7f4d3e9fa3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e9fa8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3e9fcb10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3e9fcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3e9fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4d3e9e2da0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3e9e2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3e9e1180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3e9e1310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3e9e14a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3e9e1630"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e9e17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4d3e9e4340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3e9e4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3e9e46c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3e9e4850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3e9e49e0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3e9e4b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3e9e4d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3e9e3020"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3e9e31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3e9e3340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3e9e34d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3e9e3660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3e9e37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4d3e9e3a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3e9e3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3e9e3e00"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3e9e2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3e9e21b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3e9e2340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3e9e24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3e9e2660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3e9e27f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3e9e2980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3e9e2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4d3fe6a1d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3fe6a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe6a550"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe6a6e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe6a870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe6aa00"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe6ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4d3fe6f990" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fe6f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fe6fd10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fe6e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe6e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fe6e340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe6e4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe6e660"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fe6e7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe6e980"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fe6eb10"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fe6eca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fe6ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4d3fe6c720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3fe6c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe6caa0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe6cc30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe6cdc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe6b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe6b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe6b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe6b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe6b660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe6b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f4d3fe59730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f4d3fe59730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe59ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe59c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe59dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe58020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe581b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe58340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe584d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe58660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f4d3fe54280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f4d3fe54280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe54600"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe54790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe54920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe54ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe54c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe54dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe53020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe531b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe53340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f4d3fe5b700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f4d3fe5b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe5ba80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fe5bc10"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fe5bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe59020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe591b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fe59340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f4d3fe48020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f4d3fe48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe483a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fe48530"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fe486c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe48850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe489e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fe48b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f4d3fe61890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f4d3fe61890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe61c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe61da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe5b020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe5b1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f4d3fe49160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f4d3fe49160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe494e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe49670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe49800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe49990"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe49b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f4d3fe3eae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f4d3fe3eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe3ee60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fe3d020"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fe3d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe3d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe3d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fe3d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f4d3fe47020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f4d3fe47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe473a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe47530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe476c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe47850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe479e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe47b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe47d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe46020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f4d3fe650c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f4d3fe650c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe65440"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe655d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe65760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe658f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe65a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe65c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe65da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe64020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f4d3fe4fa20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f4d3fe4fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe4fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fe4e020"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fe4e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe4e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe4e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fe4e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f4d3fe50bb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f4d3fe50bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe4f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe4f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe4f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe4f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe4f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f4d3fe51730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f4d3fe51730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe51ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe51c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe51dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe50020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe501b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe50340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe504d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe50660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe507f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f4d3fe57a20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f4d3fe57a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe57da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fe56020"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fe561b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe56340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe564d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fe56660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f4d3fe45570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f4d3fe45570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe458f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fe45a80"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fe45c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe45da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe44020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fe441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f4d3fe4ea50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f4d3fe4ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe4edd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe4d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe4d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe4d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe4d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe4d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe4d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe4d980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe4db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f4d3fe58bb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f4d3fe58bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe57020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe571b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe57340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe574d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f4d3fe69830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f4d3fe69830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fe69bb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fe69d40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe66020"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fe661b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe66340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe664d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fe66660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe667f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fe66980"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fe66b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fe66ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f4d3fe46570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f4d3fe46570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe46af0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe46c80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe46e10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe45020"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f4d3fe62410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f4d3fe62410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe62790"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe62920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe62ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe62c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe62dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe61020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe611b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe61340"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe614d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f4d3fe445a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f4d3fe445a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe44920"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe44ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe44c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe44dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe43020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe431b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe43340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe434d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe43660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f4d3fe5c410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f4d3fe5c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe5c790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fe5c920"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fe5cab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe5cc40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe5cdd0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fe62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f4d3fe4cda0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f4d3fe4cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe4b180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fe4b310"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fe4b4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe4b630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe4b7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fe4b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f4d3fe64570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f4d3fe64570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe648f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe64a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe64c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe64da0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f4d3fe4c020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f4d3fe4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe4c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe4c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe4c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe4c850"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe4c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f4d3fe42890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f4d3fe42890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe42c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fe42da0"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fe41020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe411b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe41340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fe414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f4d3fe4bd40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f4d3fe4bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe4a0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe4a270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe4a400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe4a590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe4a720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe4a8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe4aa40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe4abd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe4ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f4d3fe569e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f4d3fe569e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fe56d60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fe55020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe551b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fe55340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe554d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe55660"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fe557f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe55980"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fe55b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fe55ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fe55e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f4d3fe52700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f4d3fe52700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe52a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fe52c10"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fe52da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe51020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe511b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fe51340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f4d3fe43a20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f4d3fe43a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe43da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe42020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe421b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe42340"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f4d3fe3fd40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f4d3fe3fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe3e0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe3e270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe3e400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe3e590"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe3e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f4d3fe53700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f4d3fe53700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fe53b80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fe53d10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fe52020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fe521b0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe52340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f4d3fe418c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f4d3fe418c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fe41c40"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fe41dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe3f020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fe3f1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fe3f340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe3f4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fe3f660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fe3f7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fe3f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f4d3fe05940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4d3fe05940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe05cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f4d3fe052f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f4d3fe052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe05670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f4d3fe04020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4d3fe04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f4d3fe06bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fe06bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fe05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4d3fe083e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fe083e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fe08760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fe088f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe08a80"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fe08c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe08da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe06020"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fe061b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fe06340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fe064d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fe06660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fe067f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f4d3fdfe750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4d3fdfe750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fdfead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f4d3fdfe100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f4d3fdfe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fdfe480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f4d3fdfeda0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4d3fdfeda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fdfd180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f4d3fdffa60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fdffa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fdffe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4d3fe00260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fe00260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fe005e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fe00770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fe00900"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fe00a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fe00c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fe00db0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fdff020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fdff1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fdff340"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fdff4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fdff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3fdb37a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3fdb37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fdb3b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fdb3cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fdb3e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fdb2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fdb21b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fdb2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4d3fdfa6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4d3fdfa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fdfaa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fdfabe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fdfad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fdb4020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fdb41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fdb4340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fdb44d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fdb4660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fdb47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4d3fdb1c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fdb1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fdb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4d3fdb4ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4d3fdb4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fdb4e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fdb3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fdb31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fdb3340"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fdb34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4d3fdb2610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fdb2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fdb2990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fdb2b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fdb2cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fdb2e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fdb1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fdb11b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fdb1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fdb14d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fdb1660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fdb17f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fdb1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3fdaccb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3fdaccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fdaa0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fdaa230"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fdaa3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fdaa550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fdaa6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fdaa870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4d3fdaeb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4d3fdaeb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fdad020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fdad1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fdad340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fdad4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fdad660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fdad7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fdad980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fdadb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fdadca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4d3fda82f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fda82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fda8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4d3fdac020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4d3fdac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fdac3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fdac530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fdac6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fdac850"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fdac9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4d3fdaab40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fdaab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fda9020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fda91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fda9340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fda94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fda9660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fda97f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fda9980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fda9b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fda9ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fda9e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fda8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3fda32f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3fda32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fda3670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fda3800"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fda3990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fda3b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fda3cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fda3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4d3fda5220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4d3fda5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fda55a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fda5730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fda58c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fda5a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fda5be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fda5d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fda4020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fda41b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fda4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4d3fda17a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fda17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fda1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4d3fda4610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4d3fda4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fda4990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fda4b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fda4cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fda4e40"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fda3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4d3fda2160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fda2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fda24e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fda2670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fda2800"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fda2990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fda2b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fda2cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fda2e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fda1020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fda11b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fda1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fda14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3fd9b7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3fd9b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd9bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fd9bcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fd9be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd9a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd9a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fd9a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4d3fd9e6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4d3fd9e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fd9ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fd9ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd9ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fd9d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fd9d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd9d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fd9d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fd9d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fd9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4d3fd99c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fd99c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4d3fd9dac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4d3fd9dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd9de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fd9b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fd9b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fd9b340"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd9b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4d3fd9a610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fd9a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fd9a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fd9ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd9acb0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fd9ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd99020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd991b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fd99340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd994d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fd99660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fd997f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fd99980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3fd94cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3fd94cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd930a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fd93230"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fd933c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd93550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd936e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fd93870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4d3fd96b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4d3fd96b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fd95020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fd951b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd95340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fd954d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fd95660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd957f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fd95980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fd95b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fd95ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4d3fd912f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fd912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd91670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4d3fd94020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4d3fd94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd943a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fd94530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fd946c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fd94850"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd949e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4d3fd93b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fd93b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fd92020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fd921b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd92340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fd924d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd92660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd927f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fd92980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd92b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fd92ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fd92e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fd91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3fd8c2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3fd8c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd8c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fd8c800"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fd8c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd8cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd8ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fd8ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4d3fd8e220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4d3fd8e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fd8e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fd8e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd8e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fd8ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fd8ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd8ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fd8d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fd8d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fd8d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4d3fd897a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fd897a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd89b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4d3fd8d610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4d3fd8d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd8d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fd8db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fd8dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fd8de40"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd8c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4d3fd8a160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fd8a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fd8a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fd8a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd8a800"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fd8a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd8ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd8acb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fd8ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd89020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fd891b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fd89340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fd894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3fd847a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3fd847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd84b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fd84cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fd84e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd83020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd831b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fd83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4d3fd866d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4d3fd866d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fd86a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fd86be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd86d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fd85020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fd851b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd85340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fd854d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fd85660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fd857f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4d3fd82c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fd82c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4d3fd85ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4d3fd85ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd85e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fd84020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fd841b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fd84340"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd844d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4d3fd83610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fd83610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fd83990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fd83b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd83cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fd83e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd82020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd821b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fd82340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd824d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fd82660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fd827f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fd82980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3fd7dcb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3fd7dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd7b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fd7b230"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fd7b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd7b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd7b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fd7b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4d3fd7fb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4d3fd7fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fd7e020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fd7e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd7e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fd7e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fd7e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd7e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fd7e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fd7eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fd7eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4d3fd792f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fd792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd79670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4d3fd7d020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4d3fd7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd7d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fd7d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fd7d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fd7d850"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd7d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4d3fd7bb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fd7bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fd7a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fd7a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd7a340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fd7a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd7a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd7a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fd7a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd7ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fd7aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fd7ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fd79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3fd742f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3fd742f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd74670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fd74800"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fd74990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd74b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd74cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fd74e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4d3fd76220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4d3fd76220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fd765a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fd76730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd768c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fd76a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fd76be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd76d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fd75020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fd751b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fd75340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4d3fd727a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fd727a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd72b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4d3fd75610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4d3fd75610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd75990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fd75b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fd75cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fd75e40"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4d3fd73160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fd73160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fd734e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fd73670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd73800"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fd73990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd73b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd73cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fd73e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd72020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fd721b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fd72340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fd724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3fd6d7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3fd6d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd6db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3fd6dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3fd6de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd6c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd6c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3fd6c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4d3fd6f6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4d3fd6f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3fd6fa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3fd6fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd6fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3fd6e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3fd6e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd6e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3fd6e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3fd6e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3fd6e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4d3fd6ac50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4d3fd6ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4d3fd6eac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4d3fd6eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3fd6ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3fd6d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3fd6d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3fd6d340"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd6d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4d3fd6c610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fd6c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fd6c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fd6cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fd6ccb0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fd6ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fd6a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fd6a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fd6a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fd6a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fd6a660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fd6a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fd6a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f4d3fd64bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f4d3fd64bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f4d3fd653f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f4d3fd653f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd65770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f4d3fd65b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f4d3fd65b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f4d3fd64430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f4d3fd64430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fd647b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f4d3e9d6a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3e9d6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3e9d6e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3e9d5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3e9d51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3e9d5340"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e9d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4d3e9d8190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3e9d8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3e9d8510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3e9d86a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3e9d8830"/>
        <function-ref name="get" scoped="" ref="0x7f4d3e9d89c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3e9d8b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3e9d8ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3e9d8e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3e9d7030"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3e9d71c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3e9d7350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3e9d74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4d3e9dc020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4d3e9dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e9da870"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e9db840"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3e9da220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e9dbd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3e9dad30"/>
        <function-ref name="start" scoped="" ref="0x7f4d3e9dce30"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e9db380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3e9dd660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3e9dd660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3e9dd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4d3e9d7770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3e9d7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3e9d7af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3e9d7c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3e9d7e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3e9d6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3e9d61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3e9d6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3e9d64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3e9d6660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3e9d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4d3fcdb8c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3fcdb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3fcdf700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fcda0d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fcdfbc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fcda590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f4d3fcd98e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4d3fcd98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3fcd6780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fcd5150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fcd6c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fcd5610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4d3fcc4c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3fcc4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fcc3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3fcc31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3fcc3340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fcc34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3fcc3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fcc37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3fcc3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fcc3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fcc3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3fcc3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3fcc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4d3fcd2b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3fcd2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3fcd19b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fcc4360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fcd1e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fcc4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f4d3fca00f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f4d3fca00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3fc9f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fc9f9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fc9f4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fc9fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4d3fcbecf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3fcbecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3fca3b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fca2550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fca2090"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fca2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4d3e9f5890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4d3e9f5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e9f10d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e9f30d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3e9f3a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e9f3590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3e9f1590"/>
        <function-ref name="start" scoped="" ref="0x7f4d3e9f46e0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e9f4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f4d3e9ee0a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f4d3e9ee0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e9ecb30"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e9ed9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3e9ec4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e9ec020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3e9ea020"/>
        <function-ref name="start" scoped="" ref="0x7f4d3e9ed020"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e9ed530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4d3e9f1c00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3e9f1c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3e9f0a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3e9ef4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3e9ef020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3e9ef9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f4d3fc2c9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f4d3fc2c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3fc2cd40"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3fc2b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f4d3fc30850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4d3fc30850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fc2c090"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fc2d090"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3fc2da10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3fc2d550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3fc2c550"/>
        <function-ref name="start" scoped="" ref="0x7f4d3fc2f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fc2fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4d3fc352f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fc352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fc31870"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fc34e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3fc32c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3fc32780"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3fc301e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3fc31cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3fc32300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3fc34020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3fc31260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3fc344f0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fc349c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f4d3fbad020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f4d3fbad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fba9630"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fbaca60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3fbab920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3fbab4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3fba8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3fba9ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3fbab020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3fbadc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3fba9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3fbac110"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fbac5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f4d3fba8450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f4d3fba8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f4d3fba87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4d3fbb48e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fbb48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fbaf020"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fbb24c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3fbb0300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3fbb2e00"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3fbaf960"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3fbaf4c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3fbb2960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3fbb3560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3fbb0930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3fbb3a50"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fbb2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f4d3e7f8100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f4d3e7f8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3e7f8480"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3e7f8610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f4d3e7ff3d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f4d3e7ff3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e7fb870"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e7fee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3e7fcc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3e7fc780"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3e7fa1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3e7fbcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e7fc300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3e7fe020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3e7fb260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3e7fe4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e7fe9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f4d3e7f9a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f4d3e7f9a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f4d3e7f9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f4d3e7fa5d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f4d3e7fa5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f4d3e7f9660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f4d3e7f97f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f4d3e7fac70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f4d3e7fae00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f4d3e7f9020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f4d3e7f91b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f4d3e7f9340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f4d3e7f94d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f4d3e7fa950"/>
        <function-ref name="node_id" scoped="" ref="0x7f4d3e7faae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4d3e806db0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3e806db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e800470"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e8049b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3e8027c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3e802320"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3e800db0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3e800910"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e804e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3e805a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3e802df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3e804020"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e804510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4d3fba5020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4d3fba5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3fba5c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4d3fb9b300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3fb9b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3fb9a150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3fb9aad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3fb9a610"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3fb98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4d3fb8c260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3fb8c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fb896e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fb8bca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3fb8aa70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3fb8a5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3fb88020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3fb89b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3fb8a170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3fb8ce50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3fb890d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3fb8b350"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fb8b820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4d3fb79cc0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb79cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4d3fb780a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4d3fb78230"/>
        <function-ref name="start" scoped="" ref="0x7f4d3fb783c0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fb78550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4d3fb6b2c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3fb6b2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4d3fb6b640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4d3fb6b7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4d3fb6b960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4d3fb6baf0"/>
        <function-ref name="setCca" scoped="" ref="0x7f4d3fb6bc80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4d3fb6be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4d3fb5f1d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f4d3fb5f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4d3fb5f650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4d3fb748f0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4d3fb748f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fb74c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3fb74e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3fb73020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3fb731b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3fb73340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4d3fb78d20" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4d3fb78d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3fb770e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3fb77270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3fb77400"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3fb77590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3fb77720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4d3fb76c00" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4d3fb76c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3fb75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4d3fb73610" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3fb73610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4d3fb73990"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4d3fb73b20"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4d3fb73cb0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4d3fb73e40"/>
        <function-ref name="getPower" scoped="" ref="0x7f4d3fb72020"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4d3fb721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4d3fb5a130" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3fb5a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4d3fb5a4b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4d3fb5a640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4d3fb5a7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4d3fb5a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3fb76020" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3fb76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3fb763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4d3fb71080" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3fb71080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4d3fb71400"/>
        <function-ref name="noAck" scoped="" ref="0x7f4d3fb71590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4d3fb71720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4d3fb51430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4d3fb51430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4d3fb517b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4d3fb51940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4d3fb51ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4d3fb51c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4d3fb51df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4d3fb752d0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4d3fb752d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4d3fb75650"/>
        <function-ref name="source" scoped="" ref="0x7f4d3fb757e0"/>
        <function-ref name="address" scoped="" ref="0x7f4d3fb75970"/>
        <function-ref name="destination" scoped="" ref="0x7f4d3fb75b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f4d3fb75c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4d3fb75e20"/>
        <function-ref name="type" scoped="" ref="0x7f4d3fb74020"/>
        <function-ref name="setType" scoped="" ref="0x7f4d3fb741b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4d3fb74340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4d3fb744d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4d3fb74660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4d3fb67170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4d3fb67170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4d3fb674f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4d3fb4c020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4d3fb4c3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4d3fb4c530"/>
        <function-ref name="start" scoped="" ref="0x7f4d3fb4c6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fb4c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4d3fb399d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4d3fb399d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4d3fb39d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4d3fb38b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4d3fb38b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4d3fb37020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4d3fb371b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4d3fb37340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4d3fb374d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4d3fb37660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4d3fb3a020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3fb3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4d3fb3a3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4d3fb3a530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4d3fb3a6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4d3fb3a850"/>
        <function-ref name="getPower" scoped="" ref="0x7f4d3fb3a9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4d3fb3ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4d3fb44a70" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4d3fb44a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3fb44df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3fb3d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3fb3d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3fb3d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3fb3d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4d3fb38080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3fb38080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4d3fb38400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4d3fb38590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4d3fb38720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4d3fb388b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4d3fb45690" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f4d3fb45690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3fb45a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4d3fb39020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3fb39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4d3fb393a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4d3fb39530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4d3fb396c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3fb4b530" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3fb4b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3fb4b8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3fb4ba40"/>
        <function-ref name="request" scoped="" ref="0x7f4d3fb4bbd0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3fb4bd60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3fb4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4d3fb3c940" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f4d3fb3c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3fb3ccc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3fb3ce50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3fb45020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3fb451b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3fb45340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4d3fb45d50" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4d3fb45d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3fb44100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3fb44290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3fb44420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3fb445b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3fb44740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4d3fb3d840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4d3fb3d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3fb3dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4d3fb34390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb34390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4d3fb34710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4d3fb348a0"/>
        <function-ref name="start" scoped="" ref="0x7f4d3fb34a30"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fb34bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4d3fb32330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3fb32330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4d3fb326b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4d3fb32840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4d3fb329d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4d3fb32b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f4d3fb32cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4d3fb32e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4d3fb34e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3fb34e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3fb33220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3fb333b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3fb33540"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3fb336d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3fb33860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3fb33b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3fb33b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3fb32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4d3fb31e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4d3fb31e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4d3fb2d220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4d3fb2d3b0"/>
        <function-ref name="start" scoped="" ref="0x7f4d3fb2d540"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fb2d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4d3fb2c7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3fb2c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4d3fb2cb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4d3fb2ccf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4d3fb2ce80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4d3fb2b030"/>
        <function-ref name="setCca" scoped="" ref="0x7f4d3fb2b1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4d3fb2b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f4d3fb21060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f4d3fb21060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4d3fb213e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4d3fb21570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4d3fb21700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4d3fb21890"/>
        <function-ref name="setCca" scoped="" ref="0x7f4d3fb21a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4d3fb21bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4d3fb16330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3fb16330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4d3fb166b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4d3fb16840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4d3fb169d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4d3fb16b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f4d3fb16cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4d3fb16e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f4d3fb182a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4d3fb182a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3fb18620"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3fb187b0"/>
        <function-ref name="modify" scoped="" ref="0x7f4d3fb18940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3fb18ad0"/>
        <function-ref name="resend" scoped="" ref="0x7f4d3fb18c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4d3fb2d990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3fb2d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3fb2dd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3fb2c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3fb2c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3fb2c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3fb2c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4d3fb15420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4d3fb15420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4d3fb157a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4d3fb15930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4d3fb1f760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f4d3fb1f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4d3fb1fae0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fb1fc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4d3fb0e920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3fb0e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3fb0eca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4d3fb0ee30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4d3fb12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f4d3fb23b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4d3fb23b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4d3fb29020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4d3fb291b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4d3fb29340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4d3fb294d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4d3fb29660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4d3fb297f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4d3fb29980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4d3fb29b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4d3fb15bf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d3fb15bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d3fb17020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d3fb171b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d3fb17340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d3fb174d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d3fb17660"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fb177f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d3fb17980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d3fb16020"/>
        <function-ref name="set" scoped="" ref="0x7f4d3fb17b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d3fb17ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d3fb17e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4d3fb2b640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3fb2b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3fb2b9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3fb2bb50"/>
        <function-ref name="request" scoped="" ref="0x7f4d3fb2bce0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3fb2be70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3fb2a030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f4d3fb11110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f4d3fb11110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4d3fb11590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4d3fb11720"/>
        <function-ref name="isState" scoped="" ref="0x7f4d3fb118b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4d3fb11a40"/>
        <function-ref name="requestState" scoped="" ref="0x7f4d3fb11bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4d3fb11d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f4d3fb04b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f4d3fb04b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3fb02020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3fb021b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f4d3fb05ba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f4d3fb05ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3fb04020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3fb041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f4d3fb06c20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f4d3fb06c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3fb05020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3fb051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f4d3faacdc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4d3faacdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4d3fab8180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4d3fab8310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4d3fab84a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4d3fab8630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4d3fab87c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4d3fab8950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4d3fab8ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4d3fab8c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4d3fab8e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4d3fab7020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4d3fab71b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4d3fab7340"/>
        <function-ref name="sync" scoped="" ref="0x7f4d3fab74d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4d3fab7760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4d3fab78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f4d3faa90c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f4d3faa90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3faa9cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3faa8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f4d3fab7bf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4d3fab7bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4d3faab020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4d3faab1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4d3faab340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4d3faab4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4d3faab660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4d3faab7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4d3faab980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4d3faabb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3fabc950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3fabc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3fabccd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3fabce60"/>
        <function-ref name="request" scoped="" ref="0x7f4d3fab9020"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3fab91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3fab9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f4d3faa2970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4d3faa2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4d3faa2cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4d3faa2e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4d3faa1030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4d3faa11c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4d3faa1350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4d3faa14e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4d3faa1670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4d3faa1800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4d3faa1990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4d3faa1b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4d3faa1cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4d3faa1e40"/>
        <function-ref name="sync" scoped="" ref="0x7f4d3faa0020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4d3faa02b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4d3faa0440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f4d3fa801e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3fa801e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa80560"/>
        <function-ref name="write" scoped="" ref="0x7f4d3fa806f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f4d3fa9b020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4d3fa9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4d3fa9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f4d3fa9ba10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f4d3fa9ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3fa972a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3fa992a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3fa99c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3fa99760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3fa97760"/>
        <function-ref name="start" scoped="" ref="0x7f4d3fa9a890"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3fa9ada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f4d3fa81020" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3fa81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa813a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3fa81530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f4d3fa96e70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f4d3fa96e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3fa95220"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3fa953b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3fa95540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3fa956d0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fa95860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3fa959f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3fa95b80"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3fa95d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f4d3fa9fb40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f4d3fa9fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa9e750"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3fa9ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f4d3fa6eca0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f4d3fa6eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3fa6d0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3fa6d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f4d3fa80a80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4d3fa80a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa80e00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3fa7f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f4d3fa7f3c0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3fa7f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa7f740"/>
        <function-ref name="write" scoped="" ref="0x7f4d3fa7f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f4d3fa82cd0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3fa82cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa890a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3fa89230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f4d3fa8a390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4d3fa8a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4d3fa8a710"/>
        <function-ref name="changed" scoped="" ref="0x7f4d3fa8a8a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4d3fa8aa30"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4d3fa8abc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4d3fa97c50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4d3fa97c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3fa96020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3fa961b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3fa96340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3fa964d0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fa96660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3fa967f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3fa96980"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3fa96b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f4d3fa7d450" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3fa7d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3fa7d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f4d3fa940f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f4d3fa940f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3fa94470"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3fa94600"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3fa94790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3fa94920"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fa94ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3fa94c40"/>
        <function-ref name="set" scoped="" ref="0x7f4d3fa94dd0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3fa93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3faa3510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3faa3510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3faa3890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f4d3fa818f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3fa818f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa81c70"/>
        <function-ref name="write" scoped="" ref="0x7f4d3fa81e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f4d3fa7dd70" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3fa7dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3fa7c180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4d3fa7c520" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4d3fa7c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3fa7c8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3fa7ca30"/>
        <function-ref name="request" scoped="" ref="0x7f4d3fa7cbc0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3fa7cd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3fa7a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f4d3fa79180" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f4d3fa79180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3fa79500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3fa79690"/>
        <function-ref name="request" scoped="" ref="0x7f4d3fa79820"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3fa799b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3fa79b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f4d3faa0740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4d3faa0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4d3faa0ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4d3faa0c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4d3faa0de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4d3fa9f020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4d3fa9f1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4d3fa9f340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4d3fa9f4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4d3fa9f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f4d3fa895d0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3fa895d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa89950"/>
        <function-ref name="write" scoped="" ref="0x7f4d3fa89ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f4d3fa82420" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3fa82420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa827a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3fa82930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f4d3fa7b570" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4d3fa7b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3fa7b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4d3fa79e00" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d3fa79e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d3fa781c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d3fa78350"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d3fa784e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d3fa78670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d3fa78800"/>
        <function-ref name="get" scoped="" ref="0x7f4d3fa78990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d3fa78b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d3fa771b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3fa78cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d3fa78e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d3fa77020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f4d3fa70db0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f4d3fa70db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3fa6e180"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3fa6e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3faa3b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3faa3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3faa2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3faa21b0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3faa2340"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3faa24d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3faa2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f4d3fa85e20" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4d3fa85e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa8d1c0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3fa8d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f4d3fa854a0" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3fa854a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3fa85920"/>
        <function-ref name="write" scoped="" ref="0x7f4d3fa85ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f4d3fa8fc00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f4d3fa8fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3fa92020"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3fa921b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4d3fa92340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4d3fa924d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f4d3fa7a3d0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f4d3fa7a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3fa7a750"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3fa7a8e0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3fa7aa70"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3fa7ac00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3fa7ad90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f4d3fa7bc80" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3fa7bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3fa7d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3f9f87e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3f9f87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3f9f8b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f4d3f9f4220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4d3f9f4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3f9f2b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f9f3a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3f9f24e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3f9f2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3f9f1020"/>
        <function-ref name="start" scoped="" ref="0x7f4d3f9f3090"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3f9f35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3f9ee260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3f9ee260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3f9ee5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f4d3f9eeaf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4d3f9eeaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3f9b4390"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f9b5360"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3f9b5ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3f9b5820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3f9b4850"/>
        <function-ref name="start" scoped="" ref="0x7f4d3f9b6970"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3f9b6e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4d3e7a1020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4d3e7a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e79f870"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e7a0840"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3e79f220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e7a0d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3e79fd30"/>
        <function-ref name="start" scoped="" ref="0x7f4d3e7a1e30"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e7a0380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3e7a2720" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3e7a2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3e7a2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4d3e79a020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4d3e79a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e797870"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e799840"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3e797220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e799d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3e797d30"/>
        <function-ref name="start" scoped="" ref="0x7f4d3e79ae30"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e799380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3e79b760" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3e79b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3e79bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4d3e7818f0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3e7818f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3e781c70"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3e781e00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3e780020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3e7801b0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e780340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4d3e785e70" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3e785e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3e784220"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3e7843b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3e784540"/>
        <function-ref name="get" scoped="" ref="0x7f4d3e7846d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3e784860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3e7849f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3e784b80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3e784d10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3e782020"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3e7821b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3e782340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4d3e7825d0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3e7825d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3e782950"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3e782ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3e782c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3e782e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3e781020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3e7811b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3e781340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3e7814d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3e781660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f4d3e777760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4d3e777760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3e777ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4d3e777c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4d3e777e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4d3e776020"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e7761b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4d3e77bdd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3e77bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3e779180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3e779310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3e7794a0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3e779630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3e7797c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3e779950"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3e779ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3e779c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3e779e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3e778020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3e7781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4d3e77ebd0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4d3e77ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e77b4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e77c4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3e77ce60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e77c9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3e77b9a0"/>
        <function-ref name="start" scoped="" ref="0x7f4d3e77da80"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e77c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3e77e340" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3e77e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3e77e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4d3e778440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3e778440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3e7787c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3e778950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3e778ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3e778c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3e778e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3e777020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3e7771b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3e777340"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3e7774d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4d3f9d8080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3f9d8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f9d7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3f9d79a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3f9d74e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3f9d7e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f4d3f9d00f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f4d3f9d00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f9ce020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3f9ce9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3f9ce4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3f9cee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4d3f9d3cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3f9d3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f9d2b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3f9d1550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3f9d1090"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3f9d1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4d3e7941d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4d3e7941d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e792b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e7939f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3e7924e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e792020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3e790020"/>
        <function-ref name="start" scoped="" ref="0x7f4d3e793020"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e793530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f4d3e78eb90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f4d3e78eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3e78b4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3e78c4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3e78ce60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3e78c9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3e78b9a0"/>
        <function-ref name="start" scoped="" ref="0x7f4d3e78d9d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3e78c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4d3e790690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3e790690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3e78f5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3e78e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3e78fa70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3e78e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f4d3f9ae090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f4d3f9ae090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9ae410"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9ae5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9ae730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9ae8c0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9aea50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f9aebe0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9aed70"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f4d3f9ad390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f4d3f9ad390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9ad710"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9ad8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9ada30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9adbc0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9add50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f9ab020"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9ab1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9ab340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f4d3f9ab6a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f4d3f9ab6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9aba20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9abbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9abd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9aa020"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9aa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f9aa340"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9aa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f4d3f9b0e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4d3f9b0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9af210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9af3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9af530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9af6c0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9af850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f9af9e0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9afb70"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9afd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f4d3f9a9ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f4d3f9a9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9a80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9a8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9a83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9a8550"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9a86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f9a8870"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9a8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9a8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f4d3f9f6b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f4d3f9f6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9b0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9b01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9b0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9b04d0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9b0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f9b07f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9b0980"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9b0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f4d3f9aa9b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f4d3f9aa9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9aad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9a9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9a91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9a9340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9a94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f9a9660"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9a97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9a9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d3f9a52f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f9a52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9a5670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9a5800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f9a5990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f9a3660"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9a5cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9a5e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f9a4020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f9a41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f9a4340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9a44d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f9a4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f9a47f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f9a4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f9a4c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f9a4da0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9a3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f9a31b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f9a3340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9a5b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f9a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d3f9a6020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f9a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9a63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9a6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9a66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9a6850"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9a69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f9a6b70"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9a6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d3f9a07a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f9a07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9a0b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9a0cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f9a0e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f99ea80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f99f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f99f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f99f4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f99f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f99f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f99f980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f99fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f99fca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f99fe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f99e120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f99e2b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f99e440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f99e5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f99e760"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f99f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f99e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d3f9a1630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f9a1630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9a19b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9a1b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9a1cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9a1e60"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9a0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f9a01b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9a0340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d3f99bc60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f99bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f99a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f99a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f99a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f998020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f99a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f99a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f99a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f99ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f99aca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f99ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f999020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f9991b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f999340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f9995d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f999760"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9998f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f999a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f999c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f99a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f999da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d3f99cb00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f99cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f99ce80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f99b030"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f99b1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f99b350"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f99b4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f99b670"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f99b800"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f99b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d3f9952f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f9952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f995670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f995800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f995990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f992660"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f995cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f995e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f993020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f9931b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f993340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9934d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f993660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f9937f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f993980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f993c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f993da0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f992020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f9921b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f992340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f995b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f9924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d3f996020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f996020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9963a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f996530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9966c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f996850"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9969e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f996b70"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f996d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f995020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d3f98f7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f98f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f98fb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f98fcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f98fe40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f98da80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f98e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f98e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f98e4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f98e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f98e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f98e980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f98eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f98eca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f98ee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f98d120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f98d2b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f98d440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f98d5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f98d760"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f98e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f98d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d3f990630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f990630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9909b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f990b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f990cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f990e60"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f98f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f98f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f98f340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f98f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d3f98ac60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f98ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f989020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f9891b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f989340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f987020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f989660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9897f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f989980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f989b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f989ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f989e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f988020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f9881b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f988340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f9885d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f988760"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9888f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f988a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f988c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9894d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f988da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d3f98baf0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f98baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f98be70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f98a030"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f98a1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f98a350"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f98a4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f98a670"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f98a800"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f98a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d3f9842f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f9842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f984670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f984800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f984990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f982660"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f984cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f984e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f983020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f9831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f983340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9834d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f983660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f9837f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f983980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f983c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f983da0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f982020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f9821b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f982340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f984b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f9824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d3f985020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f985020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f9853a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f985530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f9856c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f985850"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f9859e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f985b70"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f985d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f984020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f4d3f967700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f4d3f967700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4d3f967a80"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f967c10"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3f967da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4d3f96b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f4d3f96b400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f4d3f96b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3f96b780"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f96b910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4d3f96baa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4d3f96bc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f4d3f96a060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4d3f96a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3f96a3e0"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f96a570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4d3f96a700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4d3f96a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f4d3f94ca80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f4d3f94ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4d3f94ce00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4d3f94a020"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3f94a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3f94a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3f94a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4d3f94a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4d3f964c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4d3f964c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4d3f94d020"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f94d1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3f94d340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4d3f94d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4d3f94d760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4d3f94d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4d3f94dae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4d3f94dc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3f94de00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4d3f94c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4d3f94c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3f94c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4d3f94c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4d3f94c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4d3f94c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f4d3f94a930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f94a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f94acb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f94ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f949020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f948c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f949340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f9494d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f949660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f9497f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f949980"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f949b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f949ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f949e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f948020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f9482b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f948440"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f9485d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f948760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f9488f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f9491b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f948a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4d3f9383f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4d3f9383f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f938770"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f938900"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f938a90"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f938c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f938db0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f937020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9371b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f937340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4d3f92c3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4d3f92c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f92c770"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f92c900"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f92ca90"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f92cc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f92cdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f92b020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f92b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f92b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4d3f935d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4d3f935d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f934100"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f934290"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f934420"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f9345b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f934740"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f9348d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f934a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f934bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4d3f9323f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4d3f9323f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f932770"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f932900"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f932a90"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f932c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f932db0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f931020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9311b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f931340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4d3f940bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4d3f940bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f93a020"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f93a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f93a340"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f93a4d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f93a660"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f93a7f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f93a980"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f93ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4d3f92fd50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4d3f92fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f92e210"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f92e3a0"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f92e530"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f92e6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f92e850"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f92e9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f92eb70"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f92ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4d3f937710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4d3f937710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f937a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f937c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f937db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f936020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9361b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f936340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9364d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f936660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4d3f92b710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4d3f92b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f92ba90"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f92bc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f92bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f92a020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f92a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f92a340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f92a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f92a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4d3f93b620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4d3f93b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f93b9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f93bb30"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f93bcc0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f93be50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f941020"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f9411b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f941340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f9414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4d3f931710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4d3f931710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f931a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f931c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f931db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f930020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9301b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f930340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9304d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f930660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4d3f939020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4d3f939020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f9393a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f939530"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f9396c0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f939850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9399e0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f939b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f939d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f938020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4d3f92d100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4d3f92d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f92d480"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f92d610"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f92d7a0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f92d930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f92dac0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f92dc50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f92dde0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f92c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4d3f936a30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4d3f936a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f936db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f935020"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f9351b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f935340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9354d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f935660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9357f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f935980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4d3f933020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4d3f933020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f9333a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f933530"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f9336c0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f933850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9339e0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f933b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f933d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f932020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4d3f9418a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4d3f9418a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f941c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f941db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f940020"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f9401b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f940340"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f9404d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f940660"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f9407f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4d3f930a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4d3f930a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f930db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f92f020"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f92f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f92f340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f92f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f92f660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f92f7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f92f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4d3f9213f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4d3f9213f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f921770"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f921900"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f921a90"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f921c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f921db0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f920020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9201b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f920340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4d3f9153f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4d3f9153f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f915770"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f915900"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f915a90"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f915c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f915db0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f914020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9141b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f914340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4d3f91ed50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4d3f91ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f91d100"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f91d290"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f91d420"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f91d5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f91d740"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f91d8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f91da60"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f91dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4d3f91b3f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4d3f91b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f91b770"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f91b900"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f91ba90"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f91bc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f91bdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f91a020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f91a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f91a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4d3f924d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4d3f924d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f923100"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f923290"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f923420"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f9235b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f923740"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f9238d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f923a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f923bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4d3f918d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4d3f918d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f917210"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f9173a0"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f917530"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f9176c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f917850"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f9179e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f917b70"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f917d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4d3f920710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4d3f920710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f920a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f920c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f920db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f91f020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f91f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f91f340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f91f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f91f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4d3f914710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4d3f914710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f914a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f914c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f914db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f913020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9131b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f913340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9134d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f913660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4d3f9297a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4d3f9297a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f929b20"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f929cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f929e40"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f925020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9251b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f925340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9254d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f925660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4d3f91a710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4d3f91a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f91aa90"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f91ac20"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f91adb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f919020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9191b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f919340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9194d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f919660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4d3f922020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4d3f922020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f9223a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f922530"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f9226c0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f922850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9229e0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f922b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f922d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f921020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4d3f916100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4d3f916100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f916480"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f916610"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f9167a0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f916930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f916ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f916c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f916de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f915020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4d3f91fa30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4d3f91fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f91fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f91e020"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f91e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f91e340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f91e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f91e660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f91e7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f91e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4d3f91c020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4d3f91c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f91c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f91c530"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f91c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f91c850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f91c9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f91cb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f91cd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f91b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4d3f925a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4d3f925a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f925db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f924020"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f9241b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f924340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9244d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f924660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9247f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f924980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4d3f919a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4d3f919a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f919db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f918020"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f9181b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f918340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f9184d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f918660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f9187f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f918980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4d3f8092f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4d3f8092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f809670"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f809800"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f809990"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f809b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f809cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f809e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f7fc020"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f7fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4d3f80a680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4d3f80a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3f80aa00"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f80ab90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4d3f80ad20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4d3f809020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4d3f7fa7a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4d3f7fa7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f7fab20"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f7facb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f7fae40"/>
        <function-ref name="edge" scoped="" ref="0x7f4d3f7f9020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4d3f7f91b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4d3f7f9340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4d3f7f94d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4d3f7f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4d3f7fbb70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4d3f7fbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3f7fa020"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f7fa1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4d3f7fa340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4d3f7fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4d3f397e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f397e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f396410"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3965a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4d3f3a1160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4d3f3a1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f3a14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4d3f39be50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f39be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f399210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4d3f395880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f395880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f395c00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f395d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4d3f38d0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4d3f38d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f38d420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f38d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4d3f3940a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4d3f3940a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f394420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3945b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4d3f381500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f381500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f381880"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f381a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4d3f383500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4d3f383500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f383880"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f383a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4d3f39f490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f39f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4d3f389880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4d3f389880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f389c00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f389d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4d3f384500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f384500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f384880"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f384a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4d3f399e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4d3f399e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f398210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4d3f398e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f398e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f397210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4d3f38f880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4d3f38f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f38fc00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f38fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4d3f3900a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4d3f3900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f390420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3905b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4d3f394880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f394880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f394c00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f394d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4d3f3a3a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f3a3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4d3f3a3e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4d3f3a2020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4d3f3a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4d3f39ee00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f39ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4d3f39d490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4d3f39d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4d3f388c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4d3f388c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3870a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f387230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4d3f39dbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4d3f39dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4d3f384ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f384ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3830a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f383230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4d3f39e160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f39e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4d3f3890a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4d3f3890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f389420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3895b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4d3f398670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4d3f398670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3989f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f398b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4d3f399670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f399670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3999f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f399b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4d3f3a2ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f3a2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f3a2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4d3f38a0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4d3f38a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f38a420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f38a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4d3f38d880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4d3f38d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f38dc00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f38dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4d3f38a880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4d3f38a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f38ac00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f38ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4d3f382ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f382ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3810a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f381230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4d3f383ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4d3f383ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3820a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f382230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4d3f390880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4d3f390880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f390c00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f390d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4d3f38b0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4d3f38b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f38b420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f38b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4d3f386ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4d3f386ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3840a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f384230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4d3f392880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4d3f392880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f392c00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f392d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4d3f381ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f381ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f3800a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f380230"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3803c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f380550"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f3806e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4d3f3a2480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4d3f3a2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f3a2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4d3f39b670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4d3f39b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f39b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f39bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4d3f397670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4d3f397670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3979f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f397b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4d3f38e0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4d3f38e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f38e420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f38e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4d3f3920a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f3920a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f392420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3925b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4d3f38e880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4d3f38e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f38ec00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f38ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4d3f396870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f396870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f396bf0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f396d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4d3f3a17b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4d3f3a17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f3a1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4d3f3950a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f3950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f395420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3955b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f3a4e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f3a4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f3a31c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f3a3350"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f3a34e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f3a3670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f3a3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4d3f39c2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f39c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4d3f39b020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4d3f39b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4d3f386500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4d3f386500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f386880"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f386a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4d3f387ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f387ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3860a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f386230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4d3f39e7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f39e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4d3f387500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4d3f387500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f387880"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f387a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4d3f382500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4d3f382500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f382880"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f382a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4d3f38f0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4d3f38f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f38f420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f38f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4d3f38b880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4d3f38b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f38bc00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f38bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4d3f3a1e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4d3f3a1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4d3f39fae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f39fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4d3f3910a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4d3f3910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f391420"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3915b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4d3f39c940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4d3f39c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f39ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4d3f391880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4d3f391880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f391c00"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f391d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4d3f3880a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4d3f3880a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f388820"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3889b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4d3f3809b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f3809b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f380d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f37f020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f37f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f37f340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f37f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f4d3f7b52c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7b52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f7b5640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f7b57d0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f7b5960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f7b5af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f7b5c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4d3f7b6350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f7b6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4d3f7b66d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4d3f7b6860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4d3f7b69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f4d3f7b4540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f4d3f7b4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f7b48c0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f7b4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f4d3f7b3370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f4d3f7b3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f7b36f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f7b3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f7b84d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f7b84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f7b8850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f7b89e0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f7b8b70"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f7b8d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f7b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f4d3f7b11d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7b11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f7b1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f4d3f79c2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3f79c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3f79c660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3f79c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f4d3f7ac890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f4d3f7ac890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f7acc10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f7acda0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f7ab020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f7ab1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f7ab340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4d3f7ae660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f7ae660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4d3f7ae9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4d3f7aeb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4d3f7aed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f4d3f7a4c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4d3f7a4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4d3f7a6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f4d3f79cb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f4d3f79cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4d3f7a3020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4d3f7a31b0"/>
        <function-ref name="isState" scoped="" ref="0x7f4d3f7a3340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4d3f7a34d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4d3f7a3660"/>
        <function-ref name="forceState" scoped="" ref="0x7f4d3f7a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4d3f7a7060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4d3f7a7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f7a73e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f7a7570"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f7a7700"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f7a7890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f7a7a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f4d3f7abba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f4d3f7abba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f7aa020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f7aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f4d3f7aaa30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f4d3f7aaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f7aadb0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f7a8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4d3f7a3a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d3f7a3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d3f7a3df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d3f79d020"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d3f79d1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d3f79d340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d3f79d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f79d660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d3f79d7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d3f79de30"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f79d980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d3f79db10"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d3f79dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f7ad510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f7ad510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f7ad890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f7ada20"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f7adbb0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f7add40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f7ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f4d3f798bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f4d3f798bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3f797020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3f7971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f4d3f7a88b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f4d3f7a88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f7a8c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4d3f73d770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4d3f73d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4d3f73daf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4d3f73dc80"/>
        <function-ref name="isState" scoped="" ref="0x7f4d3f73de10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4d3f739020"/>
        <function-ref name="requestState" scoped="" ref="0x7f4d3f7391b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4d3f739340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4d3f7381d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4d3f7381d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4d3f738550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4d3f7386e0"/>
        <function-ref name="isState" scoped="" ref="0x7f4d3f738870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4d3f738a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f4d3f738b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f4d3f738d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3f734020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3f734020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3f7343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4d3f734b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4d3f734b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4d3f733020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4d3f7331b0"/>
        <function-ref name="isState" scoped="" ref="0x7f4d3f733340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4d3f7334d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4d3f733660"/>
        <function-ref name="forceState" scoped="" ref="0x7f4d3f7337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4d3f3cc020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3f3cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3f3cc3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3f3cc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4d3f71a8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4d3f71a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4d3f71ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f71bc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f71bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f71a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f71a1b0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f71a340"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f71a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f71a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4d3e6a25d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3e6a25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4d3e6a2950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4d3e6a2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4d3e69f020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3e69f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3e69f3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3e69f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4d3e69f7c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4d3e69f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4d3e69fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4d3e6a2d70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4d3e6a2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4d3e6a0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3e6a3940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3e6a3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3e6a3cc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3e6a3e50"/>
        <function-ref name="request" scoped="" ref="0x7f4d3e6a2020"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3e6a21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3e6a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4d3e6a0410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4d3e6a0410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4d3e6a0790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4d3e6a0920"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4d3e6a0ab0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3e6a0c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4d3f6b18e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f6b18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4d3f6b1c60"/>
        <function-ref name="configure" scoped="" ref="0x7f4d3f6b1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4d3f6b3850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3f6b3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3f6b3bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3f6b3d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4d3f6aea40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4d3f6aea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4d3f6aedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4d3f6b4110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4d3f6b4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4d3f6b4490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4d3f6af690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4d3f6af690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f6afa10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f6afba0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f6afd30"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f6ae020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f6ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f6bad80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f6bad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f6b5180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f6b5310"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f6b54a0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f6b5630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f6b57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4d3f6b4790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4d3f6b4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4d3f6b4b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4d3f6b4ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4d3f6b4e30"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f6b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4d3f6aab40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4d3f6aab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4d3f6ac020"/>
        <function-ref name="txDone" scoped="" ref="0x7f4d3f6ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4d3f638250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f638250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4d3f6385f0"/>
        <function-ref name="configure" scoped="" ref="0x7f4d3f638780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4d3f637c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4d3f637c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3f636020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3f6361b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4d3f6353e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4d3f6353e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4d3f635780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4d3f638a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4d3f638a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4d3f638d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f4d3f635a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4d3f635a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4d3f635dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4d3f633020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4d3f6331b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4d3f633340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4d3f6334d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4d3f633660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4d3f6337f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4d3f633980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4d3f633b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4d3f633ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4d3f633e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4d3f632020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4d3f6321b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4d3f632440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4d3f6325d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4d3f632760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4d3f6328f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4d3f632a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4d3f632c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4d3f632da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4d3f631020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4d3f6311b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4d3f631340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4d3f6314d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3f631660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4d3f6319f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4d3f631b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4d3f631d10"/>
        <function-ref name="tx" scoped="" ref="0x7f4d3f630020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4d3f6301b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4d3f630340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4d3f6304d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4d3f630660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4d3f6307f0"/>
        <function-ref name="rx" scoped="" ref="0x7f4d3f630980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4d3f630b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4d3f630ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4d3f630e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4d3f62f020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4d3f62f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4d3f62fc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d3f62fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d3f62e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d3f62e1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d3f62e340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d3f62e4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d3f62e660"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f62e7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d3f62e980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d3f62d020"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f62eca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d3f62eb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d3f62ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4d3f6365b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4d3f6365b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f636950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f636ae0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f636c70"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f636e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f635020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f639470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f639470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f639810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f6399a0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f639b30"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f639cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f639e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4d3f637060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4d3f637060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4d3f6373e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4d3f637570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4d3f637700"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f637890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4d3f62f480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4d3f62f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4d3f62f800"/>
        <function-ref name="txDone" scoped="" ref="0x7f4d3f62f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f4d3f62d2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f4d3f62d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3f62d670"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3f62d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f4d3f61d2c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4d3f61d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3f61d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4d3f621d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4d3f621d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4d3f6200e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4d3f620270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4d3f625020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4d3f625020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4d3f6253a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4d3f625530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4d3f6256c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4d3f625850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4d3f6259e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4d3f625b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4d3f625d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4d3f624020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4d3f6241b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4d3f624340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4d3f6244d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4d3f624660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4d3f6247f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4d3f624a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4d3f624c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4d3f624da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4d3f623020"/>
        <function-ref name="isUart" scoped="" ref="0x7f4d3f6231b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4d3f623340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4d3f6234d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4d3f623660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4d3f6237f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4d3f623980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4d3f623b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3f623ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4d3f622220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4d3f6223b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4d3f622540"/>
        <function-ref name="tx" scoped="" ref="0x7f4d3f6226d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4d3f622860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4d3f6229f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4d3f622b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4d3f622d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4d3f621020"/>
        <function-ref name="rx" scoped="" ref="0x7f4d3f6211b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4d3f621340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4d3f6214d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4d3f621660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4d3f6217f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4d3f621980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4d3f5e3bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4d3f5e3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f5e2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f5e21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f5e2340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f5e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f5e2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f5e27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f5e2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f5e2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f5e2ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f5e2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f5e1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f5e11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f5e1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f5e15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f5e1760"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f5e18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f5e1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f5e24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f5e1c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f5e1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4d3f6172d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4d3f6172d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4d3f617650"/>
        <function-ref name="txDone" scoped="" ref="0x7f4d3f6177e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f4d3f5e03e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f4d3f5e03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f5e0760"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f5e08f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f5e0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f5de7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f5e0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f5df020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f5df1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f5df340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f5df4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f5df660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f5df7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f5df980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f5dfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f5dfda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f5de020"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f5de1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f5de340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f5e0c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f5de4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f5de660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f4d3f5debb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f4d3f5debb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f5dd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f5dd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f5dd340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f5db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f5dd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f5dd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f5dd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f5ddb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f5ddca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f5dde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f5dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f5dc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f5dc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f5dc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f5dc760"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f5dc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f5dca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f5dd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f5dcc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f5dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f4d3f61c700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4d3f61c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4d3f61ca80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4d3f61cc10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4d3f61cda0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4d3f61b020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4d3f61b1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4d3f61b340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4d3f61b4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4d3f61b660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4d3f61b7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4d3f61b980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4d3f61bb10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4d3f61bca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4d3f61be30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4d3f61a120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4d3f61a2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4d3f61a440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4d3f61a5d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4d3f61a760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4d3f61a8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4d3f61aa80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4d3f61ac10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4d3f61ada0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4d3f619020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4d3f6191b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3f619340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4d3f6196d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4d3f619860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4d3f6199f0"/>
        <function-ref name="tx" scoped="" ref="0x7f4d3f619b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4d3f619d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4d3f618020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4d3f6181b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4d3f618340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4d3f6184d0"/>
        <function-ref name="rx" scoped="" ref="0x7f4d3f618660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4d3f6187f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4d3f618980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4d3f618b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4d3f618ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4d3f618e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f4d3f5eed10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f4d3f5eed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4d3f6150e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4d3f615270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4d3f615400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4d3f615590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4d3f615720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4d3f6158b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4d3f615a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4d3f615bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3f615d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4d3f614020"/>
        <function-ref name="getData" scoped="" ref="0x7f4d3f6141b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4d3f614340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4d3f6144d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4d3f614760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4d3f6148f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4d3f614a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4d3f614c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4d3f614da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4d3f5ec020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4d3f5ec1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4d3f5ec340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4d3f5ec4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4d3f5ec660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4d3f5ec7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4d3f5ec980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4d3f5ecd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4d3f5eb020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4d3f5eb1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4d3f5eb340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4d3f5eb4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4d3f5eb660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4d3f5eb7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4d3f5eb980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4d3f5ebb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4d3f5ebca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4d3f5ebe30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4d3f5ea020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4d3f5ea1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4d3f5ea340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4d3f5ea4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4d3f5ea660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4d3f5ea7f0"/>
        <function-ref name="setData" scoped="" ref="0x7f4d3f5ea980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4d3f5eab10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4d3f5eaca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4d3f5eae30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4d3f5e9020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4d3f5e91b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4d3f5e9340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4d3f5e98d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4d3f5e9a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4d3f5e9bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4d3f5e9d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4d3f5e8020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4d3f5e81b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4d3f5e8340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4d3f5e84d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4d3f5e8660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4d3f5e87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f4d3f5e53e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f4d3f5e53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f5e5760"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f5e58f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f5e5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f5e37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f5e5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f5e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f5e41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f5e4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f5e44d0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f5e4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f5e47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f5e4980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f5e4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f5e4da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f5e3020"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f5e31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f5e3340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f5e5c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f5e34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f5e3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4d3f617c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4d3f617c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3f616020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4d3f5e8bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4d3f5e8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f5e7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f5e71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f5e7340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f5e5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f5e7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f5e77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f5e7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f5e7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f5e7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f5e7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f5e6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f5e61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f5e6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f5e65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f5e6760"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f5e68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f5e6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f5e74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f5e6c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f5e6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4d3e697020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3e697020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4d3e6973a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4d3e697530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f4d3e68f440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4d3e68f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3e68f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4d3e687760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3e687760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4d3e687ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f4d3e687c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f4d3e68fa50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4d3e68fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4d3e68fdd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4d3e68d020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4d3e68d1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4d3e68d340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4d3e68d4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4d3e68d660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4d3e68d7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4d3e68d980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3e68db10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4d3e68dca0"/>
        <function-ref name="getData" scoped="" ref="0x7f4d3e68de30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4d3e68c020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4d3e68c1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4d3e68c440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4d3e68c5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4d3e68c760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4d3e68c8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4d3e68ca80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4d3e68cc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4d3e68cda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4d3e68b020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4d3e68b1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4d3e68b340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4d3e68b4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4d3e68b660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4d3e68b9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4d3e68bb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4d3e68bd10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4d3e68a020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4d3e68a1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4d3e68a340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4d3e68a4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4d3e68a660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4d3e68a7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4d3e68a980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4d3e68ab10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4d3e68aca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4d3e68ae30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4d3e689020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4d3e6891b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4d3e689340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4d3e6894d0"/>
        <function-ref name="setData" scoped="" ref="0x7f4d3e689660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4d3e6897f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4d3e689980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4d3e689b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4d3e689ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4d3e689e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4d3e688020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4d3e6885b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4d3e688740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4d3e6888d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4d3e688a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4d3e688bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4d3e688d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4d3e687020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4d3e6871b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4d3e687340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4d3e6874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4d3e692c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4d3e692c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4d3e68f020"/>
        <function-ref name="txDone" scoped="" ref="0x7f4d3e68f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3e698340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3e698340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3e6986c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3e698850"/>
        <function-ref name="request" scoped="" ref="0x7f4d3e6989e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3e698b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3e698d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4d3e696020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4d3e696020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4d3e6963a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4d3e696530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4d3e6966c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4d3e696850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4d3e6969e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4d3e696b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4d3e696d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4d3e695020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4d3e6951b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4d3e695340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4d3e6954d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4d3e695660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4d3e6957f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4d3e695a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4d3e695c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4d3e695da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4d3e694020"/>
        <function-ref name="isUart" scoped="" ref="0x7f4d3e6941b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4d3e694340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4d3e6944d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4d3e694660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4d3e6947f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4d3e694980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4d3e694b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3e694ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4d3e693220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4d3e6933b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4d3e693540"/>
        <function-ref name="tx" scoped="" ref="0x7f4d3e6936d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4d3e693860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4d3e6939f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4d3e693b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4d3e693d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4d3e692020"/>
        <function-ref name="rx" scoped="" ref="0x7f4d3e6921b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4d3e692340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4d3e6924d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4d3e692660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4d3e6927f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4d3e692980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4d3e6977c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3e6977c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4d3e697b40"/>
        <function-ref name="userId" scoped="" ref="0x7f4d3e697cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4d3f5352c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3f5352c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4d3f535640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4d3f5357d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4d3f5348a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f5348a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4d3f534c20"/>
        <function-ref name="configure" scoped="" ref="0x7f4d3f534db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4d3f5384d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4d3f5384d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4d3f538850"/>
        <function-ref name="txDone" scoped="" ref="0x7f4d3f5389e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f536020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f536020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f5363a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f536530"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f5366c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f536850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f5369e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4d3f5373f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4d3f5373f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3f537770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4d3f535ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3f535ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4d3f535e50"/>
        <function-ref name="userId" scoped="" ref="0x7f4d3f534020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4d3f51fbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3f51fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4d3f51e020"/>
        <function-ref name="userId" scoped="" ref="0x7f4d3f51e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4d3f531d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4d3f531d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4d3f530180"/>
        <function-ref name="txDone" scoped="" ref="0x7f4d3f530310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f4d3f51f5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4d3f51f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3f51f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4d3f530710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4d3f530710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3f530ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f4d3f530d80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f4d3f530d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4d3f51f180"/>
        <function-ref name="txDone" scoped="" ref="0x7f4d3f51f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4d3f49fa60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3f49fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4d3f49fe00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4d3f49e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4d3f49d790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3f49d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4d3f49db30"/>
        <function-ref name="configure" scoped="" ref="0x7f4d3f49dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4d3f49e270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4d3f49e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f49e5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f4d3f49e780"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f49e910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f49eaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4d3f49ec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f4a0ca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f4a0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f49f0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f49f230"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f49f3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f49f550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f49f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f4d3f49c020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f4d3f49c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4d3f49c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4d3f49ee80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3f49ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4d3f49d220"/>
        <function-ref name="userId" scoped="" ref="0x7f4d3f49d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3e61c020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3e61c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3e61c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4d3e61c630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4d3e61c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4d3e61c9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4d3e61cb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4d3e61ccd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4d3e61ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4d3e6196c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4d3e6196c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4d3e619a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4d3e619bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4d3e6169d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4d3e6169d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4d3e616d70"/>
        <function-ref name="configure" scoped="" ref="0x7f4d3e615020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4d3e6152b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4d3e6152b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4d3e615630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4d3e6157c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4d3e615950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4d3e615ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4d3e619e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4d3e619e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3e6171e0"/>
        <function-ref name="requested" scoped="" ref="0x7f4d3e617370"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3e617500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3e617690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4d3e617820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4d3e615d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d3e615d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d3e6140e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d3e614270"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d3e614400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d3e614590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d3e614720"/>
        <function-ref name="get" scoped="" ref="0x7f4d3e6148b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d3e614a40"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d3e6131b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3e614d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d3e614bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d3e613020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3e61a850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3e61a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3e61abf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3e61ad80"/>
        <function-ref name="request" scoped="" ref="0x7f4d3e619020"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3e6191b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3e619340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f4d3e6162d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f4d3e6162d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4d3e616650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4d3e617a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4d3e617a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4d3e617df0"/>
        <function-ref name="userId" scoped="" ref="0x7f4d3e616020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f4d3e613480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f4d3e613480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3e613800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3e613990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f4d3f493020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4d3f493020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4d3f4933a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4d3f493530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4d3f4936c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4d3f493850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4d3f4939e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4d3f493b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4d3f493d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4d3f492020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3f4921b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4d3f492340"/>
        <function-ref name="getData" scoped="" ref="0x7f4d3f4924d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4d3f492660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4d3f4927f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4d3f492a80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4d3f492c10"/>
        <function-ref name="getIV" scoped="" ref="0x7f4d3f492da0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4d3f491020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4d3f4911b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4d3f491340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4d3f4914d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4d3f491660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4d3f4917f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4d3f491980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4d3f491b10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4d3f491ca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4d3f490220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4d3f4903b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4d3f490540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4d3f4906d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4d3f490860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4d3f4909f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4d3f490b80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4d3f490d10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4d3f48f020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4d3f48f1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4d3f48f340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4d3f48f4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4d3f48f660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4d3f48f7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4d3f48f980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4d3f48fb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4d3f48fca0"/>
        <function-ref name="setData" scoped="" ref="0x7f4d3f48fe30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4d3f48e020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4d3f48e1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4d3f48e340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4d3f48e4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4d3f48e660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4d3f48e7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4d3f48ed80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4d3f48d020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4d3f48d1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4d3f48d340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4d3f48d4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4d3f48d660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4d3f48d7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4d3f48d980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4d3f48db10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4d3f48dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f4d3f482bb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f4d3f482bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4d3f481020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4d3f4811b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4d3f481340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4d3f4814d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4d3f481660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4d3f4817f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4d3f481980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4d3f481b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4d3f481ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4d3f481e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4d3f480020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4d3f4801b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4d3f480340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4d3f4805d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4d3f480760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4d3f4808f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4d3f480a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f4d3f480c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4d3f480da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4d3f47f020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4d3f47f1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4d3f47f340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4d3f47f4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4d3f47f660"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3f47f7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4d3f47fb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4d3f47fd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4d3f47e020"/>
        <function-ref name="tx" scoped="" ref="0x7f4d3f47e1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4d3f47e340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4d3f47e4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4d3f47e660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4d3f47e7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4d3f47e980"/>
        <function-ref name="rx" scoped="" ref="0x7f4d3f47eb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4d3f47eca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4d3f47ee30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4d3f47d020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4d3f47d1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4d3f47d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4d3f47be40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4d3f47be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f47a1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f47a370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f47a500"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f4781b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f47a820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f47a9b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f47ab40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f47acd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f47ae60"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f479020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f4791b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f479340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f4794d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f479760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f4798f0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f479a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f479c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f47a690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f479da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f478020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f4d3f48bd40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f4d3f48bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4d3f4880e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4d3f488270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4d3f488400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4d3f488590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4d3f488720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4d3f4888b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4d3f488a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4d3f488bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3f488d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4d3f487020"/>
        <function-ref name="getData" scoped="" ref="0x7f4d3f4871b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4d3f487340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4d3f4874d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4d3f487760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4d3f4878f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4d3f487a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4d3f487c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4d3f487da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4d3f486020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4d3f4861b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4d3f486340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4d3f4864d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4d3f486660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4d3f4867f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4d3f486980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4d3f486d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4d3f485020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4d3f4851b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4d3f485340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4d3f4854d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4d3f485660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4d3f4857f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4d3f485980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4d3f485b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4d3f485ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4d3f485e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4d3f484020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4d3f4841b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4d3f484340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4d3f4844d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4d3f484660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4d3f4847f0"/>
        <function-ref name="setData" scoped="" ref="0x7f4d3f484980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4d3f484b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4d3f484ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4d3f484e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4d3f483020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4d3f4831b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4d3f483340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4d3f4838d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4d3f483a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4d3f483bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4d3f483d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4d3f482020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4d3f4821b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4d3f482340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4d3f4824d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4d3f482660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4d3f4827f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4d3f47d700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4d3f47d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f47da80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f47dc10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f47dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f47ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f47c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f47c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f47c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f47c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f47c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f47c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f47cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f47cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f47ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f47b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f47b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f47b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f47b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f47c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f47b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f47b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4d3f367c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f367c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f365210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4d3f371da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4d3f371da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f370180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4d3f36ab50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f36ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f369020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4d3f364670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f364670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3649f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f364b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4d3f35de50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4d3f35de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35c210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4d3f364e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4d3f364e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f363210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4d3f3502f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f3502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f350670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f350800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4d3f3532f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4d3f3532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f353670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f353800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4d3f36f120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f36f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f36f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4d3f358670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4d3f358670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3589f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f358b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4d3f3542f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f3542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f354670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f354800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4d3f369c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4d3f369c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f368020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4d3f368c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f368c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f367020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4d3f35e670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4d3f35e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4d3f361e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4d3f361e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35f210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4d3f363670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f363670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3639f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f363b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4d3f372760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f372760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4d3f372ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4d3f372c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4d3f372e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4d3f36eaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f36eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f36ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4d3f36c120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4d3f36c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f36c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4d3f357a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4d3f357a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f357df0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f356020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4d3f36c870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4d3f36c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f36cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4d3f354ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f354ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f354e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f353020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4d3f36fdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f36fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f36e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4d3f35ae50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4d3f35ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f358210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4d3f368480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4d3f368480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f368800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f368990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4d3f369480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f369480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f369800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f369990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4d3f371750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f371750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f371ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4d3f35be50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4d3f35be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35a210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4d3f35c670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4d3f35c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4d3f35a670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4d3f35a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4d3f351ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f351ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f351e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f350020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4d3f353ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4d3f353ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f353e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f351020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4d3f35f670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4d3f35f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4d3f35ce50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4d3f35ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35b210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4d3f355ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4d3f355ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f355e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f354020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4d3f362670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4d3f362670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3629f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f362b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4d3f350ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f350ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f350e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f34f020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f34f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f34f340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f34f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4d3f371100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4d3f371100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f371480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4d3f36a370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4d3f36a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f36a6f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f36a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4d3f367480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4d3f367480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f367800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f367990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4d3f35ee50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4d3f35ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35d210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4d3f363e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f363e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f362210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4d3f35d670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4d3f35d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4d3f365670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f365670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3659f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f365b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4d3f370450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4d3f370450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f3707d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4d3f365e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f365e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f364210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f374a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f374a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f374e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f372020"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f3721b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f372340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f3724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4d3f36b020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f36b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f36b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4d3f36bcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4d3f36bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f36a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4d3f3552f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4d3f3552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f355670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f355800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4d3f356ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f356ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f356e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f355020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4d3f36e450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f36e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f36e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4d3f3562f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4d3f3562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f356670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f356800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4d3f3512f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4d3f3512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f351670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f351800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4d3f35fe50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4d3f35fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35e210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4d3f35b670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4d3f35b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f35b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f35bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4d3f370aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4d3f370aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f370e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4d3f36f770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f36f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f36faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4d3f362e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4d3f362e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f361210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4d3f36b670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4d3f36b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f36b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4d3f361670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4d3f361670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3619f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f361b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4d3f358e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4d3f358e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f357610"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3577a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4d3f34f7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f34f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f34fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f34fcb0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f34fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f34e020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f34e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4d3f33ac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f33ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f339210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4d3f345da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4d3f345da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f344180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4d3f33eb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f33eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f33c020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f33c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4d3f338670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f338670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3389f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f338b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4d3f331e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4d3f331e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32f210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4d3f338e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4d3f338e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f336210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4d3f3242f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f3242f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f324670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f324800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4d3f3262f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4d3f3262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f326670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f326800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4d3f342120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f342120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f3424a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4d3f32c670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4d3f32c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4d3f3272f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f3272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f327670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f327800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4d3f33cc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4d3f33cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f33b020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f33b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4d3f33bc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f33bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f33a020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f33a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4d3f332670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4d3f332670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3329f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f332b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4d3f334e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4d3f334e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f333210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4d3f336670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f336670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3369f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f336b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4d3f346760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f346760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4d3f346ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4d3f346c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4d3f346e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4d3f341aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f341aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f341e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4d3f340120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4d3f340120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f3405a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4d3f32ba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4d3f32ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32bdf0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4d3f340870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4d3f340870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f340bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4d3f327ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f327ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f327e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f326020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4d3f342dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f342dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f341180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4d3f32de50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4d3f32de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32c210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4d3f33b480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4d3f33b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f33b800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f33b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4d3f33c480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f33c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f33c800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f33c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4d3f345750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f345750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f345ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4d3f32ee50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4d3f32ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32d210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4d3f32f670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4d3f32f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4d3f32d670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4d3f32d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4d3f325ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f325ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f325e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f324020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4d3f326ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4d3f326ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f326e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f325020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4d3f333670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4d3f333670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3339f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f333b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4d3f32fe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4d3f32fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32e210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4d3f328ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4d3f328ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f328e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f327020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4d3f335670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4d3f335670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3359f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f335b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4d3f324ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f324ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f324e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f323020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3231b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f323340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f3234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4d3f345100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4d3f345100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f345480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4d3f33e370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4d3f33e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f33e6f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f33e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4d3f33a480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4d3f33a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f33a800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f33a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4d3f332e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4d3f332e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f331210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4d3f336e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f336e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f335210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4d3f331670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4d3f331670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3319f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f331b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4d3f339670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f339670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3399f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f339b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4d3f344450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4d3f344450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f3447d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4d3f339e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f339e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f338210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f3479e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f3479e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f347d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f346020"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f3461b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f346340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f3464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4d3f33f020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f33f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f33f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4d3f33fcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4d3f33fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f33e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4d3f3282f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4d3f3282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f328670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f328800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4d3f32aad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f32aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32ae50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f328020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4d3f341450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f341450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f3417d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4d3f32a2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4d3f32a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32a670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4d3f3252f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4d3f3252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f325670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f325800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4d3f333e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4d3f333e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f332210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4d3f32e670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4d3f32e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4d3f344aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4d3f344aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f344e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4d3f342770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f342770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f342af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4d3f335e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4d3f335e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f334210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f3343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4d3f33f670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4d3f33f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f33f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4d3f334670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4d3f334670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f3349f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f334b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4d3f32ce50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4d3f32ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f32b610"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f32b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4d3f3237a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f3237a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f323b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f323cb0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f323e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f322020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f3221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f4d3f31ab20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4d3f31ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4d3f317020"/>
        <function-ref name="changed" scoped="" ref="0x7f4d3f3171b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4d3f317340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4d3f3174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f4d3f319d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4d3f319d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4d3f3030e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f4d3f2fe310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4d3f2fe310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4d3f2fe690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f4d3f2fb880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4d3f2fb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f2fbc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f4d3f2f0020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4d3f2f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f2f03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f4d3f2e6bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f4d3f2e6bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f2ea020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f2ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f4d3f2ea530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f4d3f2ea530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4d3f2ea8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3f2eaa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f4d3f2eb140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4d3f2eb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f2eb4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f4d3f2efc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f4d3f2efc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f2d6020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f2d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f4d3f2d6540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f4d3f2d6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f2d68c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f2d6a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f2d6be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f2d6d70"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f2d5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f2d51b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f2d5340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f2d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f4d3f2cd950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4d3f2cd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039c640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4d4039c9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4d3f2cf780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f4d3f2d2150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f4d3f2d2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f2d24d0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f2d2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f4d3f2d29f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f4d3f2d29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f2d2d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f2d1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f2d11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f2d1340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f2d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f2d1660"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f2d17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f2d1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f4d3f2d4ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4d3f2d4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039c640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4d4039c9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4d3f2acae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f4d3f2aaa90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4d3f2aaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039c640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4d4039c9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4d3f2a98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4d3f29a020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3f29a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039c640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4d4039c9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f29ae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3f298800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3f298340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3f298cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f4d3f294530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4d3f294530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039c640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4d4039c9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f2933d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3f293d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3f293890"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3f292260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4d3f28d020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4d3f28d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f28d3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4d3f28d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4d3f28d6c0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f28d850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4d3f28d9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3f28db70"/>
        <function-ref name="getMode" scoped="" ref="0x7f4d3f28dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3f28c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3f28c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4d3f28c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4d3f28c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4d3f290e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3f290e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039c640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4d4039c9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f28fca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3f28e670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3f28e1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3f28eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f4d3f2d7590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f4d3f2d7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f2d7910"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f2d7aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f2d7c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f2d7dc0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f288020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f2881b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f288340"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f2884d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4d3f285c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4d3f285c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f284020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f2841b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4d3f284340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4d3f282020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f284660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f2847f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4d3f284980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4d3f284b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f284ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f284e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4d3f283020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4d3f2831b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4d3f283340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4d3f2835d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4d3f283760"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f2838f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4d3f283a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4d3f283c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f2844d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4d3f283da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4d3f2869e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4d3f2869e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f286d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f285020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f2851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f285340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f2854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f285660"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f2857f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f285980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4d3f27d1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4d3f27d1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4d3f27d530"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3f27d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4d3f26ecb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3f26ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4d3f26d0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4d3f26d230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4d3f26d3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4d3f26d550"/>
        <function-ref name="setCca" scoped="" ref="0x7f4d3f26d6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4d3f26d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f4d3f26a990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4d3f26a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4d3f26ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f4d3f26e020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4d3f26e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3f26e3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3f26e530"/>
        <function-ref name="modify" scoped="" ref="0x7f4d3f26e6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3f26e850"/>
        <function-ref name="resend" scoped="" ref="0x7f4d3f26e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4d3f2716c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4d3f2716c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4d3f271a40"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3f271bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f4d3f26c150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f4d3f26c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4d3f26c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4d3f260970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3f260970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4d3f260cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4d3f260e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4d3f25f030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4d3f25f1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f4d3f25f350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4d3f25f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4d3f250c60" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4d3f250c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4d3f254210"/>
        <function-ref name="clear" scoped="" ref="0x7f4d3f254940"/>
        <function-ref name="isValid" scoped="" ref="0x7f4d3f255ac0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f24d090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f4d3f238020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f238020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f2383a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f238530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f4d3f238890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4d3f238890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f238c10"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f238da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f4d3f25f900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4d3f25f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4d3f25fc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f4d3f23b530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f23b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f23b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f4d3f24aa80" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f4d3f24aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4d3f24ae00"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f249020"/>
        <function-ref name="captured" scoped="" ref="0x7f4d3f2491b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4d3f249340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f4d3f25eae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f4d3f25eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3f258390"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f25a360"/>
        <function-ref name="startAt" scoped="" ref="0x7f4d3f25ace0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3f25a820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4d3f258850"/>
        <function-ref name="start" scoped="" ref="0x7f4d3f25b970"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3f25be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4d3f258d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f258d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4d3f2570a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4d3f257230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4d3f2573c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4d3f257550"/>
        <function-ref name="getPower" scoped="" ref="0x7f4d3f2576e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4d3f257870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f4d3f23d550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f23d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f23d8d0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f23da60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f4d3f23de00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f23de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f23c1c0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f23c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f4d3f232d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4d3f232d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3f2350e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4d3f235270"/>
        <function-ref name="sfd" scoped="" ref="0x7f4d3f235400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4d3f261bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3f261bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3f260020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3f2601b0"/>
        <function-ref name="modify" scoped="" ref="0x7f4d3f260340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3f2604d0"/>
        <function-ref name="resend" scoped="" ref="0x7f4d3f260660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f4d3f240d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f240d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4d3f23f0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4d3f23f270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4d3f23f400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f4d3f23bc60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f23bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f23a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4d3f2439b0" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4d3f2439b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f243d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f242020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f2421b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f242340"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f2424d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f242660"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f2427f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f242980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3f263c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3f263c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3f261020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4d3f257bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f257bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3f256020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4d3f2561b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4d3f256340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f4d3f244e80" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4d3f244e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f24a220"/>
        <function-ref name="isSet" scoped="" ref="0x7f4d3f24a3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3f24a540"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f24a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f4d3f23a3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f23a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f23a960"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f23aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4d3f240020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4d3f240020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f2403a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f240530"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f2406c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f240850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f2409e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f4d3f249690" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f4d3f249690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f249b10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f249ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f249e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f243020"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f2431b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f243340"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f2434d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f243660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f4d3f237130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4d3f237130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f2374b0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f237640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f4d3f2379c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f2379c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f237d40"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f236020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f4d3f23c6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4d3f23c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f23ca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f4d3f242cd0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f4d3f242cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f2410a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f241230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f2413c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f241550"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f2416e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f241870"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f241a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f241b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4d3f2356c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d3f2356c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d3f235a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d3f235bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d3f235d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d3f234020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d3f2341b0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f234340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d3f2344d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d3f234b10"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f234660"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d3f2347f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d3f234980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f4d3f2395e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f2395e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f239960"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f239af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4d3f261320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4d3f261320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4d3f2616a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3f261830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f4d3f23f780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f23f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f23fb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f23fc90"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f23fe20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f23d020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f23d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f4d3f23cde0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4d3f23cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f23b180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f4d3f23ae80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4d3f23ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f239220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f4d3f25e0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f4d3f25e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4d3f25e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4d3f197c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f197c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f196210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4d3f1a1020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4d3f1a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f1a13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4d3f19bc70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f19bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f19a020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f19a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4d3f195670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f195670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f1959f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f195b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4d3f18ee50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4d3f18ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f18d210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f18d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4d3f195e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4d3f195e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f194210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4d3f1812f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f1812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f181670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f181800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4d3f1832f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4d3f1832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f183670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f183800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4d3f1a0370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f1a0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f1a06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4d3f189670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4d3f189670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f1899f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f189b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4d3f1852f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f1852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f185670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f185800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4d3f19ac60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4d3f19ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f198020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4d3f198c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f198c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f197020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4d3f18f670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4d3f18f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f18f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f18fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4d3f191e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4d3f191e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f190210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4d3f194670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f194670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f1949f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f194b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4d3f1a38f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f1a38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4d3f1a3c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4d3f1a3e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4d3f1a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4d3f19fd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f19fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f19d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4d3f19d370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4d3f19d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f19d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4d3f188a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4d3f188a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f188df0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f187020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4d3f19dac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4d3f19dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f19de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4d3f185ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f185ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f185e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f183020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4d3f19f060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f19f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f19f3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4d3f18ae50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4d3f18ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f189210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4d3f198480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4d3f198480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f198800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f198990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4d3f19a480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f19a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f19a800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f19a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4d3f1a2940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f1a2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f1a2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4d3f18ce50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4d3f18ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f18a210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f18a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4d3f18d670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4d3f18d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f18d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f18db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4d3f18a670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4d3f18a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f18a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f18ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4d3f182ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f182ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f182e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f181020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4d3f183ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4d3f183ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f183e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f182020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4d3f190670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4d3f190670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f1909f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f190b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4d3f18de50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4d3f18de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f18c210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f18c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4d3f186ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4d3f186ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f186e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f185020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4d3f193670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4d3f193670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f1939f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f193b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4d3f181ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f181ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f181e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f180020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1801b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f180340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f1804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4d3f1a22f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4d3f1a22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f1a2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4d3f19b490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4d3f19b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f19b810"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f19b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4d3f197480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4d3f197480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f197800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f197990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4d3f18fe50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4d3f18fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f18e210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f18e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4d3f194e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f194e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f193210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4d3f18e670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4d3f18e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f18e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f18eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4d3f196670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f196670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f1969f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f196b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4d3f1a1670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4d3f1a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f1a19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4d3f196e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f196e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f195210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f1a4c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f1a4c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f1a3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f1a31b0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f1a3340"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f1a34d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f1a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4d3f19c160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f19c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f19c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4d3f19ce00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4d3f19ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f19b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4d3f1862f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4d3f1862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f186670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f186800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4d3f187ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f187ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f187e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f186020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4d3f19f6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f19f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f19fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4d3f1872f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4d3f1872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f187670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f187800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4d3f1822f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4d3f1822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f182670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f182800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4d3f190e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4d3f190e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f18f210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f18f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4d3f18c670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4d3f18c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f18c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f18cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4d3f1a1cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4d3f1a1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f1a00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4d3f1a09c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f1a09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f1a0d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4d3f193e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4d3f193e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f191210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4d3f19c7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4d3f19c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f19cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4d3f191670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4d3f191670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f1919f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f191b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4d3f189e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4d3f189e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f188610"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1887a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4d3f1807a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f1807a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f180b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f180cb0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f180e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f17f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f17f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f4d3f174df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4d3f174df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3f1711c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4d3f171350"/>
        <function-ref name="sfd" scoped="" ref="0x7f4d3f1714e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3f1717c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3f1717c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3f171b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f4d3f170020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f4d3f170020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4d3f1703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4d3f1745c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4d3f1745c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4d3f174940"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3f174ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f4d3f167380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f4d3f167380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f167700"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f167890"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f167a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f167bb0"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f167d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f166020"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f1661b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f166340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f4d3f160b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4d3f160b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4d3f15f020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4d3f15f1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4d3f15f340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4d3f15f4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4d3f15f660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4d3f15f7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4d3f15f980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4d3f15fb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4d3f15fca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4d3f15fe30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4d3f15e020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4d3f15e1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f4d3f15e340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4d3f15e5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4d3f15e760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f4d3f1499d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f4d3f1499d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3f149d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3f148020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4d3f15ed70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4d3f15ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4d3f15b330"/>
        <function-ref name="clear" scoped="" ref="0x7f4d3f15ba60"/>
        <function-ref name="isValid" scoped="" ref="0x7f4d3f15dba0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f15a210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f4d3f1666b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f4d3f1666b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f166a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f166bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f166d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f165020"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f1651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f165340"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f1654d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f165660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f4d3f159cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f159cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f1580a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f158230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f4d3f158590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4d3f158590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f158910"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f158aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f4d3f1576d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f1576d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f157a50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f157be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4d3f161330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f161330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4d3f1616b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4d3f161840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4d3f1619d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4d3f161b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f4d3f161cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4d3f161e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f4d3f16a550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4d3f16a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3f16a8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4d3f16aa60"/>
        <function-ref name="sfd" scoped="" ref="0x7f4d3f16abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f4d3f1623a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4d3f1623a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f162720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4d3f168020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4d3f168020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4d3f1683a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4d3f168530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4d3f1686c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4d3f168850"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f1689e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4d3f168b70"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f168d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4d3f167020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f4d3f156020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f156020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f1563a0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f156530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3f16c620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3f16c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3f16c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4d3f1601e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f1601e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3f160560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4d3f1606f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4d3f160880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3f169020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3f169020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3f1693a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4d3f1646e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4d3f1646e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f164a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f164bf0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f164d80"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f163020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f1631b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f4d3f158e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4d3f158e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f1571c0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f157350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f4d3f163530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f163530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f1638b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f163a40"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f163bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f163d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f162020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f4d3f1568b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4d3f1568b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f156e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f4d3f1697c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f4d3f1697c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4d3f169b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4d3f154150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d3f154150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d3f1544d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d3f154660"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d3f1547f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d3f154980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d3f154b10"/>
        <function-ref name="get" scoped="" ref="0x7f4d3f154ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d3f154e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d3f1534d0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f153020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d3f1531b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d3f153340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f4d3f1593e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f1593e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f159760"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f1598f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f4d3f15ab10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f15ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f159020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f4d3f165a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4d3f165a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4d3f165dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f4d3f164020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4d3f1641b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4d3f164340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f4d3f162ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f162ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f161020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4d3f16cca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4d3f16cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4d3f16a0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3f16a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4d3f0e8a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4d3f0e8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4d3f0e8df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4d3f0ec670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f0ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4d3f0ec9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4d3f0ecb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4d3f0ecd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4d3f0e9020"/>
        <function-ref name="getPower" scoped="" ref="0x7f4d3f0e91b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4d3f0e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4d3f0e7550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4d3f0e7550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4d3f0e6b00"/>
        <function-ref name="clear" scoped="" ref="0x7f4d3f0e42a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f4d3f0e63d0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f0e49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f4d3f0e80c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0e80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3f0e8440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4d3f0e85d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4d3f0e8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4d3f0df480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4d3f0df480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f0df800"/>
        <function-ref name="isSet" scoped="" ref="0x7f4d3f0df990"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3f0dfb20"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f0dfcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4d3f0e3660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4d3f0e3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4d3f0e2ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f4d3f0e0460"/>
        <function-ref name="isValid" scoped="" ref="0x7f4d3f0e25b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f0e0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4d3f0e96e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4d3f0e96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4d3f0e9a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f4d3f0e9bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4d3f0e9d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4d3f0d9020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4d3f0d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4d3f0d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4d3f0ded20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3f0ded20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4d3f0db0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4d3f0db270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4d3f0db400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4d3f0db590"/>
        <function-ref name="getPower" scoped="" ref="0x7f4d3f0db720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4d3f0db8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4d3f0d04a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4d3f0d04a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3f0d0820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3f0d09b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3f0d0b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3f0d0cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3f0d0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4d3f0d9a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4d3f0d9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4d3f0d6020"/>
        <function-ref name="clear" scoped="" ref="0x7f4d3f0d6750"/>
        <function-ref name="isValid" scoped="" ref="0x7f4d3f0d88d0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f0d6e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f4d3f0da640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3f0da640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3f0da9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4d3f0dab50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4d3f0dace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4d3f0d18b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4d3f0d18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f0d1c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f4d3f0d1dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3f0d0020"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f0d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f4d3f0cf3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f4d3f0cf3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f0ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f4d3f0ce6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4d3f0ce6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f0cc3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4d3f0d5af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4d3f0d5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4d3f0d20d0"/>
        <function-ref name="clear" scoped="" ref="0x7f4d3f0d2800"/>
        <function-ref name="isValid" scoped="" ref="0x7f4d3f0d4970"/>
        <function-ref name="set" scoped="" ref="0x7f4d3f0d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4d3f0dbc50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4d3f0dbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4d3f0da020"/>
        <function-ref name="noAck" scoped="" ref="0x7f4d3f0da1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4d3f0da340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4d3f07d020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4d3f07d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f07dc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4d3f07b300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4d3f07b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4d3f07a150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4d3f07aad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4d3f07a610"/>
        <function-ref name="overflow" scoped="" ref="0x7f4d3f079020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4d3f077450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4d3f077450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4d3f073a20"/>
        <function-ref name="fired" scoped="" ref="0x7f4d3f074020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4d3f074da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4d3f074920"/>
        <function-ref name="getdt" scoped="" ref="0x7f4d3f0724a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4d3f072020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4d3f0744a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4d3f076090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4d3f073410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4d3f076560"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3f076a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4d3f062c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4d3f062c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f060210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4d3f06b020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4d3f06b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f06b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4d3f065c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4d3f065c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f064020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4d3f05f670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4d3f05f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f05f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f05fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4d3f058e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4d3f058e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f057210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4d3f05fe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4d3f05fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f05e210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f05e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4d3f04b2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4d3f04b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f04b670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f04b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4d3f04e2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4d3f04e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f04e670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f04e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4d3f06a370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4d3f06a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f06a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4d3f053670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4d3f053670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f0539f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f053b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4d3f04f2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4d3f04f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f04f670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f04f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4d3f064c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4d3f064c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f063020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4d3f063c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4d3f063c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f062020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4d3f059670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4d3f059670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f0599f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f059b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4d3f05ce50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4d3f05ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f05b210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f05b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4d3f05e670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4d3f05e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f05e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f05eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4d3f06d970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4d3f06d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4d3f06dcf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4d3f06de80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4d3f06c030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4d3f069d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4d3f069d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f0680a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4d3f068370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4d3f068370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f0687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4d3f052a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4d3f052a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f052df0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f051020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4d3f068ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4d3f068ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f068e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4d3f04fad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4d3f04fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f04fe50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f04e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4d3f069060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4d3f069060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f0693e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4d3f055e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4d3f055e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f053210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4d3f063480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4d3f063480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f063800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f063990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4d3f064480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4d3f064480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f064800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f064990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4d3f06c950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4d3f06c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f06ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4d3f056e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4d3f056e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f055210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4d3f057670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4d3f057670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f0579f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f057b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4d3f055670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4d3f055670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f0559f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f055b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4d3f04dad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4d3f04dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f04de50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f04b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4d3f04ead0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4d3f04ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f04ee50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f04d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4d3f05b670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4d3f05b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f05b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f05bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4d3f057e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4d3f057e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f056210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4d3f050ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4d3f050ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f050e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f04f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4d3f05d670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4d3f05d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f05d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f05db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4d3f04bad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4d3f04bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f04be50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f04a020"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f04a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f04a340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f04a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4d3f06c300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4d3f06c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f06c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4d3f065490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4d3f065490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f065810"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0659a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4d3f062480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4d3f062480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f062800"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f062990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4d3f059e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4d3f059e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f058210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4d3f05ee50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4d3f05ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f05d210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f05d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4d3f058670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4d3f058670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f0589f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f058b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4d3f060670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4d3f060670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f0609f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f060b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4d3f06b670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4d3f06b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f06b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4d3f060e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4d3f060e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f05f210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f05f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3f06fd00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3f06fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3f06d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3f06d230"/>
        <function-ref name="request" scoped="" ref="0x7f4d3f06d3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3f06d550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3f06d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4d3f066160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4d3f066160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f0664e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4d3f066e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4d3f066e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f0651c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4d3f0502f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4d3f0502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f050670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f050800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4d3f051ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4d3f051ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f051e50"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f050020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4d3f0696b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4d3f0696b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f069a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4d3f0512f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4d3f0512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f051670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f051800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4d3f04d2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4d3f04d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f04d670"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f04d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4d3f05be50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4d3f05be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f059210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4d3f056670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4d3f056670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f0569f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f056b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4d3f06bcc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4d3f06bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f06a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4d3f06a9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4d3f06a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f06ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4d3f05de50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4d3f05de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f05c210"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f05c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4d3f0667b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4d3f0667b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4d3f066b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4d3f05c670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4d3f05c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f05c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f05cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4d3f053e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4d3f053e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4d3f052610"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f0527a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4d3f04a7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4d3f04a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4d3f04ab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4d3f04acb0"/>
        <function-ref name="write" scoped="" ref="0x7f4d3f04ae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4d3f049020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4d3f0491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4d3f01fa20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4d3f01fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4d3f01fda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4d3f01e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4d3f01c920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f4d3f01c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3f01f560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3f023990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3f023990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3f023d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4d3f018a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4d3f018a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4d3f018da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4d3f017020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4d3f019940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f4d3f019940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3f018560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3f019080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3f019080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3f019400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4d3f021aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4d3f021aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4d3f021e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4d3f00a020"/>
        <function-ref name="isState" scoped="" ref="0x7f4d3f00a1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4d3f00a340"/>
        <function-ref name="requestState" scoped="" ref="0x7f4d3f00a4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4d3f00a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4d3f000020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4d3f000020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3f0003a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3f000530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3f0006c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3f000850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3f0009e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4d3f001220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3f001220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3f0015a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3f001730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3f0018c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3f001a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3f001be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4d3effce60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4d3effce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3effb210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3effb3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3effb530"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3effb6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3effb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4d3efffa10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3efffa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3efffd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3effc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3effc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3effc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3effc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4d3effa8f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4d3effa8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4d3effac70"/>
        <function-ref name="rand32" scoped="" ref="0x7f4d3effae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3effc750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3effc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3effcad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4d3eff9170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3eff9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3eff94f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4d3eff9680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4d3eff9810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f4d3effbae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4d3effbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4d3effbe60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4d3effa020"/>
        <function-ref name="isState" scoped="" ref="0x7f4d3effa1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4d3effa340"/>
        <function-ref name="requestState" scoped="" ref="0x7f4d3effa4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4d3effa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4d3effd690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4d3effd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4d3effda10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4d3effdba0"/>
        <function-ref name="isState" scoped="" ref="0x7f4d3effdd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4d3efe6020"/>
        <function-ref name="requestState" scoped="" ref="0x7f4d3efe61b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4d3efe6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4d3efe0950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4d3efe0950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efe0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3efe3aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3efe3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efe3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f4d3efe0200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4d3efe0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efe0580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4d3efda3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4d3efda3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efda770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3efdcb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3efdcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3efda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3efdfe30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3efdfe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efdc1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4d3efdaa70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3efdaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3efdadf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4d3efd9020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4d3efd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f4d3efdc570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4d3efdc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efdc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4d3efac020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4d3efac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4d3efac6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4d3efac6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3efaca30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3efacbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3efacd50"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3efab020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3efab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4d3efb08e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3efb08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3efb0c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3efb0df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3efaf020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3efaf1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3efaf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4d3efafc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4d3efafc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3efae0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3efae230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3efae3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3efae550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3efae6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3efaf5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3efaf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efaf960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3efb1be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3efb1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3efb0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3efb01b0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3efb0340"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3efb04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3efb0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4d3efaea50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4d3efaea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efaedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4d3efad170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4d3efad170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3efad4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3efad680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3efad810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3efad9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3efadb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4d3efa2d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4d3efa2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3efa1180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3efa1310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3efa14a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3efa1630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3efa17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4d3efa1b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4d3efa1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efa0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f4d3ef73db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f4d3ef73db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3ef72180"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3ef72310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4d3efa02f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3efa02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4d3efa0670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4d3efa0800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4d3efa0990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4d3efa0b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f4d3efa0cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4d3efa0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4d3efa4a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4d3efa4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3efa4da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3efa3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3efa31b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3efa3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3efa34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4d3ef9fb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4d3ef9fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4d3ef9e020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4d3ef9e1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4d3ef9e340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4d3ef9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4d3ef9f170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3ef9f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ef9f4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4d3ef9f680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4d3ef9f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4d3efa4370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f4d3efa4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efa46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4d3efa77b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4d3efa77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3efa7b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3efa7cc0"/>
        <function-ref name="request" scoped="" ref="0x7f4d3efa7e50"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3efa6020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3efa61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4d3efa64d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f4d3efa64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3efa6850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3efa69e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3efa6b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3efa6d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3efa4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4d3efa3840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4d3efa3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3efa3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4d3efa2020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4d3efa2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3efa23a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3efa2530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3efa26c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3efa2850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3efa29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4d3ef53dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4d3ef53dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4d3ef52180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4d3ef52410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4d3ef52410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4d3ef52790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4d3ef52920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4d3ef52ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4d3ef52c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4d3ef46b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4d3ef46b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4d3ef45020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4d3ef451b0"/>
        <function-ref name="start" scoped="" ref="0x7f4d3ef45340"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3ef454d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4d3ef44860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4d3ef44860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3ef44be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ef44d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ef43020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3ef431b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3ef43340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4d3ef43690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4d3ef43690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3ef43a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4d3ef4ace0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3ef4ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3ef470a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ef47230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ef473c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3ef47550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3ef476e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4d3ef46080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3ef46080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4d3ef46400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4d3ef46590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4d3ef46720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4d3ef468b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f4d3ef45800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f4d3ef45800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4d3ef45b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4d3ef45d10"/>
        <function-ref name="isState" scoped="" ref="0x7f4d3ef44020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4d3ef441b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4d3ef44340"/>
        <function-ref name="forceState" scoped="" ref="0x7f4d3ef444d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4d3ef43d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f4d3ef43d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4d3ef42180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4d3ef42310"/>
        <function-ref name="start" scoped="" ref="0x7f4d3ef424a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3ef42630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3ef47980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3ef47980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3ef47d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4d3ef3f2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3ef3f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4d3ef3f650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4d3ef3f7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4d3ef3f970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4d3ef3fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4d3ef41580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4d3ef41580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4d3ef41900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4d3ef41a90"/>
        <function-ref name="isState" scoped="" ref="0x7f4d3ef41c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4d3ef41db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4d3ef40020"/>
        <function-ref name="forceState" scoped="" ref="0x7f4d3ef401b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4d3ef32d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4d3ef32d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3ef31180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ef31310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ef314a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3ef31630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3ef317c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4d3ef35350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3ef35350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3ef356d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ef35860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ef359f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3ef35b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3ef35d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4d3ef32020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4d3ef32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4d3ef323a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4d3ef32530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4d3ef326c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4d3ef32850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4d3ef329e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f4d3ef2d1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3ef2d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4d3ef2d540"/>
        <function-ref name="noAck" scoped="" ref="0x7f4d3ef2d6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4d3ef2d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4d3ef30410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4d3ef30410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4d3ef30790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4d3ef30920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4d3ef30ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4d3ef30c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4d3ef30dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4d3ef0d690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4d3ef0d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3ef0da10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4d3ef0e860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4d3ef0e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3ef0ebe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ef0ed70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ef0d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3ef0d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3ef0d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f4d3ef0b610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4d3ef0b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4d3ef0b990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4d3ef0bb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4d3ef0bcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4d3ef0be40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4d3ef0a020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4d3ef0a1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4d3ef0a340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4d3ef0a4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4d3ef0a660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4d3ef0a7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4d3ef0a980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4d3ef0ab10"/>
        <function-ref name="sync" scoped="" ref="0x7f4d3ef0aca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4d3ef09020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4d3ef091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4d3ef0f8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4d3ef0f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4d3ef0fc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4d3ef0fdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4d3ef0e020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4d3ef0e1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f4d3ef0e340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4d3ef0e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4d3ef10ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f4d3ef10ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4d3ef0f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f4d3ef081f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f4d3ef081f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4d3ef08570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4d3ef08700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4d3ef08890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4d3ef08a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f4d3ef08bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4d3ef08d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4d3ef11a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4d3ef11a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3ef11e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3ef10020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ef101b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ef10340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3ef104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4d3ef15020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4d3ef15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3ef153a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ef15530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ef156c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3ef15850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3ef159e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4d3ef14df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4d3ef14df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3ef121c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4d3ef0dce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4d3ef0dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4d3ef0c0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4d3ef0c230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4d3ef0c3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4d3ef0c550"/>
        <function-ref name="getPower" scoped="" ref="0x7f4d3ef0c6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4d3ef0c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f4d3ef094d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4d3ef094d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4d3ef09950"/>
        <function-ref name="changed" scoped="" ref="0x7f4d3ef09ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4d3ef09c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4d3ef09e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4d3ef0cb70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4d3ef0cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ef0b020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4d3ef0b1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4d3ef0b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3ef14210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3ef14210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3ef14590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4d3ef07d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4d3ef07d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4d3ef050e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4d3ef05270"/>
        <function-ref name="led1On" scoped="" ref="0x7f4d3ef05400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4d3ef05590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4d3ef05720"/>
        <function-ref name="get" scoped="" ref="0x7f4d3ef058b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4d3ef05a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4d3ef041b0"/>
        <function-ref name="set" scoped="" ref="0x7f4d3ef05bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4d3ef05d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f4d3ef04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4d3ef12470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4d3ef12470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4d3ef127f0"/>
        <function-ref name="source" scoped="" ref="0x7f4d3ef12980"/>
        <function-ref name="address" scoped="" ref="0x7f4d3ef12b10"/>
        <function-ref name="destination" scoped="" ref="0x7f4d3ef12ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4d3ef12e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4d3ef11020"/>
        <function-ref name="type" scoped="" ref="0x7f4d3ef111b0"/>
        <function-ref name="setType" scoped="" ref="0x7f4d3ef11340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4d3ef114d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4d3ef11660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4d3ef117f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f4d3ef070f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f4d3ef070f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4d3ef07470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4d3ef07600"/>
        <function-ref name="request" scoped="" ref="0x7f4d3ef07790"/>
        <function-ref name="granted" scoped="" ref="0x7f4d3ef07920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4d3ef07ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4d3ee81360" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4d3ee81360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4d3ee816e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4d3ee81870"/>
        <function-ref name="start" scoped="" ref="0x7f4d3ee81a00"/>
        <function-ref name="stop" scoped="" ref="0x7f4d3ee81b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4d3ee803f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4d3ee803f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3ee80770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ee80900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ee80a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3ee80c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3ee80db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4d3ee7d1d0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4d3ee7d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3ee7d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4d3ee7d7e0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4d3ee7d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3ee7db60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3ee7dcf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ee7de80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ee7c030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3ee7c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4d3ee7aa20" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4d3ee7aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039de30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4d4039c200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4d3ee78020"/>
        <function-ref name="clear" scoped="" ref="0x7f4d3ee78750"/>
        <function-ref name="isValid" scoped="" ref="0x7f4d3ee79890"/>
        <function-ref name="set" scoped="" ref="0x7f4d3ee78e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4d3ee70890" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4d3ee70890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4d3ee70c10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4d3ee70da0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4d3ee6f020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4d3ee6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3ee7f5c0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3ee7f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3ee7f940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4d3ee7bb20" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4d3ee7bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4d3ee7a020"/>
        <function-ref name="noAck" scoped="" ref="0x7f4d3ee7a1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4d3ee7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4d3ee7c470" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4d3ee7c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4d3ee7c7f0"/>
        <function-ref name="source" scoped="" ref="0x7f4d3ee7c980"/>
        <function-ref name="address" scoped="" ref="0x7f4d3ee7cb10"/>
        <function-ref name="destination" scoped="" ref="0x7f4d3ee7cca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4d3ee7ce30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4d3ee7b020"/>
        <function-ref name="type" scoped="" ref="0x7f4d3ee7b1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f4d3ee7b340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4d3ee7b4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4d3ee7b660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4d3ee7b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4d3ee74af0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4d3ee74af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4d4039d680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4d4039d9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4d3ee720d0"/>
        <function-ref name="clear" scoped="" ref="0x7f4d3ee72800"/>
        <function-ref name="isValid" scoped="" ref="0x7f4d3ee73970"/>
        <function-ref name="set" scoped="" ref="0x7f4d3ee70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4d3eddc020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4d3eddc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3eddc3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3eddc530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3eddc6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3eddc850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3eddc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4d3eddcc30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4d3eddcc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3edda020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3edda1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3edda340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3edda4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3edda660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4d3edda8b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4d3edda8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4d3eddac30"/>
        <function-ref name="source" scoped="" ref="0x7f4d3eddadc0"/>
        <function-ref name="address" scoped="" ref="0x7f4d3edd9020"/>
        <function-ref name="destination" scoped="" ref="0x7f4d3edd91b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4d3edd9340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4d3edd94d0"/>
        <function-ref name="type" scoped="" ref="0x7f4d3edd9660"/>
        <function-ref name="setType" scoped="" ref="0x7f4d3edd97f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4d3edd9980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4d3edd9b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4d3edd9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4d3edd8020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4d3edd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4d3edd83a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4d3edd8530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4d3edd86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4d3e494e60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4d3e494e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3e492210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3e4923a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3e492530"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3e4926c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3e492850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4d3e492aa0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4d3e492aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3e492e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3e491020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3e4911b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3e491340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3e4914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4d3e491720" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4d3e491720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4d3e491aa0"/>
        <function-ref name="source" scoped="" ref="0x7f4d3e491c30"/>
        <function-ref name="address" scoped="" ref="0x7f4d3e491dc0"/>
        <function-ref name="destination" scoped="" ref="0x7f4d3e490020"/>
        <function-ref name="setSource" scoped="" ref="0x7f4d3e4901b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4d3e490340"/>
        <function-ref name="type" scoped="" ref="0x7f4d3e4904d0"/>
        <function-ref name="setType" scoped="" ref="0x7f4d3e490660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4d3e4907f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4d3e490980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4d3e490b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4d3e490da0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4d3e490da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4d3e48f180"/>
        <function-ref name="noAck" scoped="" ref="0x7f4d3e48f310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4d3e48f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4d3e4867f0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4d3e4867f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3e486b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3e486d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3e485020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3e4851b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3e485340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f4d3e4855f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3e4855f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3e485970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3e485b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3e485c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3e485e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3e484020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4d3e484270" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4d3e484270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4d3e4845f0"/>
        <function-ref name="source" scoped="" ref="0x7f4d3e484780"/>
        <function-ref name="address" scoped="" ref="0x7f4d3e484910"/>
        <function-ref name="destination" scoped="" ref="0x7f4d3e484aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4d3e484c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4d3e484dc0"/>
        <function-ref name="type" scoped="" ref="0x7f4d3e483020"/>
        <function-ref name="setType" scoped="" ref="0x7f4d3e4831b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4d3e483340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4d3e4834d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4d3e483660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4d3ee43930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3ee43930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3ee43cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3ee43e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3ee40020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3ee401b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3ee40340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4d3edf0400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4d3edf0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3edf07a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3edf0930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3edf0ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3edf0c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3edf0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4d3edf2df0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4d3edf2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4d3edf11c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3edf1350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3edf14e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4d3edf1670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4d3edf1800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4d3edee720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4d3edee720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3edeeaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3edeec30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3edeedc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3eded020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3eded1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f4d3edf1b80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f4d3edf1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f4d3edf0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f4d3eded480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f4d3eded480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3eded800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3eded990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f4d3ededc60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f4d3ededc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4d3edec020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4d3edec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4d3edef060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4d3edef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4d3edef3e0"/>
        <function-ref name="source" scoped="" ref="0x7f4d3edef570"/>
        <function-ref name="address" scoped="" ref="0x7f4d3edef700"/>
        <function-ref name="destination" scoped="" ref="0x7f4d3edef890"/>
        <function-ref name="setSource" scoped="" ref="0x7f4d3edefa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4d3edefbb0"/>
        <function-ref name="type" scoped="" ref="0x7f4d3edefd40"/>
        <function-ref name="setType" scoped="" ref="0x7f4d3edee020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4d3edee1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4d3edee340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4d3edee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4d3edcf020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4d3edcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4d3edcf3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4d3edcf530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4d3edcf6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4d3edcf850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4d3edcf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4d3edd5910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4d3edd5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4d3edd5c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4d3edcfc30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4d3edcfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4d3edcd020"/>
        <function-ref name="source" scoped="" ref="0x7f4d3edcd1b0"/>
        <function-ref name="address" scoped="" ref="0x7f4d3edcd340"/>
        <function-ref name="destination" scoped="" ref="0x7f4d3edcd4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4d3edcd660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4d3edcd7f0"/>
        <function-ref name="type" scoped="" ref="0x7f4d3edcd980"/>
        <function-ref name="setType" scoped="" ref="0x7f4d3edcdb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4d3edcdca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4d3edcde30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4d3edcc020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4d40392c60" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f4d40393830" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f4d40388d50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f4d40384c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f4d40384940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f4d40389030" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f4d4038b870" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f4d40387b40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f4d40387550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f4d403878b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f4d40384020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f4d40385cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f4d403855a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f4d40385320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f4d403885b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f4d4038b0e0" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f4d40389dd0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f4d403897e0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f4d40389b40" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f4d40346b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f4d40349de0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f4d40346420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f4d40349700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f4d403485a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f4d4034c8f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f4d40349020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f4d40348cc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f4d404b67e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f4d4077e700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f4d403dca80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f4d403da1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f4d403dc2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f4d40554020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4d40ef4e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f4d4083ce20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f4d4083c610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f4d40830770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f4d4082e020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f4d402e2020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f4d402e27d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f4d402e1020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f4d402e0020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f4d402de7d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4d402dd020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f4d402e17b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4d402ddb90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f4d402dd910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f4d402e3850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f4d402e0800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f4d402de020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f4d402d38a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f4d402d2020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4d402d5a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f4d402d2e80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4d402d3190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f4d402d2740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4d402d8c40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4d402d5350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f4d402a8880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f4d402a7020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f4d402a3b10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4d402a3890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f4d402a15d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4d402aa120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f4d402a6020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f4d402a1d60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f4d402a0860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4d402a05e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f4d402a7760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4d402a80e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f4d4029e190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f4d402a4770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f4d402a2e30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f4d402aa8c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f4d402a23e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4d402ab270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f4d402a67a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f4d402a3020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f4d402a4020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4d402ab9a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f4d3fef4110" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4d3fef8e40" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f4d3fef3600" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4d3fef3380" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4d3fef8460" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4d3fef4960" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f4d3ff1e3f0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3ff1e170" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f4d3ff1c490" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3ff1c210" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4d3ff1a7b0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3ff1a1b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3ff1a4e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4d3ff198a0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f4d3ff1b930" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3ff1b370" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3ff1b6a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4d3ff022c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4d3ff17930" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f4d3ff17cb0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3ff02020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4d3fefe970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fefe370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3fefe6a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4d3fefda60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4d3ff01630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3ff013b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4d3ff00b80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3ff005a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4d3ff008f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f4d3fef02b0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4d3fef1b50" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f4d3fef0020" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f4d3feec980" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4d3feec380" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f4d3feec6f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f4d3fef0d90" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f4d40ee8110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4d3fef0b10" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f4d3feed880" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4d3feed600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f4d3fef1350" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4d3fef10d0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f4d3feee990" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4d3feee710" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f4d3fef99c0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
              <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fef9060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f4d3fef93b0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3fef96e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d40002350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d40002350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4d3fffb1f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4d40000a60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f4d3fffd820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4d3fffd250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4d3fffd590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f4d3fffea60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f4d3fff9270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f4d3fffb980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4d3fffe270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f4d40001020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4d40002c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f4d3fffc820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4d3fffc250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4d3fffc590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f4d40001ae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4d40001860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4d40000350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f4d3ff092a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4d3ff30180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4d3ff09020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f4d3ff12d60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4d3ff12ae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f4d3ff151f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f4d3ff15cb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4d3ff15a30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f4d3ff0f7a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4d3ff0f1c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4d3ff0f510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f4d3ff112b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4d3ff13c40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4d3ff11020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f4d3ff0cbf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4d3ff0c970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f4d3ff0e020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4d3ff0a9a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f4d3ff0acc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4d3ff31d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f4d3ff0d9f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4d3ff0d770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f4d3ff07730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4d3ff30180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4d3ff07150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f4d3ff074a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4d3ff30180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f4d3ff06580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4d3ff30180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d3fea26d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3fea26d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4d3fe9f020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d3fe9a070" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3fe9a070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4d3fe9a2b0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fe9a2b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4d3fe96e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fe9a2b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4d3fe99e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f4d3fe96460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fe9a2b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fe9a2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4d3fe98e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fe9a2b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f4d3fe961d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fe9a2b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4d3fe98640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f4d3fe95620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fe9a2b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4d3fe9ae10" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fe9a2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4d3fe9ab90" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fe9a2b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4d3fe99680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f4d3fe74270" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f4d3fe74bf0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4d3fe74970" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f4d3fe73610" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f4d3fe73390" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f4d3fe71020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f4d3fe73d60" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4d3fe71710" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4d3fe82ad0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f4d3fe80400" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f4d3fe80180" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f4d3fe81270" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4d3fe88d30" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f4d3fe819b0" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4d3fe85c50" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f4d3fe823e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4d3fe85510" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4d3fe83390" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f4d3fe83ca0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4d3fe83a20" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f4d3fe80e10" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f4d3fe80b90" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f4d3fe788f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f4d3fe78320" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f4d3fe78660" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f4d3fe7c7d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4d4033d550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4d4033c020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f4d3fe772b0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f4d3fe761f0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f4d3fe7aa30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f4d3fe779f0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f4d3fe7b020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f4d3fe7b7b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f4d3fe7a2a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4d4033d550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4d4033c020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4d3fe7a020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4d4033d550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4d4033c020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f4d3fe63d60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f4d3fe5d400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f4d3fe5d180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4d3fe5c020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4d3fe5dd10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4d3fe5e9a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4d3fe5e0e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f4d3fe5f740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f4d3fe5f4c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4d3fe321f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d3fce2e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3fce2e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4d3fcdd070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fcdd070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4d3fcdd990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3fcdd070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4d3fcdcad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4d3fcdc270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4d3fcdb270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f4d3fc1ae80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f4d40ee8930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f4d3fc1ac00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f4d40ee8930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f4d3fb62980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb62700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f4d3fb65c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb659b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f4d3fb66350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f4d3fb660d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f4d3fb68800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f4d3fb68580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f4d3fb66d80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f4d3fb66b00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f4d3fb63b10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb63890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f4d3fb502b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f4d3fb60c50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f4d3fb50020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f4d3fb5d680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb5d060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f4d3fb5d3f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f4d3fb5c850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb5c5d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f4d3fb5e810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f4d3fb61e10" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f4d3fb61b90" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f4d3fb6f2e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb6f060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f4d3fb6d510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb6d290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f4d3fb6c680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb6c400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f4d3fb54b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb548b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f4d3fb59b90" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb59570" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f4d3fb59900" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f4d3fb56ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb56850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f4d3fb56020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb57960" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f4d3fb57cf0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f4d3fb53b70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb538f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f4d3fb69780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb69500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4d3fb432b0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb4ac40" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3fb43020" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4d3fb3f890" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb3f290" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3fb3f5c0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4d3fb3e9b0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4d3fb425f0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb42370" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4d3fb41ac0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb414e0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4d3fb41830" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4d3fb47120" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f4d3fb48120" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f4d3fb49770" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4d3fb48910" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4d3fb47b70" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4d3fb1d3a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4d3fb22dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f4d3fb1d110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4d3fb1c6a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f4d3fb19e70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4d3fb19060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f4d3fb198a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3fb19bd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4d3fb1b840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4d3fb1b260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4d3fb1b5b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f4d3fb1de30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f4d3fb1dbb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f4d3fb150e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f4d3fb1e870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f4d3fb28a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4d3fb1f270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f4d3fb0f2e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb0f020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f4d3fb10710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f4d3ffec410"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f4d3ffebd70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb10410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f4d3fb0e620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f4d3ff68860"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f4d3ff66180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3fb0e320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f4d3fb256e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f4d3fb23840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f4d3fb23070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f4d3fb2ae20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f4d3fb26e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f4d3fb24020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f4d3fb24840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f4d3fb266c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f4d3fb09d00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f4d3fb0a350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f4d3fb09530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f4d3fb092b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f4d3fb0aac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f4d3fb0b020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f4d3fb12c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f4d3fb0bad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f4d3fb0b850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f4d3faad870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f4d3faad290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f4d3faad5e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f4d3faaf1f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f4d3fab0880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f4d3fab0210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f4d3fab05f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f4d3fab6c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4d3fab6990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f4d3faafa70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f4d3fab2730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f4d3fab24b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f4d3fab5d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4d3fab5ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f4d3faacae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f4d3fab19c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f4d3fab1740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f4d3faac2b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f4d3fab34d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4d3fb86ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f4d3fb83240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f4d3fab3cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f4d3fab61f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f4d3fab5390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f4d3fab1020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f4d3faaa4a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4d3faaa4a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f4d3faaad60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4d3faa7ac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4d3faaa4a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4d3faa7510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f4d3faa7830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4d3faaa4a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4d3fa83520" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4d3fff0600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3fa832a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4d3fa82030" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4d3fff0600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3fa83d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f4d3fa9cc50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4d3fb86ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f4d3fb83240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f4d3fa8b0e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f4d3fa8a070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f4d3fa8b8c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4d3ff30180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f4d3fa8c860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4d3ff30180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f4d3fa8c280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4d3ff30180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f4d3fa8c5d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4d3ff30560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f4d3fa7b120" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4d3fff0600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4d3fa88840" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4d3fff0600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4d3fa8e9b0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4d3fa88250" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4d3fa885a0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4d3fa85020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4d3fff0600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4d3fa86150" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4d3fa869c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4d3fa86d10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4d3fa8f7e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4d3fa8f020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f4d3fa90720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f4d3fa93db0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f4d3f969190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4d3f967350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4d3f969b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4d3f9698b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f4d3f96c8f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4d3f93f800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4d3f93b270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4d3f93f070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f4d3f93d9a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f4d3f93d720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f4d3f93d020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f4d3f942870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f4d3f93e810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f4d3f93e030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f4d3f7ec810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f4d3f7e80e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f4d3f7e8920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f4d3f7c1420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f7c2e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4d3f7c1190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f4d3f7bc700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f7bdd90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4d3f7bc110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4d3f7bc460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4d3f7bd020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4d3fff0600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f7bf970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4d3f7bfcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f4d3f7c2020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4d3fff0600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f7c49d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4d3f7c4d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4d3f7c0b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f7c0250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4d3f7c05a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4d3f7c08f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4d3f7a2a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4d3f7a20d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4d3f7a2460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3f7a27a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4d3f79e020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4d3f7a12a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4d3f7a1630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3f7a1970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4d3f7a1ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f4d3f7a48f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f4d3f7a4670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f4d3f6c4b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4d3f6c14e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f4d3f6bfaa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4d3f6f52b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4d3f6f6e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f4d3f6be6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f6be470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f4d3f6bdb30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f6bd8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f4d3f6bd020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4d3f6bc5f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f6bc370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f4d3f6b1020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f4d3f6b2750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f4d3f6aa740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f6aa4c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f4d3f6adcd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f4d3f6857c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f4d3f6912d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f4d3f69d020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4d3f712020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4d3f712860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4d3f6a0cf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4d3f712020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4d3f712860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f4d3f6933b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f4d3f69b530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4d3f70d020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4d3f70d860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4d3f69b2b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4d3f70d020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4d3f70d860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f4d3f68a9e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f4d3f686020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f4d3f69ca90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4d3f710ec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4d3f70f680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f4d3f69bd20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4d3f70d020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4d3f70d860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f4d3f697b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f4d3f697910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f4d3f6971f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f4d3f68a2b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f4d3f69c2a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4d3f710ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4d3f70f680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4d3f69c020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4d3f710ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4d3f70f680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f4d3f698020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f4d3f689190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f4d3f698a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f4d3f698780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f4d3f694480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f4d3f694c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f4d3f68c420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f4d3f68e190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f4d3f692350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f4d3f68cb60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f4d3f691ab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f4d3f6898b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f4d3f696390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4d3f718d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f4d3f7144d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f4d3f688070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f4d3f685020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f4d3f699700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f4d3f699480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f4d3f6842a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f684020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f4d3f69d800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4d3f712020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4d3f712860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f4d3f693b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f4d3f68f270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f4d3f68dba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4d3f6e1b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4d3f6e1730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4d3f68d920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4d3f6e1b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4d3f6e1730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f4d3f68eca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4d3f6f52b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4d3f6f6e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4d3f68ea20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4d3f6f52b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4d3f6f6e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f4d3f684ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f4d3f688860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f4d3f696ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f4d3f686780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f4d3f68f9e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f4d3f692b30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4d3f61d020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f4d3f5f79d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f4d3f608020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f4d3f5fd620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4d3f5fd3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f4d3f6115b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f4d3f5fac50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f4d3f6025e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f4d3f60a070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f4d3f607020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f4d3f60b020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f4d3f60cd30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f4d3f60d4b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f4d3f604020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f4d3f5fc550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f4d3f5f7270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f4d3f5fec30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f4d3f5f1350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f4d3f5ee9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f4d3f610420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f4d3f606740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f4d3f6031f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f4d3f60b8e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f4d3f612350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f4d3f5fe460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4d3f5fe1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f4d3f616c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f4d3f5fa4d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f4d3f5f5190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f4d3f5f0b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f4d3f5ee270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f4d3f5f9b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f4d3f5f58c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f4d3f5fddb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f4d3f5f3390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f4d3f610b40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f4d3f6017e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f4d3f5f47b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f4d3f5f8ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f4d3f603de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f4d3f603b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f4d3f5ef2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f4d3f5ffa60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f4d3f5f9420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f4d3f612e10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f4d3f6cd4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4d3f6cd080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4d3f612b90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f4d3f6cd4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4d3f6cd080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f4d3f606020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f4d3f60fcb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4d3f60fa30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f4d3f604980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4d3f604700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f4d3f5f3b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f4d3f60c620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f4d3f60f350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f4d3f5ff2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f4d3f5ff020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4d40ee7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f4d3f611ce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f4d3f5f4020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f4d3f5f8350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f4d3f5fccc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f4d3f601020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f4d3f602d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f4d3f607740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f4d3f60a7b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f4d3f5efa40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f4d3f60de30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4d3f60dbb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f4d3f5f1b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f4d3f608750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f4d3f5f0350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f4d3f54d020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f4d3f54d880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4d3f514dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f4d3f511020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4d3f514530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4d3f5136d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4d3f511950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f4d3f510b20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f4d3f5054c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4d3f50e490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4d3f505240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4d3f50e490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f4d3f507420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f4d3f506020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4d3f50e490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4d3f507ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4d3f50e490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f4d3f506930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f4d3f50e490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4d3f2fb5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4d3f2fb360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4d3f2e8b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f4d3f2e81c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f4d3f2e8530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3f2e8860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4d3f2e6880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4d3f2e62c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4d3f2e65f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d3f2ce530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3f2ce530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4d3f2ce770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3f2ce770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f4d3f2cd2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3f2ce770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4d3f2cd060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3f2ce770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f4d3f26a580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f4d3f256af0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4d3f256af0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4d3f256d30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3f256d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f4d3f251bc0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3f256d30"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3f251940" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f4d3f24fd80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3f24fb00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f4d3f253920" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3f2536a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4d3f2500c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3f256d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3f24ea80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f4d3f24ede0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4d3f256d30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f4d3f2329e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f4d3f232020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f4d3f232750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f4d3f2337f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f4d3f233020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4d3f236d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4d40ee7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f4d3f2475f0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4d40ee7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3f247370" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f4d3f2485f0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3f248370" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4d3f2445f0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3f244370" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4d3f2465f0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4d3f246370" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4d3ff20350"/>
                <typename><typedef-ref name="message_t" ref="0x7f4d3ff1f9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f4d3f0205e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4d3f0205e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f4d3f01c2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4d4083a020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4d408321b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4d3f0205e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f4d3f01c020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4d3f0205e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f4d3ee371f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4d40840090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
