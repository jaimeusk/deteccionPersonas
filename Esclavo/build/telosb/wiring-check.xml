<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2e14646cf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2e149d0c00"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2e149d0c00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2e14931110"/></to>
    </wire>
    <wire loc="27:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2e14643360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2e149190d0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2e149190d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2e14917c40"/></to>
    </wire>
    <wire loc="28:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7f2e14636820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e1457a980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e1457a980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2e14570050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7f2e14633cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e1424a260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e1424a260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2e14570050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2e145d4910"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2e1349ac30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2e1349ac30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2e12b50aa0"/></to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2e145c48d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2e134988b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2e134988b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2e12b4f720"/></to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f2e145b1a50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2e1353f360"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2e1353f360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2e14237cc0"/></to>
    </wire>
    <wire loc="34:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2e145b98f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2e1349a020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2e1349a020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2e12b52e60"/></to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2e145b4180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e13493910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2e13493910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e1353d5c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e145aac20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e14231610"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e14231610"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e141f8020"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e13611dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e1369ab70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e136ba750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e136d7080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e1382a620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e13921c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e140b67e0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e12cda020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e13df2020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e14161510"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e1456be50"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f2e14931780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f2e14e781e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f2e14e781e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f2e14a1d140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f2e149301d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e149cb0c0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e149cb0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e149be1a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149308d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f2e149c0130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f2e149be810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f2e149bc020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f2e149a5900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f2e149a5900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e1498c850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f2e149bc700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e149bf640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f2e149bcde0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e148ee600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e1498c850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e149721c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2e14983de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2e14972830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2e14af3c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2e14971af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14a1c040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f2e14a17490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f2e14c509a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e148ee600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e14917640"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f2e1490e1d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f2e14918d80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f2e14918d80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14671480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f2e149144d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f2e148f0020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f2e148f0020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e1465bb20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f2e149137f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f2e148ef380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f2e148ef380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e146541b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e1465f610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f2e148828a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f2e148828a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1472bb90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e14659de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f2e1487f020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f2e1487f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14725060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e14653480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f2e1487d8a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f2e1487d8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14720540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f2e148d3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147da060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f2e148ba710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147a3740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f2e14830d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14793540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f2e14835d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146f4060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f2e1485ed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1478eb90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f2e148b5710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14798060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f2e1489b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14762740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f2e1486d8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146ff540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f2e14859d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14782540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f2e14845d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14715060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f2e14826d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146ef540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f2e148ccd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147c9060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f2e14856580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1477db90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f2e148c7d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147bfb90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f2e148ade50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14788060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f2e14893020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14751540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f2e1487a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1471bb90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f2e14865020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146ef540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f2e148d8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147e5740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f2e148bf580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147aed10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f2e148a5710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14777060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f2e14860580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14793540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f2e1483d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14704060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f2e14828570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146ef540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f2e1484c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14730540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f2e148a0710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1476ddc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f2e148878a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14736060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f2e148728a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1470bb90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f2e1483ad40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146ff540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f2e14854d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14741540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f2e148d1d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147d4540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f2e148b8e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1479eb90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f2e148788a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14715060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f2e148b3e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14793540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f2e14898020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1475db90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f2e1486a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146fab90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f2e1484fd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14736060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f2e148db530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1481ed10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f2e148c4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147b9060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f2e148aa710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14782540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f2e148918a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1474cb90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f2e1484ad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14777060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f2e14842570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14710540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f2e14832570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146ef540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f2e1488c8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14741540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f2e14847580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14772540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f2e148d6d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147e0b90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f2e148bde50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147a8260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f2e148a3e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14772540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f2e14851580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1473cb90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f2e14837570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146fab90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f2e1489d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14767260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f2e14884020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14730540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f2e1486f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14704060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f2e148ce580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147cfb90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f2e14874020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14710540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f2e148c9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147c4540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f2e148af710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1478eb90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f2e148968a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14756060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f2e148688a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146f4060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f2e148e9d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147ea260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f2e148c2d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e147b4540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f2e148a8e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1477db90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f2e1488e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14746060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f2e14840d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1470bb90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f2e1482d560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14788060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f2e1485b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14788060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f2e14889020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1473cb90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f2e1482bd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e146f4060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f2e14823580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e1471bb90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f2e148638f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2e14798060"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f2e14570050"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2e14567c30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f2e14567c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e142728e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e1456be50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e14320020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e142728e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e12ec4db0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f2e1455d500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2e14263020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e14320020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e130bab10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f2e1426b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e142f32f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2e142ee850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2e14320870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2e14320870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2e130b3890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2e14259300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2e143998c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2e143998c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2e1437ccf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e130bab10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e1309b660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f2e130ac0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2e130b94f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2e130b94f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2e1309a020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2e130afc00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2e143998c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e13096190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e130a2340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e130a2340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1452d990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e13095770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e130a1a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e130a1a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1452a720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e13094a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e130a0da0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e130a0da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e145281d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1452d990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2e145149e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f2e145149e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144be260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1452a720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f2e14512280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f2e14512280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2e1445c6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e145281d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f2e14511700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f2e14511700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2e1445bac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1452d990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2e145149e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1452a720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f2e1450ca50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f2e1450ca50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2e1444c220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e145281d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f2e1450a020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f2e1450a020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2e1444b610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1452d990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2e145149e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1452a720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f2e14509d40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f2e14509d40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2e144446d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e145281d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f2e14507160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f2e14507160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2e14443ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1452d990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2e145149e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1452a720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f2e14505020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f2e14505020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2e1443db30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e145281d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f2e14504570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f2e14504570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2e1443b020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1452d990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2e145149e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1452a720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f2e145025a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f2e145025a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2e14434220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e145281d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f2e14501a20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f2e14501a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2e14433610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1452d990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2e145149e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1452a720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f2e144ff8c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f2e144ff8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2e1442d6d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e145281d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f2e144fdd40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f2e144fdd40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2e1442cac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f2e14517730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2e14463220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f2e14519700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e1446acb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f2e14506020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e144427a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f2e1451f890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2e1446a020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f2e144fcae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e1442b7a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f2e145230c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2e144b86d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f2e1450da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e14452cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f2e1450ebb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2e14452020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f2e1450f730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2e14454b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f2e14515a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e144612f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f2e14503570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e1443bcb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f2e14516bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2e14462610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f2e14527830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144c63e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f2e14520410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2e1446cb30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f2e1451a410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e144717a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f2e1450ada0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e1444a2f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f2e14522570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2e14472ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f2e14500890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e144322f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f2e14510700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e144597a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f2e144c32f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144c4bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2e144c3940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f2e144233f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2e144c2020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f2e14423b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e14470610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144c63e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2e1446fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144c4bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e14468b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144c63e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2e144662f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144c4bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e14460160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144c63e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2e1445f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144c4bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f2e144bc100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144bda60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2e144bc750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f2e14422430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2e144bcda0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f2e14422bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e14458610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144be260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2e14457c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144bda60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e14451b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144be260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2e1444f2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144bda60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e14448160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144be260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2e144477a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144bda60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e14441610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144be260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2e14440c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144bda60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e14439b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144be260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2e144372f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144bda60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e14431160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144be260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2e144307a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144bda60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e1442a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2e144be260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2e14428c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2e144bda60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f2e1435e0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2e143978e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2e143978e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2e14390b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e14382c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2e145149e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f2e142ea9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f2e12ebd3d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f2e1426b020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f2e12eb7a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f2e14266450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f2e12eb85d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f2e149c0130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f2e12eb6100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2e14237cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2e1420a020"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2e1420a020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2e13604b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e142292c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e135cd8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f2e1421d1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f2e135cece0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2e142328f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2e135cfa80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2e14236d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2e135d3020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f2e14234c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f2e135d2df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e141f8020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e137aa670"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e14218130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e141f6080"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e141f6080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e13604080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2e14234020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e135d2210"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e1422f080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e141f7020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e141f7020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2e137a76e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f2e1420f430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f2e141f6b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f2e141f6b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f2e135f0020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2e142332d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2e135d0470"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2e14225170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2e141f79d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2e141f79d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2e137a6a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f2e135c50f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e14209530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2e135cc860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f2e14202a70"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f2e14202a70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f2e1366dc90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2e135cb690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f2e141fb840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f2e141fb840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f2e1366ca50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2e135c74d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2e139d8b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e135cbce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e137aa670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e137aa670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e1379cd20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e135cab70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e137a60c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e137a60c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e13798640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f2e135c9610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f2e1416adc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f2e1416adc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f2e14160970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f2e135c61f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e141f0330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e141f0330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e141ea7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2e135c5d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2e149190d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2e13604b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f2e13601d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2e137a6a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2e13797020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f2e135f0020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f2e135ee410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f2e1366dc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f2e13662a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e13604080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e135fd2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f2e14203690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e1366d5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2e1366d5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f2e13662370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2e137a76e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2e13799c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e14209530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e1366fbe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e1366fbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e136657b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f2e141fa940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2e1366e8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2e1366e8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f2e136644d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f2e14203d50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f2e1366b170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f2e1366b170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f2e13660020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f2e1366ca50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f2e13661840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f2e13601d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2e141f2390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2e141f2390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2e141efe70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2e1366a6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2e136bf220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2e136bf220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2e136bda10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2e136be020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2e135f3350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2e135f3350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2e135f0d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2e135f0d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2e13608ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2e13608ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2e13602860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2e13602860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2e141f2e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2e141f2e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2e141eb990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2e1366a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e13605980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2e13605980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2e13601690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2e13601690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e136a1aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2e136a1aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e1369de30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2e1369e950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e141f1b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2e141f1b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e1382f7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2e1382f7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e13827020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e141e9640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e1417a950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e1417a950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e14161b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f2e141e1b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f2e14175bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f2e14175bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f2e1415e740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f2e141dd760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2e1392f6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f2e141dd760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2e138325c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2e138325c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2e1382aca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2e1392f6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2e1391f320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f2e141d62a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f2e1392c020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f2e1392c020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2e1391fbc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f2e141df060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e1392ccb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e1392ccb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e1391e970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e141d4330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e137aa670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e141cc920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e137a60c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2e141d3420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2e136dda20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2e136dda20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2e136d6a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f2e141cf110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2e136dfaa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f2e136dfaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2e13df61d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2e141d3bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2e149190d0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f2e141c2b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f2e141c3ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f2e141c4c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f2e141670c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f2e1415db40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f2e14159a10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f2e140b2220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f2e140b2220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f2e140acaf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f2e14155c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f2e1406ee60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f2e1406ee60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e1405f630"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f2e14154e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f2e140696a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f2e140696a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e1404e630"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f2e141520f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f2e14067ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f2e14067ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14043020"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f2e1414dc00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f2e14029400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f2e14029400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f2e13ec8680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f2e1413a520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13a62e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e13a62e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13e764d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2e14139570"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f2e13a5f7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2e13a5f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2e14139c80"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f2e13a5dae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2e13a5dae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2e1413bd70"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f2e13a60ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2e13a60ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e1413b450"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e13a5c160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e13a5c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2e14140420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f2e13a54870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2e13a54870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2e14140cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f2e13a52880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2e13a52880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2e141475d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f2e13a500a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2e13a500a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e1413f020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e13a59e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e13a59e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e1413f8f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e13a57670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e13a57670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2e14143e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f2e13a44500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2e13a44500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2e141434a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f2e13a45ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2e13a45ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e1413e1e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e13a55e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e13a55e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2e1413ea80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f2e13a57e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2e13a57e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2e1413d3c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f2e13a56e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2e13a56e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f2e14137180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13a32a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e13a32a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13e764d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f2e141383d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13a059e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e13a059e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13e764d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2e14148390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2e139d8b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2e14159020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2e139d7d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2e139d7d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2e139bc310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f2e1412cca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f2e1412edb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e140b67e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e140ac260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e140ac260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e12e60720"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f2e140acaf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2e12e5f020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e12e60720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e12e59760"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2e12e5f020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2e12e521d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e12e59760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e12e3c340"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f2e12e4cb90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2e12e58020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2e12e58020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2e12e3cbd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2e12e4e690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2e14096080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2e14096080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2e14091cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e12e39dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e12e43e70"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e12e43e70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1452d990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e12e36440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e12e405d0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e12e405d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1452a720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e12e35760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e12e3f8f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e12e3f8f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e145281d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f2e1408e0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2e143978e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f2e1406c090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e1405ab00"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f2e1406b390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14054020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f2e140b4b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14064020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f2e140689b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14049af0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e140632f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f2e148d3580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e1405e7a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f2e1489b8a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e14059c60"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f2e148d6d50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e140532f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f2e148db530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e1404d7a0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f2e148918a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e14048c60"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f2e1489d020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e140422f0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f2e14893020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f2e14025700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2e14022c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f2e14028060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f2e13eb9b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1400b760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f2e1450f730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f2e1400aa80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f2e1450da20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14008930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f2e1489d020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f2e13ec72f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f2e13ff63f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f2e13ff63f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f2e13fdf3f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f2e13eb87a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f2e13ff95e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f2e13ff95e0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f2e13fe77a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f2e13fea3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f2e13fd33f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f2e13ff3d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f2e13fdcd50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f2e13ff03f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f2e13fd93f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f2e13ffebc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f2e13fe2d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f2e13fedd50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f2e13fd6d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f2e13ff5710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f2e13fde710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f2e13fe9710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f2e13fd2710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f2e13fef710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f2e13fd8710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f2e13ff7020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f2e13fe0020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f2e13feb100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f2e13fd4100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f2e13ff4a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f2e13fdda30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f2e13ff1020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f2e13fda020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f2e13fff8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f2e13fe3a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f2e13feea30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f2e13fd7a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f2e13a5f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e13a53880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f2e13a4b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f2e13a520a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2e13a3f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2e13a41500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2e13a5d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f2e13a47880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e13a42500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f2e13a4d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f2e13a4e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13a61a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13e74350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13e74350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13e6c660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e13a5ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2e13a5b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2e13a46c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f2e13a5bbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e13a42ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f2e13a470a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f2e13a56670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f2e13a480a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f2e13a4b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f2e13a48880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2e13a40ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2e13a41ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f2e13a4e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f2e13a490a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f2e13a44ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f2e13a50880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2e13a3fce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2e13a60480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f2e13a59670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f2e13a55670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f2e13a4c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f2e13a4c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e13a530a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2e13a5a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f2e13a59020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e13a5c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2e13a45500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f2e13a40500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f2e13a4d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f2e13a49880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2e13a5fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f2e13a4f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2e13a5a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f2e13a4f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f2e13a460a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2e13a3e9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e6a890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e69ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e68a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e13e764d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13e6b510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e668b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f2e13e5ab40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2e13dfb770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f2e13dfb770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2e13df61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f2e13e65060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13dd9c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e13dd9c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e12d61940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f2e13e62c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f2e13dd88f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f2e13dd88f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f2e12d60d70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f2e13e5a2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f2e13a8a020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f2e13a8a020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f2e12d5d020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2e13e61a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2e149190d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f2e13e56bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f2e13df61d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2e13df2b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f2e12d5d020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f2e13d71850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f2e12d60d70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f2e13d72110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e12d61940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13d78d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e12d605d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e12d55020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e12d55020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e13bf32c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f2e13d72110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f2e13cf6a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f2e12d5e410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f2e13d72790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f2e13d72790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f2e13cf5060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2e13d6ca40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2e12d5d7c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e12d45760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13d6f8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f2e13d6d690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e12d56340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e12d56340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13bf4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2e13d68b40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2e12d50c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2e12d50c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f2e13bf64d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13d6f8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13cf6250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f2e13d71850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f2e13cf5c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e13d78d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13cf7470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2e13cf33e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2e13d6ca40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f2e13cf45b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f2e13d6d690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2e13ced480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2e13d68b40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f2e13cf3a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2e13ce3020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2e13ce3020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f2e13cda700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2e13cedc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2e149190d0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f2e13ceb2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2e13cdb2c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2e13cd5c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2e13cdfd10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f2e13cd52d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f2e13ca6bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f2e14860580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f2e13ca33e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f2e1485ed50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f2e13ca1bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f2e1485b580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f2e13c9e3e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f2e14856580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f2e13c9cbb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f2e14859d50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f2e13cacd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f2e13b49d40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2e12d4d440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2e13bf53f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2e12d4da50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2e13b51020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2e13b51020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f2e13b49d40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2e12d54020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2e13ce3020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e12d557c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e13bf3ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e13bf3ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e13b5ce80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13bf28a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e12d45760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e13bf32c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e13b5da60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e13b5da60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e12cd76c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f2e13bf64d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f2e13befd60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e13bf4020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13b5eca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e13b5eca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e12cd8850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2e13bf53f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2e13bee710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e13b5ce80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e12cd5a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13b5b790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13bf28a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e13bddbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e13b5ce80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f2e13beed80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2e13cdfd10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f2e13bdd5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2e13cdb2c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2e13b5c270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2e12cd7e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e12cd49d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13b5b790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f2e12cd42d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f2e13b5a020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2e12cd32b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f2e12cda630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f2e12cd1480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f2e13b40bb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f2e13cda700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f2e13b3b700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f2e14860580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f2e13b39e40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f2e1485b580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e13a25c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f2e13a2fda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e13a28b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e13a22670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f2e13a1be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f2e13a22e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2e13a0e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2e13a112f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2e13a2d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f2e13a16670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e13a122f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2e13a27c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2e13a26c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f2e13a1c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f2e13a1fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2e13a21670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13a30760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13e74350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e13a2caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2e13a2a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2e13a15a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f2e13a2a870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e13a12ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e13a2ddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f2e13a18e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f2e13a26480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e13a27480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2e13a2f750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f2e13a19e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f2e13a1a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f2e13a18670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2e13a0fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2e13a11ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f2e13a1d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f2e13a1ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f2e13a13ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f2e13a20670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2e13a0ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2e13a2f100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f2e13a28370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f2e13a25480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f2e13a1ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2e13a21e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f2e13a1b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2e13a23670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2e13a2e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e13a23e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2e13a29020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f2e13a29cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2e13a132f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2e13a14ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e13a2c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2e13a142f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f2e13a0f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f2e13a1de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f2e13a19670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2e13a2eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2e13a2d770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f2e13a20e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2e13a29670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f2e13a1f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f2e13a16e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2e13a0d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e139f8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f2e13a03da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e139fcb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e139f6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f2e139efe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f2e139f6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2e139e22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2e139e42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2e13a00120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f2e139ea670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e139e52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2e139fac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2e139f9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f2e139f0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f2e139f2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2e139f4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13a04760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13e74350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e139ffaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2e139fe120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2e139e9a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f2e139fe870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e139e5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e13a00dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f2e139ebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f2e139f9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e139fa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2e13a03750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f2e139ece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f2e139ed670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f2e139eb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2e139e3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2e139e4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f2e139f1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f2e139ede50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f2e139e6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f2e139f3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2e139e2ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2e13a03100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f2e139fc370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f2e139f8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f2e139f0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2e139f4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f2e139ef670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2e139f7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2e13a02450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e139f7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2e139fd020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f2e139fdcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2e139e62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2e139e8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e139ff450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2e139e82f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f2e139e32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f2e139f1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f2e139ec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2e13a02aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2e13a00770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f2e139f3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2e139fd670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f2e139f2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f2e139eae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2e139e17a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f2e139b9880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f2e139ae020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f2e139ae020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f2e139a9140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f2e139a4bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f2e139adc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f2e139adc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f2e13990150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f2e139a8530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2e1393b1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f2e13994540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f2e13995590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f2e13995590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2e139449e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f2e1398b950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f2e13992ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f2e13992ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f2e13968a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f2e139909f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f2e13994540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2e13958020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f2e13952530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f2e13952530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2e1394ee50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1394b020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f2e14527830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e13943c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f2e148bf580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f2e13928990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f2e1391d900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f2e1392a150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f2e1391c0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f2e1391cae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f2e140b2220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f2e13907690"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f2e140b4b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f2e139019b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f2e1406ee60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f2e13900cd0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f2e140689b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f2e13908a80"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f2e14025700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f2e138fe020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13862c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e13862c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13e764d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e138fed10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e138618f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e138618f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13e74350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2e138fa6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f2e138602f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2e138602f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2e138fade0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f2e1385fcc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2e1385fcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2e138f9530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f2e1385e370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2e1385e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e138f9c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e1385dd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e1385dd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2e138fbe00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f2e13856c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2e13856c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2e138fd780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f2e1383e7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2e1383e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e138fb550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e138432f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e138432f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e138f83e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e13858480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e13858480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e138f75e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e13854e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e13854e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e138f6020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e13853670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e13853670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2e138f8e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f2e1385a7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2e1385a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2e138f59c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f2e13840ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2e13840ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2e138f6890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f2e138412f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2e138412f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2e138f5130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f2e13841ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2e13841ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f2e138f0d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f2e13832df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f2e13832df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f2e13828550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e13916d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e137aa670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e13915bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e137a60c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2e1390ec60"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2e137a5550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2e137a5550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2e13797a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2e13902e80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2e1379d480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2e1379d480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2e1378f8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2e138f36c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2e149190d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e13855c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f2e1385f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e13859c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f2e1384ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f2e13853e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2e1383f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f2e13847670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2e13858c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f2e1384d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f2e1384fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2e13852670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2e1385b370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2e13846a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f2e1385bac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e13843ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e1385d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f2e13848e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f2e13856480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2e13860940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f2e1384ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f2e1384b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f2e13848670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f2e1384e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f2e1384be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f2e13844ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f2e13851670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2e1383fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f2e13859490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f2e13855480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f2e1384de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2e13852e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f2e1384c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2e13854670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2e1385f670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2e1385a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f2e1385ae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2e138442f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2e13845ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e1385d6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2e138452f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f2e138402f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f2e1384ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f2e1384a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2e1385e9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f2e13851e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f2e1384f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f2e13847e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f2e1382e020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f2e138277c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2e13812150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2e149190d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f2e13826020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f2e1406ee60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f2e13825380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f2e1406c090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f2e138246b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f2e1406b390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f2e13823a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f2e14028060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f2e138226e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e1372dd00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2e1372dd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2e13e764d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2e13821530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f2e13709ad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2e13709ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e13820ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e137276b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e137276b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2e138203a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f2e13726370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2e13726370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e1381f330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e137aa670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e1381e1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e137a60c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2e1381cd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2e137a5550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f2e1381eb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f2e1416adc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e138173e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e1371ee50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e1371ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e13817cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e1371d670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e1371d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2e13818b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f2e13724160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2e13724160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2e138156d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f2e137092f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2e137092f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2e13816590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f2e1370c2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2e1370c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2e13816e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f2e1370cad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2e1370cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e13814020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e1370dad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e1370dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2e138148b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f2e1372a300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2e1372a300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f2e138079d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2e137a1660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2e13793af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2e13739300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2e14096080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f2e1378d3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2e1373b020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f2e1378c6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2e1455d500"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2e13735450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2e14570050"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e13720c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f2e13729020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e13723c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f2e13716e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f2e1371de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2e13728370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f2e13711670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e1370d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2e13722c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2e13721c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f2e13717670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f2e1371ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2e1371c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e1372b970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13e74350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e13727d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2e13710a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f2e13726ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e13727060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f2e13713e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f2e13721480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e13722480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2e1372a950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f2e13714e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f2e13715670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f2e13713670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2e1370bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f2e13719670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f2e13715e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f2e1370ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f2e1371b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f2e13723490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f2e13720480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f2e13717e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2e1371ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f2e13716670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2e1371e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2e13729670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f2e13724e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2e1370e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2e1370fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2e1370f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f2e1370b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f2e13719e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f2e13714670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2e13729cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2e137289c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f2e1371be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2e137247b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f2e1371a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f2e13711e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2e137087a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f2e136da920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f2e136d7940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2e136e1990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2e136d7080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2e136bae60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2e136be020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f2e136b9ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2e136bb690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f2e136bb690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2e13df61d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2e136b88f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2e136dda20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e136b7170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e137a60c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f2e1369e200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f2e1369a570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2e136983f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2e1369e950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e13698a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e137a60c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2e13660d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2e1366a6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2e1365fb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2e1366a020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e1365e2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e137aa670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e1365d170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e137a60c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2e1365db70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f2e13610410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f2e13631db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f2e13603800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2e135ff580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f2e135ff580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2e13df61d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e135eb1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e141f7020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2e1353e3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2e14236d20"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f2e1353b1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f2e14234c00"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2e1353b7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2e142328f0"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2e13538a20"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2e137a5550"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e1352e890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e14218130"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2e1353d5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2e14234020"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e13539b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e1422f080"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2e1353a470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2e142332d0"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2e13532af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2e137a1660"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2e12b52e60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2e12b447f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2e12b50aa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2e1353b7e0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2e12b4f720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2e1353a470"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2e13496020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2e12b4eda0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2e12b4eda0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e13539b20"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2e12b435f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2e13501930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2e12b42270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2e1353a470"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2e13501930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2e134b0df0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2e134ae400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2e1353e3f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2e134ad060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2e1353a470"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2e134ac720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2e1353b7e0"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f2e134ab480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f2e134abc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2e1348d020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2e1353b7e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2e1348dc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2e1353a470"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="8:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e142e5530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149d9640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2e149d99b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149d9640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2e149d99b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f2e1481d1d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f2e1481d580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f2e1481d930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f2e1481dce0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f2e1481c0d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f2e144f7930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f2e144f7cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f2e144f60d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f2e144f6450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f2e144f67d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f2e144f6b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f2e144f5020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f2e144f53b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f2e144f5780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f2e144bac80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f2e144b70d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f2e143d4cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f2e143d4cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f2e14391a40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f2e14391a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f2e1437b570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f2e1437b570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f2e1437bd40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f2e1437bd40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f2e1437a160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f2e1437a160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f2e1437a940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f2e1437a940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f2e1437ad10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f2e14379540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f2e14379540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f2e1435a6d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f2e1435a6d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f2e14357020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f2e14357020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f2e14357410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f2e14357410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f2e14357bf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f2e14357bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f2e14356020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e1431bcc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e1431bcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e142e5530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e142e5530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f2e142e5880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e142d6980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e142d6980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f2e142d6cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e14262550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e14262550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f2e13bd75e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f2e13bcc9b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f2e13bb1cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e13966020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e13966020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2e139667b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e139667b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f2e13526660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f2e1351c360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f2e135150d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f2e134fcc80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f2e13492330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f2e149ce160" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149ce160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e149ce4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f2e149d0c00" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2e149d0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2e149cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e149cb0c0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e149cb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e149cb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f2e149c0130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f2e149c0130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f2e149ca1b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f2e149ca340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f2e149c07d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f2e149c0960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f2e149c0af0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f2e149c0c80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f2e149c0e10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f2e149ca020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f2e149c04b0"/>
        <function-ref name="node_id" scoped="" ref="0x7f2e149c0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f2e149bc700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f2e149bc700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e149bca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e149be1a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e149be1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e149be520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f2e149bc020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f2e149bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e149bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f2e149bcde0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f2e149bcde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e149bb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f2e149be810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f2e149be810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f2e149bd980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f2e149bdb10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f2e149bd020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f2e149bd1b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f2e149bd340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f2e149bd4d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f2e149bd660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f2e149bd7f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f2e149beb90"/>
        <function-ref name="node_id" scoped="" ref="0x7f2e149bed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e149bf640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e149bf640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e149bf9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f2e149a5900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f2e149a5900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e149a5c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f2e14983de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2e14983de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2e14988c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2e14988310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2e149884a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2e14988630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2e14988180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2e149887c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2e14988950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2e14988ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e1498c850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e1498c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e1498cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f2e14972830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2e14972830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2e149717f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2e14972d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2e14971020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2e149711b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2e14972bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2e14971340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2e149714d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2e14971660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f2e14971af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2e14971af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f2e14971e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e149721c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e149721c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e14972540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f2e14af3c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2e14af3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f2e14cce0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f2e14c509a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f2e14c509a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f2e14c50d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f2e14d6b020"/>
        <function-ref name="sleep" scoped="" ref="0x7f2e14d6b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f2e14b913d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f2e14b913d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f2e14b91750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f2e1498a8b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2e1498a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2e1493d7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2e1498adc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2e1493d020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2e1493d1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2e1498ac30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2e1493d340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2e1493d4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2e1493d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f2e149308d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2e149308d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e14930c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f2e14931110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2e14931110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2e14931490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f2e149301d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f2e149301d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e14930550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f2e14931780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2e14931780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e14931b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2e14931c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2e14931e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2e14e6b940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14e6b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e14e6bcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e14e6be50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f2e14e781e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2e14e781e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e14e78560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2e14e786f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2e14e78880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2e14a1c040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f2e14a1c040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e14a1c3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e14a1c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f2e14a17490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f2e14a17490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f2e14a17810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f2e14a179a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f2e14a17b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f2e14a1d140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2e14a1d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e14a1d4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2e14a1d650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2e14a1d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2e149190d0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e149190d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e14919450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e149195e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e14919770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e14919900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e14919a90"/>
        <function-ref name="get" scoped="" ref="0x7f2e14919c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e14919db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e149244d0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14924020"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e149241b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e14924340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f2e1490e1d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f2e1490e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1490e550"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1490e6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1490e870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1490ea00"/>
        <function-ref name="get" scoped="" ref="0x7f2e1490eb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1490ed20"/>
        <function-ref name="set" scoped="" ref="0x7f2e14914020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e149141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e14917640" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e14917640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e149179c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f2e149144d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f2e149144d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14914850"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e149149e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14914b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14914d00"/>
        <function-ref name="get" scoped="" ref="0x7f2e14913020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e149131b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14913340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e149134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2e14917c40" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e14917c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e14916020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e149161b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e14916340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e149164d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e14916660"/>
        <function-ref name="get" scoped="" ref="0x7f2e149167f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e14916980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e14915020"/>
        <function-ref name="set" scoped="" ref="0x7f2e14916b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e14916ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e14916e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f2e149137f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f2e149137f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14913b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14913d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1490d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1490d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1490d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1490d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1490d660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1490d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f2e14918d80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f2e14918d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148f1180"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148f1310"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148f14a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148f1630"/>
        <function-ref name="get" scoped="" ref="0x7f2e148f17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148f1950"/>
        <function-ref name="set" scoped="" ref="0x7f2e148f1ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148f1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f2e148f0020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f2e148f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148f03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148f0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148f06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148f0850"/>
        <function-ref name="get" scoped="" ref="0x7f2e148f09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148f0b70"/>
        <function-ref name="set" scoped="" ref="0x7f2e148f0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f2e148ee600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e148ee600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e148ee980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f2e148ef380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f2e148ef380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148ef700"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148ef890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148efa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148efbb0"/>
        <function-ref name="get" scoped="" ref="0x7f2e148efd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148ee020"/>
        <function-ref name="set" scoped="" ref="0x7f2e148ee1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f2e148d3580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f2e148d3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148d3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148d3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148d3c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148d1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148d21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148d2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148d24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148d2660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148d27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148d2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148d2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148d2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148d1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148d11b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148d1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148d14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148d3db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148d1660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f2e148ba710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f2e148ba710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148baa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148bac20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148badb0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148b8a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148b91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148b9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148b94d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148b9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148b97f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e148b9980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148b9b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148b9ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148b9e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148b8120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148b82b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148b8440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148b85d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148b9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148b8760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148b88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f2e14830d30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f2e14830d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1482f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1482f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1482f400"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1482d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1482f720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1482f8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1482fa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1482fbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1482fd60"/>
        <function-ref name="get" scoped="" ref="0x7f2e1482e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1482e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1482e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1482e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1482e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1482e8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1482ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1482ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1482f590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1482eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1482d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f2e14835d40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f2e14835d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148340e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14834270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14834400"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148321b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14834720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148348b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14834a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14834bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14834d60"/>
        <function-ref name="get" scoped="" ref="0x7f2e14833020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148331b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14833340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148334d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14833760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148338f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14833a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14833c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14834590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14833da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14832020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f2e1485ed50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f2e1485ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1485d100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1485d290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1485d420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1485b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1485d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1485d8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1485da60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1485dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1485dd80"/>
        <function-ref name="get" scoped="" ref="0x7f2e1485c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1485c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1485c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1485c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1485c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1485c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1485ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1485cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1485d5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1485cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1485b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f2e148b5710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f2e148b5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148b5a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148b5c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148b5db0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148b3a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148b41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148b4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148b44d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148b4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148b47f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e148b4980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148b4b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148b4ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148b4e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148b3120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148b32b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148b3440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148b35d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148b4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148b3760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f2e1489b8a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f2e1489b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1489bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1489bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1489a020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14899c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1489a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1489a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1489a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1489a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1489a980"/>
        <function-ref name="get" scoped="" ref="0x7f2e1489ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1489aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1489ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14899020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148992b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14899440"/>
        <function-ref name="set" scoped="" ref="0x7f2e148995d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14899760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1489a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148998f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14899a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f2e148828a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f2e148828a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14882c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14882db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14881020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14880c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14881340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148814d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14881660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148817f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14881980"/>
        <function-ref name="get" scoped="" ref="0x7f2e14881b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14881ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14881e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14880020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148802b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14880440"/>
        <function-ref name="set" scoped="" ref="0x7f2e148805d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14880760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148811b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148808f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14880a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f2e1486d8a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f2e1486d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1486dc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1486ddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1486c020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1486bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1486c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1486c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1486c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1486c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1486c980"/>
        <function-ref name="get" scoped="" ref="0x7f2e1486cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1486cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1486ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1486b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1486b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1486b440"/>
        <function-ref name="set" scoped="" ref="0x7f2e1486b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1486b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1486c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1486b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1486ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f2e14859d50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f2e14859d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14858100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14858290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14858420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148561b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14858740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148588d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14858a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14858bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14858d80"/>
        <function-ref name="get" scoped="" ref="0x7f2e14857020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148571b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14857340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148574d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14857760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148578f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14857a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14857c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148585b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14857da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14856020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f2e14845d40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f2e14845d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148440e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14844270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14844400"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148421b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14844720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148448b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14844a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14844bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14844d60"/>
        <function-ref name="get" scoped="" ref="0x7f2e14843020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148431b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14843340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148434d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14843760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148438f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14843a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14843c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14844590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14843da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14842020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f2e14826d50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f2e14826d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14825100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14825290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14825420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14825740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148258d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14825a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14825bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14825d80"/>
        <function-ref name="get" scoped="" ref="0x7f2e14824020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148241b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14824340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148244d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14824760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148248f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14824a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14824c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148255b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14824da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14823020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f2e148ccd50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f2e148ccd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148cb100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148cb290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148cb420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148c91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148cb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148cb8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148cba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148cbbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148cbd80"/>
        <function-ref name="get" scoped="" ref="0x7f2e148ca020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148ca1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148ca340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148ca4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148ca760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148ca8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148caa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148cac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148cb5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148cada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f2e14856580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f2e14856580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14856900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14856a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14856c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14854980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14855020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148551b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14855340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148554d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14855660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148557f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14855980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14855b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14855ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14854020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148541b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14854340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148544d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14856db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14854660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148547f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f2e148c7d50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f2e148c7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148c6100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148c6290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148c6420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148c41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148c6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148c68d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148c6a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148c6bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148c6d80"/>
        <function-ref name="get" scoped="" ref="0x7f2e148c5020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148c51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148c5340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148c54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148c5760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148c58f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148c5a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148c5c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148c65b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148c5da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f2e148ade50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f2e148ade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148ac210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148ac3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148ac530"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148aa340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148ac850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148ac9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148acb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148acd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148ab020"/>
        <function-ref name="get" scoped="" ref="0x7f2e148ab1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148ab340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148ab4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148ab660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148ab8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148aba80"/>
        <function-ref name="set" scoped="" ref="0x7f2e148abc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148abda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148ac6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148aa020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f2e14893020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f2e14893020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148933a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14893530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148936c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148914d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148939e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14893b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14893d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14892020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148921b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14892340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148924d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14892660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148927f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14892a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14892c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14892da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14891020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14893850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148911b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14891340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f2e1487a020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f2e1487a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1487a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1487a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1487a6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148784d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1487a9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1487ab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1487ad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14879020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148791b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14879340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148794d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14879660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148797f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14879a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14879c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14879da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14878020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1487a850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148781b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14878340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f2e14865020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f2e14865020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14865530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148656c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148634d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148659e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14865b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14865d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14864020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148641b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14864340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148644d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14864660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148647f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14864a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14864c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14864da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14863020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14865850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148631b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14863340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f2e148d8580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f2e148d8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148d8900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148d8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148d8c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148d6980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148d7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148d74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148d7660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148d77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148d7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148d7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148d7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148d6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148d61b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148d6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148d64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148d8db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148d6660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f2e148bf580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f2e148bf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148bfa00"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148bfb90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148bfd20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148bda80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148be1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148be340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148be4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148be660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148be7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e148be980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148beb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148beca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148bee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148bd120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148bd2b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148bd440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148bd5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148be020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148bd760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f2e148a5710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f2e148a5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148a5a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148a5c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148a5db0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148a3a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148a41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148a4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148a44d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148a4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148a47f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e148a4980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148a4b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148a4ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148a4e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148a3120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148a32b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148a3440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148a35d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148a4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148a3760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148a38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f2e14860580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f2e14860580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14860900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14860a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14860c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1485e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1485f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1485f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1485f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1485f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1485f660"/>
        <function-ref name="get" scoped="" ref="0x7f2e1485f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1485f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1485fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1485fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1485e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1485e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1485e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1485e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14860db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1485e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1485e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f2e1483d570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f2e1483d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1483d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1483da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1483dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1483a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1483b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1483b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1483b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1483b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1483b660"/>
        <function-ref name="get" scoped="" ref="0x7f2e1483b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1483b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1483bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1483bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1483a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1483a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1483a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1483a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1483dda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1483a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1483a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f2e14828570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f2e14828570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148288f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14828a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14828c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14826980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14827020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148271b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14827340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14827660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148277f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14827980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14827b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14827ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14826020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148261b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14826340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148264d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14828da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14826660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148267f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f2e1484c580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f2e1484c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1484c900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1484ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1484cc20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1484a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1484b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1484b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1484b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1484b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1484b660"/>
        <function-ref name="get" scoped="" ref="0x7f2e1484b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1484b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1484bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1484bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1484a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1484a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1484a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1484a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1484cdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1484a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1484a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f2e148a0710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f2e148a0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148a0c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148a0e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1489f020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1489ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1489f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1489f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1489f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1489f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1489f980"/>
        <function-ref name="get" scoped="" ref="0x7f2e1489fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1489fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1489fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1489e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1489e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1489e440"/>
        <function-ref name="set" scoped="" ref="0x7f2e1489e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1489e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1489f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1489e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1489ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f2e148878a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f2e148878a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14887c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14887db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14886020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14885c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14886340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148864d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14886660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148867f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14886980"/>
        <function-ref name="get" scoped="" ref="0x7f2e14886b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14886ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14886e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14885020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148852b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14885440"/>
        <function-ref name="set" scoped="" ref="0x7f2e148855d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14885760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148861b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148858f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14885a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f2e148728a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f2e148728a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14872c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14872db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14871020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14870c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14871340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148714d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14871660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148717f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14871980"/>
        <function-ref name="get" scoped="" ref="0x7f2e14871b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14871ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14871e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14870020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148702b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14870440"/>
        <function-ref name="set" scoped="" ref="0x7f2e148705d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14870760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148711b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148708f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14870a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f2e1483ad40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f2e1483ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148390e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14839270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14839400"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148371b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14839720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148398b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14839a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14839bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14839d60"/>
        <function-ref name="get" scoped="" ref="0x7f2e14838020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148381b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14838340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148384d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14838760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148388f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14838a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14838c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14839590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14838da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14837020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f2e14854d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f2e14854d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148530e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14853270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14853400"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148511b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14853720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148538b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14853a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14853bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14853d60"/>
        <function-ref name="get" scoped="" ref="0x7f2e14852020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148521b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14852340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148524d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14852760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148528f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14852a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14852c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14853590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14852da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14851020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f2e148d1d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f2e148d1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148d0100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148d0290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148d0420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148ce1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148d0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148d08d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148d0a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148d0bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148d0d80"/>
        <function-ref name="get" scoped="" ref="0x7f2e148cf020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148cf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148cf340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148cf4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148cf760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148cf8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148cfa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148cfc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148d05b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148cfda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f2e148b8e50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f2e148b8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148b7210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148b73a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148b7530"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148b5340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148b7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148b79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148b7b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148b7d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148b6020"/>
        <function-ref name="get" scoped="" ref="0x7f2e148b61b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148b6340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148b64d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148b6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148b68f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148b6a80"/>
        <function-ref name="set" scoped="" ref="0x7f2e148b6c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148b6da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148b76c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148b5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f2e148788a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f2e148788a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14878c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14878db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14876020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14875c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14876340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148764d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14876660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148767f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14876980"/>
        <function-ref name="get" scoped="" ref="0x7f2e14876b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14876ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14876e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14875020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148752b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14875440"/>
        <function-ref name="set" scoped="" ref="0x7f2e148755d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14875760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148761b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148758f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14875a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f2e148b3e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f2e148b3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148b1210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148b13a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148b1530"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148af340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148b1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148b19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148b1b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148b1d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148b0020"/>
        <function-ref name="get" scoped="" ref="0x7f2e148b01b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148b0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148b04d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148b0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148b08f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148b0a80"/>
        <function-ref name="set" scoped="" ref="0x7f2e148b0c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148b0da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148b16c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148af020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148af1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f2e14898020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f2e14898020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14898530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148986c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148964d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148989e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14898b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14898d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14897020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148971b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14897340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148974d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14897660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14897a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14897c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14897da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14896020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14898850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148961b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14896340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f2e1487f020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f2e1487f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1487f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1487f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1487f6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1487d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1487f9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1487fb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1487fd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1487e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1487e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1487e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1487e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1487e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1487e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1487ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1487ec10"/>
        <function-ref name="set" scoped="" ref="0x7f2e1487eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1487d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1487f850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1487d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1487d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f2e1486a020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f2e1486a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1486a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1486a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1486a6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148684d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1486a9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1486ab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1486ad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14869020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148691b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14869340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148694d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14869660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148697f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14869a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14869c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14869da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14868020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1486a850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148681b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14868340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f2e1484fd50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f2e1484fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1484e100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1484e290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1484e420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1484c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1484e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1484e8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1484ea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1484ebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1484ed80"/>
        <function-ref name="get" scoped="" ref="0x7f2e1484d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1484d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1484d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1484d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1484d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1484d8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1484da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1484dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1484e5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1484dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1484c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f2e148db530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f2e148db530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148db8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148dba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148dbbd0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148e9980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148ea020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148ea1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148ea340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148ea4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148ea660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148ea7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148ea980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148eab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148eaca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148e9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148e91b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148e9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148e94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148dbd60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148e9660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148e97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f2e148c4580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f2e148c4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148c4900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148c4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148c4c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148c2980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148c31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148c3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148c34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148c3660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148c37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148c3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148c3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148c3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148c2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148c21b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148c2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148c24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148c4db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148c2660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148c27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f2e148aa710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f2e148aa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148aaa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148aac20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148aadb0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148a8a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148a91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148a9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148a94d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148a9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148a97f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e148a9980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148a9b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148a9ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148a9e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148a8120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148a82b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148a8440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148a85d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148a9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148a8760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148a88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f2e148918a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f2e148918a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14891c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14891db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14890020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1488fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14890340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148904d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14890660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148907f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14890980"/>
        <function-ref name="get" scoped="" ref="0x7f2e14890b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14890ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14890e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1488f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1488f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1488f440"/>
        <function-ref name="set" scoped="" ref="0x7f2e1488f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1488f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148901b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1488f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1488fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f2e1484ad50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f2e1484ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14849100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14849290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14849420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148471b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14849740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148498d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14849a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14849bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14849d80"/>
        <function-ref name="get" scoped="" ref="0x7f2e14848020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148481b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14848340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148484d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14848760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148488f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14848a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14848c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148495b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14848da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14847020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f2e14842570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f2e14842570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148428f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14842a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14842c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14840980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14841020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148411b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14841340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14841660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148417f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14841980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14841b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14841ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14840020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148401b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14840340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148404d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14842da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14840660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148407f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f2e14832570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f2e14832570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148328f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14832a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14832c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14830980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14831020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148311b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14831340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14831660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148317f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14831980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14831b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14831ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14830020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148301b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14830340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148304d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14832da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14830660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f2e1488c8a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f2e1488c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1488cc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1488cdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1488b020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1488ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1488b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1488b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1488b660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1488b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1488b980"/>
        <function-ref name="get" scoped="" ref="0x7f2e1488bb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1488bca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1488be30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1488a020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1488a2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1488a440"/>
        <function-ref name="set" scoped="" ref="0x7f2e1488a5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1488a760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1488b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1488a8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1488aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f2e14847580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f2e14847580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14847900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14847a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14847c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14845980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14846020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148461b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14846340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148464d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14846660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148467f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14846980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14846b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14846ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14845020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148451b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14845340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148454d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14847db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14845660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f2e148d6d50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f2e148d6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148d5100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148d5290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148d5420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148d31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148d5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148d58d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148d5a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148d5bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148d5d80"/>
        <function-ref name="get" scoped="" ref="0x7f2e148d4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148d41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148d4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148d44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148d4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148d48f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148d4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148d4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148d55b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148d4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f2e148bde50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f2e148bde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148bc210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148bc3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148bc530"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148ba340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148bc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148bc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148bcb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148bcd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148bb020"/>
        <function-ref name="get" scoped="" ref="0x7f2e148bb1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148bb340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148bb4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148bb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148bb8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148bba80"/>
        <function-ref name="set" scoped="" ref="0x7f2e148bbc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148bbda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148bc6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148ba020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f2e148a3e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f2e148a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148a2210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148a23a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148a2530"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148a0340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148a2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148a29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148a2b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148a2d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148a1020"/>
        <function-ref name="get" scoped="" ref="0x7f2e148a11b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148a1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148a14d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148a1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148a18f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148a1a80"/>
        <function-ref name="set" scoped="" ref="0x7f2e148a1c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148a1da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148a26c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148a0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f2e14851580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f2e14851580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14851900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14851a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14851c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1484f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14850020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148501b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14850340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14850660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148507f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14850980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14850b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14850ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1484f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1484f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1484f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1484f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14851db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1484f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1484f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f2e14837570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f2e14837570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148378f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14837a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14837c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14835980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14836020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148361b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14836340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148364d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14836660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148367f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14836980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14836b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14836ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14835020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148351b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14835340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148354d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14837da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14835660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148357f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f2e1489d020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f2e1489d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1489d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1489d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1489d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1489b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1489d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1489db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1489dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1489c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1489c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1489c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1489c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1489c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1489c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1489ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1489cc10"/>
        <function-ref name="set" scoped="" ref="0x7f2e1489cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1489b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1489d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1489b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1489b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f2e14884020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f2e14884020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148843a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14884530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148846c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148824d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148849e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14884b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14884d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14883020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148831b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14883340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148834d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14883660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148837f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14883a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14883c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14883da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14882020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14884850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148821b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14882340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f2e1486f020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f2e1486f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1486f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1486f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1486f6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1486d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1486f9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1486fb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1486fd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1486e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1486e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1486e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1486e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1486e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1486e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1486ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1486ec10"/>
        <function-ref name="set" scoped="" ref="0x7f2e1486eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1486d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1486f850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1486d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1486d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f2e148ce580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f2e148ce580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148ce900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148cea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148cec20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148cc980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148cd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148cd340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148cd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148cd660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148cd7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148cd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148cdb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148cdca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148cc020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148cc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148cc340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148cc4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148cedb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148cc660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148cc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f2e14874020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f2e14874020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148743a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14874530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148746c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148724d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148749e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14874b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14874d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14873020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148731b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14873340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148734d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14873660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148737f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14873a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14873c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14873da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14872020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14874850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148721b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14872340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f2e148c9580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f2e148c9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148c9900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148c9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148c9c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148c7980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148c8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148c81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148c8340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148c84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148c8660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148c87f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148c8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148c8b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148c8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148c7020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148c71b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148c7340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148c74d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148c9db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148c7660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148c77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f2e148af710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f2e148af710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148afa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148afc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148afdb0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148ada80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148ae340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148ae4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148ae660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148ae7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e148ae980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148aeb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148aeca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148aee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148ad120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148ad2b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148ad440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148ad5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148ae020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148ad760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f2e148968a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f2e148968a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14896c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14896db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14895020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14894c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14895340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148954d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14895660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148957f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14895980"/>
        <function-ref name="get" scoped="" ref="0x7f2e14895b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14895ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14895e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14894020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148942b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14894440"/>
        <function-ref name="set" scoped="" ref="0x7f2e148945d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14894760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148951b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148948f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14894a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f2e1487d8a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f2e1487d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1487dc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1487ddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1487c020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1487bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1487c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1487c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1487c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1487c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1487c980"/>
        <function-ref name="get" scoped="" ref="0x7f2e1487cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1487cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1487ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1487b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1487b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1487b440"/>
        <function-ref name="set" scoped="" ref="0x7f2e1487b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1487b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1487c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1487b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1487ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f2e148688a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f2e148688a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14868c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14868db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14867020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14866c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14867340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148674d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14867660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148677f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14867980"/>
        <function-ref name="get" scoped="" ref="0x7f2e14867b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14867ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14867e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14866020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148662b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14866440"/>
        <function-ref name="set" scoped="" ref="0x7f2e148665d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14866760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148671b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148668f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14866a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f2e148e9d50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f2e148e9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148da100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148da290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148da420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148d81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148da740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148da8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148daa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148dabf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148dad80"/>
        <function-ref name="get" scoped="" ref="0x7f2e148d9020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148d91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148d9340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148d94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148d9760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148d98f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148d9a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148d9c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148da5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148d9da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f2e148c2d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f2e148c2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148c1100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148c1290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148c1420"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148bf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148c1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148c18d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148c1a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148c1bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148c1d80"/>
        <function-ref name="get" scoped="" ref="0x7f2e148c0020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148c01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148c0340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148c04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148c0760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148c08f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e148c0a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148c0c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148c15b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148c0da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f2e148a8e50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f2e148a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148a7210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e148a73a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148a7530"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148a5340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148a7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148a79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e148a7b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148a7d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148a6020"/>
        <function-ref name="get" scoped="" ref="0x7f2e148a61b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148a6340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e148a64d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148a6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e148a68f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148a6a80"/>
        <function-ref name="set" scoped="" ref="0x7f2e148a6c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148a6da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e148a76c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148a5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f2e1488e020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f2e1488e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1488e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1488e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1488e6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1488c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1488e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1488eb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1488ed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1488d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1488d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1488d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1488d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1488d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1488d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1488da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1488dc10"/>
        <function-ref name="set" scoped="" ref="0x7f2e1488dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1488c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1488e850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1488c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1488c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f2e14840d40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f2e14840d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1483f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1483f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1483f400"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1483d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1483f720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1483f8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1483fa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1483fbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1483fd60"/>
        <function-ref name="get" scoped="" ref="0x7f2e1483e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1483e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1483e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1483e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1483e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1483e8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1483ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1483ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1483f590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1483eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1483d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f2e1482d560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f2e1482d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1482d8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1482da70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1482dc00"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1482b980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1482c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1482c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1482c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1482c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1482c660"/>
        <function-ref name="get" scoped="" ref="0x7f2e1482c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1482c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1482cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1482cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1482b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1482b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1482b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1482b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1482dd90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1482b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1482b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f2e1485b580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f2e1485b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1485b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1485ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1485bc20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14859980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1485a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1485a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1485a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1485a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1485a660"/>
        <function-ref name="get" scoped="" ref="0x7f2e1485a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1485a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1485ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1485aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14859020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148591b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14859340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148594d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1485bdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14859660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f2e14889020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f2e14889020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148893a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14889530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148896c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148874d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148899e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14889b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14889d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14888020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e148881b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14888340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148884d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14888660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148887f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14888a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14888c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14888da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14887020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14889850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e148871b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14887340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f2e1482bd40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f2e1482bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1482a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1482a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1482a400"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148281b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1482a720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1482a8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1482aa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1482abd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1482ad60"/>
        <function-ref name="get" scoped="" ref="0x7f2e14829020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148291b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14829340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148294d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14829760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148298f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14829a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14829c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1482a590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14829da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14828020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f2e14823580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f2e14823580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14823900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14823a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14823c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14821980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14822020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e148221b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14822340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e148224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14822660"/>
        <function-ref name="get" scoped="" ref="0x7f2e148227f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14822980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14822b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14822ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14821020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148211b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14821340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e148214d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14823db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14821660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e148217f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f2e148638f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f2e148638f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e148620a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14862230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e148623c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e148601b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e148626e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14862870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14862a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14862b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14862d20"/>
        <function-ref name="get" scoped="" ref="0x7f2e14861020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e148611b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14861340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e148614d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14861760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e148618f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14861a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14861c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14862550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14861da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14860020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1481ed10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1481ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147ef0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147ef270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147ef400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147ed1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147ef720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147ef8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147efa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147efbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147efd60"/>
        <function-ref name="get" scoped="" ref="0x7f2e147ee020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147ee1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147ee340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147ee4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147ee760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147ee8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e147eea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147eec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147eeda0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147ef590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147ea260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147ea260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147ea5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147ea770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147ea900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147e8660"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147eac20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147eadb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147e9020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147e91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147e9340"/>
        <function-ref name="get" scoped="" ref="0x7f2e147e94d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147e9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147e97f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147e9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147e9c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147e9da0"/>
        <function-ref name="set" scoped="" ref="0x7f2e147e8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147e81b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147e8340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147eaa90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147e84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147e5740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147e5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147e5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147e5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147e5de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147e3a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147e41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147e4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147e44d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147e4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147e47f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e147e4980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147e4b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147e4ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147e4e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147e3120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147e32b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e147e3440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147e35d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147e3760"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147e4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147e38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147e0b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147e0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147df020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147df1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147df340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147dd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147df660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147df7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147df980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147dfb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147dfca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e147dfe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147de020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147de1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147de340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147de5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147de760"/>
        <function-ref name="set" scoped="" ref="0x7f2e147de8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147dea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147dec10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147df4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147deda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147da060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147da3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147da570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147da700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147d74d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147daa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147dabb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147dad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147d8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147d81b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e147d8340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147d84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147d8660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147d87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147d8a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147d8c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e147d8da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147d7020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147d71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147da890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147d4540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147d4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147d48c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147d4a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147d4be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147d2980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147d31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147d3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147d34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147d3660"/>
        <function-ref name="get" scoped="" ref="0x7f2e147d37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147d3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147d3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147d3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147d2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147d21b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e147d2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147d24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147d2660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147d4d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147d27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147cfb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147cfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147ce020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147ce1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147ce340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147cc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147ce660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147ce7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147ce980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147ceb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147ceca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e147cee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147cd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147cd1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147cd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147cd5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147cd760"/>
        <function-ref name="set" scoped="" ref="0x7f2e147cd8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147cda80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147cdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147ce4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147cdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147c9060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147c9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147c93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147c9570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147c9700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147c74d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147c9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147c9bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147c9d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147c8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147c81b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e147c8340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147c84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147c8660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147c87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147c8a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147c8c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e147c8da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147c7020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147c71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147c9890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147c4540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147c4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147c48c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147c4a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147c4be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147c2980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147c31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147c3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147c34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147c3660"/>
        <function-ref name="get" scoped="" ref="0x7f2e147c37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147c3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147c3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147c3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147c2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147c21b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e147c2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147c24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147c2660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147c4d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147c27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147bfb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147bfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147be020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147be1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147be340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147bc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147be660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147be7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147be980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147beb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147beca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e147bee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147bd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147bd1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147bd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147bd5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147bd760"/>
        <function-ref name="set" scoped="" ref="0x7f2e147bd8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147bda80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147bdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147be4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147bdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147b9060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147b9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147b93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147b9570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147b9700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147b74d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147b9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147b9bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147b9d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147b8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147b81b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e147b8340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147b84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147b8660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147b87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147b8a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147b8c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e147b8da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147b7020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147b9890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147b4540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147b4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147b48c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147b4a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147b4be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147b2980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147b3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147b31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147b3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147b34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147b3660"/>
        <function-ref name="get" scoped="" ref="0x7f2e147b37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147b3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147b3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147b3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147b2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147b21b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e147b2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147b24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147b2660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147b4d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147aed10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147aed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147ad0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147ad270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147ad400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147ab1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147ad720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147ad8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147ada40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147adbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147add60"/>
        <function-ref name="get" scoped="" ref="0x7f2e147ac020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147ac1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147ac340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147ac4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147ac760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147ac8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e147aca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147acc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147acda0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147ad590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147a8260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147a8260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147a85e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147a8770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147a8900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147a6660"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147a8c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147a8db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147a7020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147a71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147a7340"/>
        <function-ref name="get" scoped="" ref="0x7f2e147a74d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147a7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147a77f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147a7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147a7c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147a7da0"/>
        <function-ref name="set" scoped="" ref="0x7f2e147a6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147a61b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147a6340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147a8a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e147a3740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e147a3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147a3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147a3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e147a3de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147a1a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147a2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147a24d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147a2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147a27f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e147a2980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147a2b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147a2ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147a2e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147a1120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147a12b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e147a1440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147a15d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147a1760"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147a2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147a18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1479eb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1479eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1479d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1479d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1479d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1479b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1479d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1479d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1479d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1479db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1479dca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1479de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1479c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1479c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1479c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1479c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1479c760"/>
        <function-ref name="set" scoped="" ref="0x7f2e1479c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1479ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1479cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1479d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1479cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14798060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14798060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147983e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14798570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14798700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147964d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14798a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14798bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14798d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14797020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147971b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14797340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147974d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14797660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14797a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14797c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14797da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14796020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147961b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14798890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14796340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14793540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14793540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147938c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14793a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14793be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14791980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14792020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147921b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14792340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147924d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14792660"/>
        <function-ref name="get" scoped="" ref="0x7f2e147927f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14792980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14792b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14792ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14791020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147911b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14791340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147914d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14791660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14793d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1478eb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1478eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1478d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1478d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1478d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1478b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1478d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1478d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1478d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1478db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1478dca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1478de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1478c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1478c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1478c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1478c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1478c760"/>
        <function-ref name="set" scoped="" ref="0x7f2e1478c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1478ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1478cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1478d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1478cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14788060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14788060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147883e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14788570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14788700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147854d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14788a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14788bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14788d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14786020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147861b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14786340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147864d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14786660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147867f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14786a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14786c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14786da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14785020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147851b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14788890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14785340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14782540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14782540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147828c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14782a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14782be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14780980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14781020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147811b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14781340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14781660"/>
        <function-ref name="get" scoped="" ref="0x7f2e147817f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14781980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14781b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14781ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14780020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147801b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14780340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147804d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14780660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14782d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1477db90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1477db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1477c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1477c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1477c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1477a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1477c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1477c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1477c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1477cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1477cca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1477ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1477b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1477b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1477b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1477b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1477b760"/>
        <function-ref name="set" scoped="" ref="0x7f2e1477b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1477ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1477bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1477c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1477bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14777060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14777060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147773e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14777570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14777700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147754d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14777a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14777bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14777d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14776020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147761b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14776340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147764d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14776660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147767f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14776a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14776c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14776da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14775020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147751b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14777890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14775340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14772540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14772540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147728c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14772a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14772be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14770980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14771020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147711b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14771340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147714d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14771660"/>
        <function-ref name="get" scoped="" ref="0x7f2e147717f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14771980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14771b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14771ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14770020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147701b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14770340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147704d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14770660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14772d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147707f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1476ddc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1476ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1476c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1476c310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1476c4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1476a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1476c7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1476c950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1476cae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1476cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1476ce00"/>
        <function-ref name="get" scoped="" ref="0x7f2e1476b020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1476b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1476b340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1476b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1476b760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1476b8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1476ba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1476bc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1476bda0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1476c630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1476a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14767260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14767260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147675e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14767770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14767900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14765660"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14767c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14767db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14766020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14766340"/>
        <function-ref name="get" scoped="" ref="0x7f2e147664d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14766660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147667f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14766980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14766c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14766da0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14765020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147651b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14765340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14767a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14762740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14762740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14762ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14762c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14762de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14760a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e147611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14761340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e147614d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14761660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147617f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14761980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14761b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14761ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14761e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14760120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e147602b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14760440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e147605d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14760760"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14761020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e147608f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1475db90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1475db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1475b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1475b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1475b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14759020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1475b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1475b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1475b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1475bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1475bca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1475be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1475a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1475a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1475a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1475a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1475a760"/>
        <function-ref name="set" scoped="" ref="0x7f2e1475a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1475aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1475ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1475b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1475ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14756060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14756060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147563e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14756570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14756700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147544d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14756a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14756bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14756d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14755020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147551b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14755340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147554d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14755660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147557f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14755a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14755c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14755da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14754020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147541b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14756890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14754340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14751540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14751540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147518c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14751a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14751be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1474f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14750020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147501b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14750340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14750660"/>
        <function-ref name="get" scoped="" ref="0x7f2e147507f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14750980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14750b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14750ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1474f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1474f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1474f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1474f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1474f660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14751d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1474f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1474cb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1474cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1474b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1474b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1474b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14749020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1474b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1474b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1474b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1474bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1474bca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1474be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1474a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1474a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1474a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1474a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1474a760"/>
        <function-ref name="set" scoped="" ref="0x7f2e1474a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1474aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1474ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1474b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1474ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14746060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14746060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147463e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14746570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14746700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147444d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14746a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14746bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14746d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14745020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147451b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14745340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147454d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14745660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147457f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14745a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14745c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14745da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14744020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147441b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14746890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14744340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14741540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14741540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147418c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14741a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14741be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1473f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14740020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14740340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e147404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14740660"/>
        <function-ref name="get" scoped="" ref="0x7f2e147407f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14740980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14740b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14740ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1473f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1473f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1473f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1473f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1473f660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14741d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1473f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1473cb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1473cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1473b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1473b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1473b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14739020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1473b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1473b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1473b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1473bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1473bca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1473be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1473a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1473a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1473a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1473a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1473a760"/>
        <function-ref name="set" scoped="" ref="0x7f2e1473a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1473aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1473ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1473b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1473ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14736060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14736060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147363e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14736570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14736700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147344d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14736a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14736bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14736d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14735020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147351b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14735340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147354d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14735660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147357f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14735a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14735c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14735da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14734020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147341b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14736890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14734340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14730540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14730540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147308c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14730a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14730be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1472e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1472f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1472f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1472f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1472f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1472f660"/>
        <function-ref name="get" scoped="" ref="0x7f2e1472f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1472f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1472fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1472fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1472e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1472e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1472e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1472e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1472e660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14730d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1472e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1472bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1472bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1472a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1472a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1472a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14728020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1472a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1472a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1472a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1472ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1472aca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1472ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14729020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147291b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14729340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147295d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14729760"/>
        <function-ref name="set" scoped="" ref="0x7f2e147298f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14729a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14729c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1472a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14729da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14725060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14725060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147253e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14725570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14725700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147234d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14725a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14725bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14725d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14724020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147241b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14724340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147244d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14724660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147247f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14724a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14724c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14724da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14723020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147231b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14725890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14723340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14720540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14720540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147208c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14720a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14720be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1471e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1471f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1471f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1471f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1471f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1471f660"/>
        <function-ref name="get" scoped="" ref="0x7f2e1471f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1471f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1471fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1471fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1471e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1471e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1471e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1471e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1471e660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14720d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1471e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1471bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1471bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1471a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1471a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1471a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14718020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1471a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1471a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1471a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1471ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1471aca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1471ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14719020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147191b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14719340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147195d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14719760"/>
        <function-ref name="set" scoped="" ref="0x7f2e147198f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14719a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14719c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1471a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14719da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14715060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14715060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147153e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14715570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14715700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147134d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14715a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14715bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14715d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14714020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147141b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14714340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147144d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14714660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14714a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14714c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14714da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14713020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147131b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14715890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14713340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14710540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14710540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147108c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14710a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14710be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1470e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1470f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1470f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1470f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1470f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1470f660"/>
        <function-ref name="get" scoped="" ref="0x7f2e1470f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1470f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1470fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1470fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1470e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1470e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1470e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1470e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1470e660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14710d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1470e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e1470bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e1470bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14709020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e147091b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14709340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14707020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14709660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e147097f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14709980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14709b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14709ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14709e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14708020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e147081b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14708340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e147085d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14708760"/>
        <function-ref name="set" scoped="" ref="0x7f2e147088f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14708a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14708c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e147094d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14708da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e14704060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e14704060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e147043e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14704570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14704700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e147024d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14704a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14704bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14704d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14703020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e147031b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14703340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e147034d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14703660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e147037f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14703a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14703c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e14703da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14702020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e147021b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14704890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14702340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e146ff540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e146ff540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e146ff8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e146ffa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e146ffbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e146fd980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e146fe020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e146fe1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e146fe340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e146fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e146fe660"/>
        <function-ref name="get" scoped="" ref="0x7f2e146fe7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e146fe980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e146feb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e146feca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e146fd020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e146fd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e146fd340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e146fd4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e146fd660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e146ffd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e146fd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e146fab90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e146fab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e146f9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e146f91b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e146f9340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e146f7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e146f9660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e146f97f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e146f9980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e146f9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e146f9ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e146f9e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e146f8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e146f81b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e146f8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e146f85d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e146f8760"/>
        <function-ref name="set" scoped="" ref="0x7f2e146f88f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e146f8a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e146f8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e146f94d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e146f8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e146f4060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e146f4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e146f43e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e146f4570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e146f4700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e146f24d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e146f4a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e146f4bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e146f4d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e146f3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e146f31b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e146f3340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e146f34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e146f3660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e146f37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e146f3a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e146f3c10"/>
        <function-ref name="set" scoped="" ref="0x7f2e146f3da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e146f2020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e146f21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e146f4890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e146f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2e146ef540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2e146ef540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e146ef8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e146efa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e146efbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e146ed980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e146ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e146ee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e146ee340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e146ee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e146ee660"/>
        <function-ref name="get" scoped="" ref="0x7f2e146ee7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e146ee980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e146eeb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e146eeca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e146ed020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e146ed1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e146ed340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e146ed4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e146ed660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e146efd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e146ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e1465f610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e1465f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1465f990"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1465fb20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1465fcb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1465d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1465e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1465e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1465e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1465e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1465e660"/>
        <function-ref name="get" scoped="" ref="0x7f2e1465e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1465e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1465eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1465eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1465d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1465d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1465d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1465d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1465d660"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1465fe40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1465d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e14671480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14671480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14671800"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14671990"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14671b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14671cb0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14671e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1465f020"/>
        <function-ref name="set" scoped="" ref="0x7f2e1465f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1465f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e14659de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e14659de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14658180"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14658310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e146584a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e146561b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e146587c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14658950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14658ae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14658c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14658e00"/>
        <function-ref name="get" scoped="" ref="0x7f2e14657020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e146571b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14657340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e146574d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14657760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e146578f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14657a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14657c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14657da0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14658630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14656020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e1465bb20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e1465bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14659020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e146591b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14659340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e146594d0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14659660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e146597f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14659980"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14659b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e14653480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e14653480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14653800"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14653990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14653b20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e146517f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14653e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14652020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e146521b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14652340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e146524d0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14652660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e146527f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14652980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14652b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14652da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14651020"/>
        <function-ref name="set" scoped="" ref="0x7f2e146511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14651340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e146514d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14653cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14651660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e146541b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e146541b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14654530"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e146546c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14654850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e146549e0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14654b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14654d00"/>
        <function-ref name="set" scoped="" ref="0x7f2e14653020"/>
        <function-ref name="clr" scoped="" ref="0x7f2e146531b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f2e145b1a50" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f2e145b1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2e145b1dd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2e145ba020"/>
        <function-ref name="start" scoped="" ref="0x7f2e145ba1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e145ba340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f2e14646cf0" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2e14646cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2e146430a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2e145d4910" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2e145d4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e145d4c90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e145d4e20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1462c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1462c1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e1462c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2e145b98f0" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2e145b98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e145b9c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e145b9e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e145c3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e145c31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e145c3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2e145aac20" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e145aac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2e145b8020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2e145b81b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2e145b8340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2e145b84d0"/>
        <function-ref name="getPower" scoped="" ref="0x7f2e145b8660"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2e145b87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f2e145b4180" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e145b4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e145b4500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2e14643360" loc="10:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e14643360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e146436e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e14643870"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e14643a00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e14643b90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e14643d20"/>
        <function-ref name="get" scoped="" ref="0x7f2e14642020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e146421b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e146427f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14642340"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e146424d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e14642660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7f2e14636820" loc="11:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7f2e14636820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e14635cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14640300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e146350d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e14640c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e14633660"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e146331e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e14640780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e14641480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e146356e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e14641950"/>
        <function-ref name="stop" scoped="" ref="0x7f2e14641e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7f2e14633cd0" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7f2e14633cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e1462e220"/>
        <function-ref name="fired" scoped="" ref="0x7f2e146317c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e14630590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e14630110"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e1462eb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e1462e6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e14631c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e14632940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e14630ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e14632e10"/>
        <function-ref name="stop" scoped="" ref="0x7f2e14631340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2e145c48d0" loc="15:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2e145c48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2e145c4c50"/>
        <function-ref name="source" scoped="" ref="0x7f2e145c4de0"/>
        <function-ref name="address" scoped="" ref="0x7f2e1462b020"/>
        <function-ref name="destination" scoped="" ref="0x7f2e1462b1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2e1462b340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2e1462b4d0"/>
        <function-ref name="type" scoped="" ref="0x7f2e1462b660"/>
        <function-ref name="setType" scoped="" ref="0x7f2e1462b7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2e1462b980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2e1462bb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2e1462bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2e1457a980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e1457a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e1424ee80"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1424f4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e1424e260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e1424fda0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e1424d7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e1424d320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e1424f920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e142505a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e1424e870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e14250a70"/>
        <function-ref name="stop" scoped="" ref="0x7f2e1424f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f2e14570050" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f2e14570050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e1456c630"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1456fac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e1456d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e1456d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e1456b020"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e1456cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e1456d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e14570c40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e1456c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e1456f170"/>
        <function-ref name="stop" scoped="" ref="0x7f2e1456f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f2e14567c30" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f2e14567c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e14562110"/>
        <function-ref name="fired" scoped="" ref="0x7f2e145656a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e145644a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e14564020"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e14562a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e14562590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e14565b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e14566860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e14564ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e14566d30"/>
        <function-ref name="stop" scoped="" ref="0x7f2e14565220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2e1455d500" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2e1455d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1455f170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e1456be50" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e1456be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e14567210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2e14320870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2e14320870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e1431d090"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1431e090"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e1431ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e1431e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e1431d550"/>
        <function-ref name="start" scoped="" ref="0x7f2e1431f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e1431fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e14320020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e14320020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e143203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2e130b94f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2e130b94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e130b6db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e130b8da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e130b6760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e130b62a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e130b52a0"/>
        <function-ref name="start" scoped="" ref="0x7f2e130b83d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e130b88e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e130bab10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e130bab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e130b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2e130a0da0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e130a0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1309f180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e1309f310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e1309f4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e1309f630"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1309f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2e130a2340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e130a2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e130a26c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e130a2850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e130a29e0"/>
        <function-ref name="get" scoped="" ref="0x7f2e130a2b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e130a2d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e130a1020"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e130a11b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e130a1340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e130a14d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e130a1660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e130a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2e130a1a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e130a1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e130a1e00"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e130a0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e130a01b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e130a0340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e130a04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e130a0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e130a07f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e130a0980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e130a0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2e145281d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e145281d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14528550"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e145286e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e14528870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14528a00"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14528b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2e1452d990" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1452d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e1452dd10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e1452c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1452c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1452c340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1452c4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1452c660"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e1452c7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1452c980"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e1452cb10"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e1452cca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e1452ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2e1452a720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1452a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e1452aaa0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e1452ac30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1452adc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14529020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e145291b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14529340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e145294d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e14529660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e145297f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f2e14517730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f2e14517730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e14517ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e14517c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14517dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14516020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e145161b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14516340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e145164d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e14516660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e145167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f2e14512280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f2e14512280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e14512600"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e14512790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14512920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14512ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e14512c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14512dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e14511020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e145111b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e14511340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f2e14519700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f2e14519700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14519a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14519c10"/>
        <function-ref name="captured" scoped="" ref="0x7f2e14519da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14517020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e145171b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14517340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f2e14506020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f2e14506020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e145063a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14506530"/>
        <function-ref name="captured" scoped="" ref="0x7f2e145066c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14506850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e145069e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14506b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f2e1451f890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f2e1451f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1451fc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e1451fda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e14519020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e145191b0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14519340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f2e14507160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f2e14507160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e145074e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14507670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e14507800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14507990"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14507b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f2e144fcae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f2e144fcae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e144fce60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e144fb020"/>
        <function-ref name="captured" scoped="" ref="0x7f2e144fb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e144fb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144fb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e144fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f2e14505020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f2e14505020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e145053a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e14505530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e145056c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14505850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e145059e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14505b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e14505d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e14504020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e145041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f2e145230c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f2e145230c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e14523440"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e145235d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14523760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e145238f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e14523a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14523c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e14523da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e14522020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e145221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f2e1450da20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f2e1450da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1450dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e1450c020"/>
        <function-ref name="captured" scoped="" ref="0x7f2e1450c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1450c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1450c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e1450c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f2e1450ebb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f2e1450ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1450d020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e1450d1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e1450d340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e1450d4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1450d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f2e1450f730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f2e1450f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e1450fab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e1450fc40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1450fdd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e1450e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e1450e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1450e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e1450e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e1450e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e1450e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f2e14515a20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f2e14515a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14515da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14514020"/>
        <function-ref name="captured" scoped="" ref="0x7f2e145141b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14514340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e145144d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14514660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f2e14503570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f2e14503570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e145038f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14503a80"/>
        <function-ref name="captured" scoped="" ref="0x7f2e14503c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14503da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14502020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e145021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f2e1450ca50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f2e1450ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e1450cdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e1450b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1450b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e1450b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e1450b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1450b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e1450b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e1450b980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e1450bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f2e14516bb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f2e14516bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14515020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e145151b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e14515340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e145154d0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14515660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f2e14527830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f2e14527830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14527bb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e14527d40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14524020"/>
        <function-ref name="get" scoped="" ref="0x7f2e145241b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14524340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e145244d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14524660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e145247f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14524980"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e14524b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e14524ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f2e14504570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f2e14504570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14504af0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14504c80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e14504e10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14503020"/>
        <function-ref name="fired" scoped="" ref="0x7f2e145031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f2e14520410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f2e14520410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e14520790"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e14520920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14520ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14520c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e14520dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1451f020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e1451f1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e1451f340"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e1451f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f2e145025a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f2e145025a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e14502920"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e14502ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14502c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14502dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e14501020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e145011b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e14501340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e145014d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e14501660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f2e1451a410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f2e1451a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1451a790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e1451a920"/>
        <function-ref name="captured" scoped="" ref="0x7f2e1451aab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1451ac40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1451add0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14520020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f2e1450ada0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f2e1450ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14509180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14509310"/>
        <function-ref name="captured" scoped="" ref="0x7f2e145094a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14509630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e145097c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14509950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f2e14522570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f2e14522570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e145228f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14522a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e14522c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14522da0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14521020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f2e1450a020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f2e1450a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1450a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e1450a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e1450a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e1450a850"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1450a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f2e14500890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f2e14500890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14500c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14500da0"/>
        <function-ref name="captured" scoped="" ref="0x7f2e144ff020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e144ff1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144ff340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e144ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f2e14509d40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f2e14509d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e145080e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e14508270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14508400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14508590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e14508720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e145088b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e14508a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e14508bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e14508d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f2e145149e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f2e145149e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14514d60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e14513020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e145131b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14513340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e145134d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14513660"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e145137f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14513980"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14513b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e14513ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e14513e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f2e14510700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f2e14510700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14510a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14510c10"/>
        <function-ref name="captured" scoped="" ref="0x7f2e14510da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1450f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1450f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e1450f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f2e14501a20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f2e14501a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14501da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14500020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e145001b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14500340"/>
        <function-ref name="fired" scoped="" ref="0x7f2e145004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f2e144fdd40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f2e144fdd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e144fc0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e144fc270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e144fc400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e144fc590"/>
        <function-ref name="fired" scoped="" ref="0x7f2e144fc720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f2e14511700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f2e14511700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14511b80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14511d10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e14510020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e145101b0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14510340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f2e144ff8c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f2e144ff8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e144ffc40"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e144ffdd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e144fd020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e144fd1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e144fd340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e144fd4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e144fd660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e144fd7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e144fd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f2e144c3940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2e144c3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e144c3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f2e144c32f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f2e144c32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e144c3670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f2e144c2020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2e144c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e144c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f2e144c4bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e144c4bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e144c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2e144c63e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e144c63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e144c6760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e144c68f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e144c6a80"/>
        <function-ref name="get" scoped="" ref="0x7f2e144c6c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e144c6da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e144c4020"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e144c41b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144c4340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e144c44d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e144c4660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e144c47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f2e144bc750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2e144bc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e144bcad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f2e144bc100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f2e144bc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e144bc480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f2e144bcda0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2e144bcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e144bb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f2e144bda60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e144bda60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e144bde00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2e144be260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e144be260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e144be5e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e144be770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e144be900"/>
        <function-ref name="get" scoped="" ref="0x7f2e144bea90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e144bec20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e144bedb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e144bd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144bd1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e144bd340"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e144bd4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e144bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e144717a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e144717a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14471b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14471cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2e14471e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14470020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144701b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14470340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2e144b86d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2e144b86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e144b8a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e144b8be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e144b8d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14472020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e144721b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14472340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e144724d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e14472660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e144727f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2e1446fc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e1446fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e1446e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2e14472ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2e14472ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14472e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14471020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e144711b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14471340"/>
        <function-ref name="fired" scoped="" ref="0x7f2e144714d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2e14470610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e14470610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14470990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e14470b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14470cb0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14470e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1446f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1446f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e1446f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1446f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e1446f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e1446f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e1446f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e1446acb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e1446acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e144680a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14468230"/>
        <function-ref name="captured" scoped="" ref="0x7f2e144683c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14468550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144686e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14468870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2e1446cb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2e1446cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e1446b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e1446b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1446b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e1446b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e1446b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1446b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e1446b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e1446bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e1446bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2e144662f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e144662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14466670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2e1446a020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2e1446a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1446a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e1446a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e1446a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e1446a850"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1446a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2e14468b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e14468b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14467020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e144671b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14467340"/>
        <function-ref name="get" scoped="" ref="0x7f2e144674d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14467660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e144677f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14467980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14467b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14467ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e14467e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e14466020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e144612f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e144612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14461670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14461800"/>
        <function-ref name="captured" scoped="" ref="0x7f2e14461990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14461b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14461cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14461e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2e14463220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2e14463220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e144635a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e14463730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e144638c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14463a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e14463be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14463d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e14462020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e144621b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e14462340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2e1445f7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e1445f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e1445fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2e14462610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2e14462610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14462990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14462b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e14462cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14462e40"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14461020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2e14460160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e14460160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e144604e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e14460670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14460800"/>
        <function-ref name="get" scoped="" ref="0x7f2e14460990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14460b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14460cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14460e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1445f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e1445f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e1445f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e1445f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e144597a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e144597a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14459b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14459cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2e14459e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14458020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144581b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14458340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2e1445c6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2e1445c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e1445ca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e1445cbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1445cd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e1445b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e1445b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1445b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e1445b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e1445b660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e1445b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2e14457c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e14457c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14456020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2e1445bac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2e1445bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1445be40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14459020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e144591b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14459340"/>
        <function-ref name="fired" scoped="" ref="0x7f2e144594d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2e14458610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e14458610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14458990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e14458b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14458cb0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14458e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14457020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e144571b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14457340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144574d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14457660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e144577f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e14457980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e14452cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e14452cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e144510a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14451230"/>
        <function-ref name="captured" scoped="" ref="0x7f2e144513c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14451550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144516e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14451870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2e14454b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2e14454b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e14453020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e144531b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14453340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e144534d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e14453660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e144537f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e14453980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e14453b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e14453ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2e1444f2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e1444f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e1444f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2e14452020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2e14452020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e144523a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14452530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e144526c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14452850"/>
        <function-ref name="fired" scoped="" ref="0x7f2e144529e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2e14451b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e14451b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14450020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e144501b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14450340"/>
        <function-ref name="get" scoped="" ref="0x7f2e144504d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14450660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e144507f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14450980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14450b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14450ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e14450e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e1444f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e1444a2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e1444a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1444a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e1444a800"/>
        <function-ref name="captured" scoped="" ref="0x7f2e1444a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1444ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1444acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e1444ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2e1444c220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2e1444c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e1444c5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e1444c730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1444c8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e1444ca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e1444cbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1444cd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e1444b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e1444b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e1444b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2e144477a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e144477a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14447b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2e1444b610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2e1444b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1444b990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e1444bb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e1444bcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e1444be40"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1444a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2e14448160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e14448160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e144484e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e14448670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14448800"/>
        <function-ref name="get" scoped="" ref="0x7f2e14448990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14448b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14448cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14448e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14447020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e144471b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e14447340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e144474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e144427a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e144427a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14442b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14442cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2e14442e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14441020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144411b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14441340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2e144446d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2e144446d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e14444a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e14444be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14444d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14443020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e144431b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14443340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e144434d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e14443660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e144437f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2e14440c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e14440c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e1443f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2e14443ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2e14443ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14443e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14442020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e144421b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14442340"/>
        <function-ref name="fired" scoped="" ref="0x7f2e144424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2e14441610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e14441610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14441990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e14441b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14441cb0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14441e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14440020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e144401b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14440340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144404d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14440660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e144407f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e14440980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e1443bcb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e1443bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e144390a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14439230"/>
        <function-ref name="captured" scoped="" ref="0x7f2e144393c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14439550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144396e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14439870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2e1443db30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2e1443db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e1443c020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e1443c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1443c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e1443c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e1443c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1443c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e1443c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e1443cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e1443cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2e144372f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e144372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14437670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2e1443b020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2e1443b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1443b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e1443b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e1443b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e1443b850"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1443b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2e14439b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e14439b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14438020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e144381b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14438340"/>
        <function-ref name="get" scoped="" ref="0x7f2e144384d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14438660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e144387f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14438980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14438b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14438ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e14438e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e14437020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e144322f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e144322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14432670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14432800"/>
        <function-ref name="captured" scoped="" ref="0x7f2e14432990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14432b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14432cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14432e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2e14434220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2e14434220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e144345a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e14434730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e144348c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e14434a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e14434be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14434d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e14433020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e144331b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e14433340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2e144307a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e144307a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14430b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2e14433610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2e14433610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e14433990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e14433b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e14433cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e14433e40"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14432020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2e14431160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e14431160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e144314e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e14431670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14431800"/>
        <function-ref name="get" scoped="" ref="0x7f2e14431990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14431b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14431cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14431e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14430020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e144301b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e14430340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e144304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e1442b7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e1442b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1442bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e1442bcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2e1442be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1442a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1442a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e1442a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2e1442d6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2e1442d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e1442da50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e1442dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1442dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e1442c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e1442c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1442c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e1442c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e1442c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e1442c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2e14428c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2e14428c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14427020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2e1442cac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2e1442cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1442ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e1442b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e1442b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e1442b340"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1442b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2e1442a610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e1442a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e1442a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e1442ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1442acb0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1442ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14428020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e144281b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14428340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e144284d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14428660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e144287f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e14428980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f2e14422bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f2e14422bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14421020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f2e144233f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f2e144233f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14423770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f2e14423b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f2e14423b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14422020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f2e14422430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f2e14422430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e144227b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f2e13094a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e13094a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e13094e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e13093020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e130931b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e13093340"/>
        <function-ref name="fired" scoped="" ref="0x7f2e130934d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2e13096190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e13096190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13096510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e130966a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e13096830"/>
        <function-ref name="get" scoped="" ref="0x7f2e130969c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e13096b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e13096ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e13096e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e13095030"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e130951c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e13095350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e130954e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2e1309a020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2e1309a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e13098870"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13099840"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e13098220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e13099d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e13098d30"/>
        <function-ref name="start" scoped="" ref="0x7f2e1309ae30"/>
        <function-ref name="stop" scoped="" ref="0x7f2e13099380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e1309b660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e1309b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e1309b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f2e13095770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e13095770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e13095af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e13095c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e13095e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e13094020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e130941b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e13094340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e130944d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e13094660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e130947f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2e143998c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e143998c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1439d700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e143980d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1439dbc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14398590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f2e143978e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2e143978e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e14394780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14393150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14394c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14393610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2e14382c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e14382c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14381020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e143811b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e14381340"/>
        <function-ref name="get" scoped="" ref="0x7f2e143814d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e14381660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e143817f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e14381980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14381b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14381ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e14381e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e14380020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2e14390b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e14390b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1438f9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14382360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1438fe70"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14382820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f2e1435e0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f2e1435e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1435d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1435d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1435d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e1435de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2e1437ccf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e1437ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e14361b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14360550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14360090"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14360a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2e130b3890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2e130b3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e130af0d0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e130b10d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e130b1a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e130b1590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e130af590"/>
        <function-ref name="start" scoped="" ref="0x7f2e130b26e0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e130b2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f2e130ac0a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f2e130ac0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e130aab30"/>
        <function-ref name="fired" scoped="" ref="0x7f2e130ab9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e130aa4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e130aa020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e130a8020"/>
        <function-ref name="start" scoped="" ref="0x7f2e130ab020"/>
        <function-ref name="stop" scoped="" ref="0x7f2e130ab530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2e130afc00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e130afc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e130aea80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e130ad4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e130ad020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e130ad9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f2e142ea9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f2e142ea9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e142ead40"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e142e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f2e142ee850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2e142ee850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e142ea090"/>
        <function-ref name="fired" scoped="" ref="0x7f2e142eb090"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e142eba10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e142eb550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e142ea550"/>
        <function-ref name="start" scoped="" ref="0x7f2e142ed6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e142edbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2e142f32f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e142f32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e142ef870"/>
        <function-ref name="fired" scoped="" ref="0x7f2e142f2e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e142f0c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e142f0780"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e142ee1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e142efcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e142f0300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e142f2020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e142ef260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e142f24f0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e142f29c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f2e1426b020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f2e1426b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e14267630"/>
        <function-ref name="fired" scoped="" ref="0x7f2e1426aa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e14269920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e142694a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e14266020"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e14267ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e14269020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e1426bc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e14267020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e1426a110"/>
        <function-ref name="stop" scoped="" ref="0x7f2e1426a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f2e14266450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f2e14266450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f2e142667d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2e142728e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e142728e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e1426d020"/>
        <function-ref name="fired" scoped="" ref="0x7f2e142704c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e1426e300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e14270e00"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e1426d960"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e1426d4c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e14270960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e14271560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e1426e930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e14271a50"/>
        <function-ref name="stop" scoped="" ref="0x7f2e14270020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f2e12eb6100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f2e12eb6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e12eb6480"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e12eb6610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f2e12ebd3d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f2e12ebd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e12eb9870"/>
        <function-ref name="fired" scoped="" ref="0x7f2e12ebce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e12ebac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e12eba780"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e12eb81e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e12eb9cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e12eba300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e12ebc020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e12eb9260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e12ebc4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e12ebc9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f2e12eb7a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f2e12eb7a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f2e12eb7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f2e12eb85d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f2e12eb85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f2e12eb7660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f2e12eb77f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f2e12eb8c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f2e12eb8e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f2e12eb7020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f2e12eb71b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f2e12eb7340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f2e12eb74d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f2e12eb8950"/>
        <function-ref name="node_id" scoped="" ref="0x7f2e12eb8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2e12ec4db0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e12ec4db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e12ebe470"/>
        <function-ref name="fired" scoped="" ref="0x7f2e12ec29b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e12ec07c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e12ec0320"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e12ebedb0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e12ebe910"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e12ec2e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e12ec3a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e12ec0df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e12ec2020"/>
        <function-ref name="stop" scoped="" ref="0x7f2e12ec2510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2e14263020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2e14263020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e14263c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2e14259300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e14259300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e14258150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14258ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e14258610"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14256020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2e1424a260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e1424a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e142476e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14249ca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e14248a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e142485f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e14246020"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e14247b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e14248170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e1424ae50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e142470d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e14249350"/>
        <function-ref name="stop" scoped="" ref="0x7f2e14249820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2e14237cc0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2e14237cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2e142360a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2e14236230"/>
        <function-ref name="start" scoped="" ref="0x7f2e142363c0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e14236550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f2e142292c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e142292c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2e14229640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2e142297d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2e14229960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2e14229af0"/>
        <function-ref name="setCca" scoped="" ref="0x7f2e14229c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2e14229e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f2e1421d1d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f2e1421d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f2e1421d650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2e142328f0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2e142328f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14232c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e14232e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e14231020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e142311b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e14231340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2e14236d20" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2e14236d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e142350e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e14235270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e14235400"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e14235590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e14235720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2e14234c00" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f2e14234c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e14233020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f2e14231610" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e14231610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2e14231990"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2e14231b20"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2e14231cb0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2e14231e40"/>
        <function-ref name="getPower" scoped="" ref="0x7f2e14230020"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2e142301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2e14218130" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e14218130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2e142184b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2e14218640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2e142187d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2e14218960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e14234020" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e14234020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e142343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2e1422f080" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e1422f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2e1422f400"/>
        <function-ref name="noAck" scoped="" ref="0x7f2e1422f590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2e1422f720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f2e1420f430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f2e1420f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2e1420f7b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2e1420f940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2e1420fad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2e1420fc60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2e1420fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2e142332d0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2e142332d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2e14233650"/>
        <function-ref name="source" scoped="" ref="0x7f2e142337e0"/>
        <function-ref name="address" scoped="" ref="0x7f2e14233970"/>
        <function-ref name="destination" scoped="" ref="0x7f2e14233b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f2e14233c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2e14233e20"/>
        <function-ref name="type" scoped="" ref="0x7f2e14232020"/>
        <function-ref name="setType" scoped="" ref="0x7f2e142321b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2e14232340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2e142324d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2e14232660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f2e14225170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2e14225170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2e142254f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2e1420a020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2e1420a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2e1420a3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2e1420a530"/>
        <function-ref name="start" scoped="" ref="0x7f2e1420a6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e1420a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f2e141f79d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2e141f79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2e141f7d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f2e141f6b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f2e141f6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2e141f5020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2e141f51b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2e141f5340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2e141f54d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2e141f5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f2e141f8020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e141f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2e141f83a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2e141f8530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2e141f86c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2e141f8850"/>
        <function-ref name="getPower" scoped="" ref="0x7f2e141f89e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2e141f8b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f2e14202a70" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f2e14202a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e14202df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e141fb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e141fb1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e141fb340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e141fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2e141f6080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e141f6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2e141f6400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2e141f6590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2e141f6720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2e141f68b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f2e14203690" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f2e14203690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e14203a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2e141f7020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e141f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2e141f73a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f2e141f7530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2e141f76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e14209530" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e14209530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e142098b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e14209a40"/>
        <function-ref name="request" scoped="" ref="0x7f2e14209bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e14209d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e14208020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f2e141fa940" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f2e141fa940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e141facc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e141fae50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e14203020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e142031b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e14203340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f2e14203d50" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f2e14203d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e14202100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e14202290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e14202420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e142025b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e14202740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f2e141fb840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f2e141fb840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e141fbbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2e141f2390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2e141f2390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2e141f2710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2e141f28a0"/>
        <function-ref name="start" scoped="" ref="0x7f2e141f2a30"/>
        <function-ref name="stop" scoped="" ref="0x7f2e141f2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f2e141f0330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e141f0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2e141f06b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2e141f0840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2e141f09d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2e141f0b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f2e141f0cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2e141f0e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2e141f2e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e141f2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e141f1220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e141f13b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e141f1540"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e141f16d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e141f1860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e141f1b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e141f1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e141f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2e141efe70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2e141efe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2e141eb220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2e141eb3b0"/>
        <function-ref name="start" scoped="" ref="0x7f2e141eb540"/>
        <function-ref name="stop" scoped="" ref="0x7f2e141eb6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f2e141ea7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e141ea7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2e141eab60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2e141eacf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2e141eae80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2e141e9030"/>
        <function-ref name="setCca" scoped="" ref="0x7f2e141e91c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2e141e9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f2e141df060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f2e141df060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2e141df3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2e141df570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2e141df700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2e141df890"/>
        <function-ref name="setCca" scoped="" ref="0x7f2e141dfa20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2e141dfbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2e141d4330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e141d4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2e141d46b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2e141d4840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2e141d49d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2e141d4b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f2e141d4cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2e141d4e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f2e141d62a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f2e141d62a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e141d6620"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e141d67b0"/>
        <function-ref name="modify" scoped="" ref="0x7f2e141d6940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e141d6ad0"/>
        <function-ref name="resend" scoped="" ref="0x7f2e141d6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2e141eb990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e141eb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e141ebd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e141ea020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e141ea1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e141ea340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e141ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f2e141d3420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f2e141d3420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2e141d37a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f2e141d3930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f2e141dd760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f2e141dd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2e141ddae0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e141ddc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2e141cc920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e141cc920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2e141ccca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2e141cce30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2e141d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f2e141e1b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f2e141e1b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f2e141e7020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f2e141e71b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f2e141e7340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f2e141e74d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f2e141e7660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f2e141e77f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f2e141e7980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f2e141e7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2e141d3bf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e141d3bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e141d5020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e141d51b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e141d5340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e141d54d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e141d5660"/>
        <function-ref name="get" scoped="" ref="0x7f2e141d57f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e141d5980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e141d4020"/>
        <function-ref name="set" scoped="" ref="0x7f2e141d5b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e141d5ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e141d5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f2e141e9640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e141e9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e141e99c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e141e9b50"/>
        <function-ref name="request" scoped="" ref="0x7f2e141e9ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e141e9e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e141e8030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f2e141cf110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f2e141cf110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2e141cf590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2e141cf720"/>
        <function-ref name="isState" scoped="" ref="0x7f2e141cf8b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2e141cfa40"/>
        <function-ref name="requestState" scoped="" ref="0x7f2e141cfbd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f2e141cfd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f2e141c2b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f2e141c2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e141c0020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e141c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f2e141c3ba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f2e141c3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e141c2020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e141c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f2e141c4c20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f2e141c4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e141c3020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e141c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f2e1416adc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f2e1416adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f2e14176180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f2e14176310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f2e141764a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f2e14176630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f2e141767c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f2e14176950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2e14176ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f2e14176c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f2e14176e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f2e14175020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f2e141751b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f2e14175340"/>
        <function-ref name="sync" scoped="" ref="0x7f2e141754d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2e14175760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f2e141758f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f2e141670c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f2e141670c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e14167cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e14166170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f2e14175bf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f2e14175bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f2e14169020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f2e141691b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f2e14169340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f2e141694d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f2e14169660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f2e141697f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f2e14169980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f2e14169b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e1417a950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e1417a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e1417acd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e1417ae60"/>
        <function-ref name="request" scoped="" ref="0x7f2e14177020"/>
        <function-ref name="granted" scoped="" ref="0x7f2e141771b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e14177340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f2e14160970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f2e14160970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f2e14160cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f2e14160e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f2e1415f030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f2e1415f1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f2e1415f350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f2e1415f4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2e1415f670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f2e1415f800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f2e1415f990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f2e1415fb20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f2e1415fcb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f2e1415fe40"/>
        <function-ref name="sync" scoped="" ref="0x7f2e1415e020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2e1415e2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f2e1415e440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f2e1413e1e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e1413e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1413e560"/>
        <function-ref name="write" scoped="" ref="0x7f2e1413e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f2e14159020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2e14159020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f2e141593a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f2e14159a10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f2e14159a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e141552a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e141572a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e14157c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e14157760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e14155760"/>
        <function-ref name="start" scoped="" ref="0x7f2e14158890"/>
        <function-ref name="stop" scoped="" ref="0x7f2e14158da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f2e1413f020" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e1413f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1413f3a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1413f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f2e14154e70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f2e14154e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14153220"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e141533b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14153540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e141536d0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14153860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e141539f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14153b80"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14153d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f2e1415db40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f2e1415db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1415c750"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e1415cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f2e1412cca0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f2e1412cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e1412b0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e1412b230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f2e1413ea80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2e1413ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1413ee00"/>
        <function-ref name="write" scoped="" ref="0x7f2e1413d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f2e1413d3c0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2e1413d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1413d740"/>
        <function-ref name="write" scoped="" ref="0x7f2e1413d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f2e14140cd0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2e14140cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e141470a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e14147230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f2e14148390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2e14148390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f2e14148710"/>
        <function-ref name="changed" scoped="" ref="0x7f2e141488a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f2e14148a30"/>
        <function-ref name="setAddress" scoped="" ref="0x7f2e14148bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f2e14155c50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f2e14155c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14154020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e141541b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14154340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e141544d0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14154660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e141547f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14154980"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14154b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f2e1413b450" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e1413b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1413b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f2e141520f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f2e141520f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14152470"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14152600"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14152790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14152920"/>
        <function-ref name="get" scoped="" ref="0x7f2e14152ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14152c40"/>
        <function-ref name="set" scoped="" ref="0x7f2e14152dd0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14151020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e14161510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e14161510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e14161890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f2e1413f8f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e1413f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1413fc70"/>
        <function-ref name="write" scoped="" ref="0x7f2e1413fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f2e1413bd70" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2e1413bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1413a180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f2e1413a520" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f2e1413a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e1413a8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e1413aa30"/>
        <function-ref name="request" scoped="" ref="0x7f2e1413abc0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e1413ad50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e14138020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f2e14137180" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f2e14137180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e14137500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e14137690"/>
        <function-ref name="request" scoped="" ref="0x7f2e14137820"/>
        <function-ref name="granted" scoped="" ref="0x7f2e141379b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e14137b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f2e1415e740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f2e1415e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f2e1415eac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f2e1415ec50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f2e1415ede0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f2e1415d020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f2e1415d1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f2e1415d340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f2e1415d4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f2e1415d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f2e141475d0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2e141475d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e14147950"/>
        <function-ref name="write" scoped="" ref="0x7f2e14147ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f2e14140420" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2e14140420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e141407a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e14140930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f2e14139570" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2e14139570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e141398f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2e14137e00" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e14137e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e141361c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e14136350"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e141364e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e14136670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e14136800"/>
        <function-ref name="get" scoped="" ref="0x7f2e14136990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e14136b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e141351b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14136cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e14136e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e14135020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f2e1412edb0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f2e1412edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e1412c180"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e1412c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e14161b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e14161b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e14160020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e141601b0"/>
        <function-ref name="request" scoped="" ref="0x7f2e14160340"/>
        <function-ref name="granted" scoped="" ref="0x7f2e141604d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e14160660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f2e14143e20" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2e14143e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1414b1c0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1414b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f2e141434a0" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2e141434a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e14143920"/>
        <function-ref name="write" scoped="" ref="0x7f2e14143ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f2e1414dc00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f2e1414dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14150020"/>
        <function-ref name="disable" scoped="" ref="0x7f2e141501b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2e14150340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2e141504d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f2e141383d0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f2e141383d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e14138750"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e141388e0"/>
        <function-ref name="request" scoped="" ref="0x7f2e14138a70"/>
        <function-ref name="granted" scoped="" ref="0x7f2e14138c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e14138d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f2e14139c80" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2e14139c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1413b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e140b67e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e140b67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e140b6b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f2e140b2220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f2e140b2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e140b0b30"/>
        <function-ref name="fired" scoped="" ref="0x7f2e140b1a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e140b04e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e140b0020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e140af020"/>
        <function-ref name="start" scoped="" ref="0x7f2e140b1090"/>
        <function-ref name="stop" scoped="" ref="0x7f2e140b15a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e140ac260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e140ac260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e140ac5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f2e140acaf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f2e140acaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e14072390"/>
        <function-ref name="fired" scoped="" ref="0x7f2e14073360"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e14073ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e14073820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e14072850"/>
        <function-ref name="start" scoped="" ref="0x7f2e14074970"/>
        <function-ref name="stop" scoped="" ref="0x7f2e14074e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2e12e5f020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2e12e5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e12e5d870"/>
        <function-ref name="fired" scoped="" ref="0x7f2e12e5e840"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e12e5d220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e12e5ed00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e12e5dd30"/>
        <function-ref name="start" scoped="" ref="0x7f2e12e5fe30"/>
        <function-ref name="stop" scoped="" ref="0x7f2e12e5e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e12e60720" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e12e60720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e12e60aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2e12e58020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2e12e58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e12e55870"/>
        <function-ref name="fired" scoped="" ref="0x7f2e12e57840"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e12e55220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e12e57d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e12e55d30"/>
        <function-ref name="start" scoped="" ref="0x7f2e12e58e30"/>
        <function-ref name="stop" scoped="" ref="0x7f2e12e57380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e12e59760" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e12e59760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e12e59ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2e12e3f8f0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e12e3f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e12e3fc70"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e12e3fe00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e12e3e020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e12e3e1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e12e3e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2e12e43e70" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e12e43e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e12e42220"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e12e423b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e12e42540"/>
        <function-ref name="get" scoped="" ref="0x7f2e12e426d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e12e42860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e12e429f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e12e42b80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e12e42d10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e12e40020"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e12e401b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e12e40340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2e12e405d0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e12e405d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e12e40950"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e12e40ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e12e40c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e12e40e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e12e3f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e12e3f1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e12e3f340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e12e3f4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e12e3f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f2e12e35760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2e12e35760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e12e35ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2e12e35c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2e12e35e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2e12e34020"/>
        <function-ref name="fired" scoped="" ref="0x7f2e12e341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2e12e39dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e12e39dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e12e37180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e12e37310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e12e374a0"/>
        <function-ref name="get" scoped="" ref="0x7f2e12e37630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e12e377c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e12e37950"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e12e37ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e12e37c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e12e37e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e12e36020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e12e361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2e12e3cbd0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2e12e3cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e12e394e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e12e3a4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e12e3ae60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e12e3a9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e12e399a0"/>
        <function-ref name="start" scoped="" ref="0x7f2e12e3ba80"/>
        <function-ref name="stop" scoped="" ref="0x7f2e12e3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e12e3c340" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e12e3c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e12e3c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f2e12e36440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e12e36440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e12e367c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e12e36950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e12e36ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e12e36c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e12e36e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e12e35020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e12e351b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e12e35340"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e12e354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2e14096080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e14096080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e14095020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e140959a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e140954e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e14095e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f2e1408e0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f2e1408e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1408c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1408c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1408c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e1408ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2e14091cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e14091cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e14090b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1408f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1408f090"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e1408fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2e12e521d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2e12e521d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e12e50b30"/>
        <function-ref name="fired" scoped="" ref="0x7f2e12e519f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e12e504e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e12e50020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e12e4e020"/>
        <function-ref name="start" scoped="" ref="0x7f2e12e51020"/>
        <function-ref name="stop" scoped="" ref="0x7f2e12e51530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f2e12e4cb90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f2e12e4cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e12e494e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e12e4a4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e12e4ae60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e12e4a9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e12e499a0"/>
        <function-ref name="start" scoped="" ref="0x7f2e12e4b9d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e12e4a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2e12e4e690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e12e4e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e12e4d5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e12e4c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e12e4da70"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e12e4c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f2e1406c090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f2e1406c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1406c410"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1406c5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1406c730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1406c8c0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1406ca50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1406cbe0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1406cd70"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1406b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f2e1406b390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f2e1406b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1406b710"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1406b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1406ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1406bbc0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1406bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14069020"/>
        <function-ref name="set" scoped="" ref="0x7f2e140691b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14069340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f2e140696a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f2e140696a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14069a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14069bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14069d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14068020"/>
        <function-ref name="get" scoped="" ref="0x7f2e140681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14068340"/>
        <function-ref name="set" scoped="" ref="0x7f2e140684d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14068660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f2e1406ee60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f2e1406ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1406d210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1406d3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1406d530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1406d6c0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1406d850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1406d9e0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1406db70"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1406dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f2e14067ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f2e14067ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e140660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14066230"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e140663c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14066550"/>
        <function-ref name="get" scoped="" ref="0x7f2e140666e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14066870"/>
        <function-ref name="set" scoped="" ref="0x7f2e14066a00"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14066b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f2e140b4b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f2e140b4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1406e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1406e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1406e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1406e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1406e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1406e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1406e980"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1406eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f2e140689b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f2e140689b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14068d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14067020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e140671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14067340"/>
        <function-ref name="get" scoped="" ref="0x7f2e140674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14067660"/>
        <function-ref name="set" scoped="" ref="0x7f2e140677f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14067980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e140632f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e140632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14063670"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14063800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14063990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14061660"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14063cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14063e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14062020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e140621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14062340"/>
        <function-ref name="get" scoped="" ref="0x7f2e140624d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14062660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e140627f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14062980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14062c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14062da0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14061020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e140611b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14061340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14063b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e140614d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e14064020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14064020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e140643a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14064530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e140646c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14064850"/>
        <function-ref name="get" scoped="" ref="0x7f2e140649e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14064b70"/>
        <function-ref name="set" scoped="" ref="0x7f2e14064d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14063020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e1405e7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e1405e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1405eb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1405ecb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1405ee40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1405ca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1405d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1405d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1405d4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1405d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1405d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1405d980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1405db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1405dca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1405de30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1405c120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1405c2b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1405c440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1405c5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1405c760"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1405d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1405c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e1405f630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e1405f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1405f9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1405fb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1405fcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1405fe60"/>
        <function-ref name="get" scoped="" ref="0x7f2e1405e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1405e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1405e340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1405e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e14059c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e14059c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14058020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e140581b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14058340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14056020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14058660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e140587f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14058980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14058b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14058ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14058e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14057020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e140571b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14057340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e140575d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14057760"/>
        <function-ref name="set" scoped="" ref="0x7f2e140578f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14057a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14057c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e140584d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14057da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e1405ab00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e1405ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1405ae80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14059030"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e140591c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14059350"/>
        <function-ref name="get" scoped="" ref="0x7f2e140594e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14059670"/>
        <function-ref name="set" scoped="" ref="0x7f2e14059800"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14059990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e140532f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e140532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14053670"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14053800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14053990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14050660"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14053cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14053e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14051020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e140511b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14051340"/>
        <function-ref name="get" scoped="" ref="0x7f2e140514d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14051660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e140517f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14051980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14051c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14051da0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14050020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e140501b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14050340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14053b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e140504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e14054020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14054020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e140543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14054530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e140546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14054850"/>
        <function-ref name="get" scoped="" ref="0x7f2e140549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14054b70"/>
        <function-ref name="set" scoped="" ref="0x7f2e14054d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14053020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e1404d7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e1404d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1404db20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1404dcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e1404de40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e1404ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1404c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1404c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e1404c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e1404c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1404c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1404c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e1404cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e1404cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e1404ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e1404b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e1404b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1404b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e1404b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e1404b760"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1404c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e1404b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e1404e630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e1404e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e1404e9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1404eb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1404ecd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1404ee60"/>
        <function-ref name="get" scoped="" ref="0x7f2e1404d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1404d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1404d340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1404d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e14048c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e14048c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14047020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e140471b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14047340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14045020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14047660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e140477f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14047980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e14047b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14047ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e14047e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14046020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e140461b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14046340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e140465d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14046760"/>
        <function-ref name="set" scoped="" ref="0x7f2e140468f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14046a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14046c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e140474d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14046da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e14049af0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14049af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14049e70"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14048030"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e140481c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14048350"/>
        <function-ref name="get" scoped="" ref="0x7f2e140484e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14048670"/>
        <function-ref name="set" scoped="" ref="0x7f2e14048800"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14048990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e140422f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e140422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14042670"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14042800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14042990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14040660"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14042cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14042e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14041020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e140411b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14041340"/>
        <function-ref name="get" scoped="" ref="0x7f2e140414d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14041660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e140417f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14041980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e14041c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14041da0"/>
        <function-ref name="set" scoped="" ref="0x7f2e14040020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e140401b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e14040340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14042b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e140404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e14043020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14043020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e140433a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14043530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e140436c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e14043850"/>
        <function-ref name="get" scoped="" ref="0x7f2e140439e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14043b70"/>
        <function-ref name="set" scoped="" ref="0x7f2e14043d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2e14042020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f2e14025700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f2e14025700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f2e14025a80"/>
        <function-ref name="disable" scoped="" ref="0x7f2e14025c10"/>
        <function-ref name="captured" scoped="" ref="0x7f2e14025da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f2e14029020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f2e14029400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f2e14029400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e14029780"/>
        <function-ref name="disable" scoped="" ref="0x7f2e14029910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2e14029aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2e14029c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f2e14028060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f2e14028060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e140283e0"/>
        <function-ref name="disable" scoped="" ref="0x7f2e14028570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2e14028700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2e14028890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f2e1400aa80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f2e1400aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2e1400ae00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2e14008020"/>
        <function-ref name="captured" scoped="" ref="0x7f2e140081b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e14008340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e140084d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2e14008660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2e14022c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2e14022c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f2e1400b020"/>
        <function-ref name="disable" scoped="" ref="0x7f2e1400b1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f2e1400b340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f2e1400b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f2e1400b760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2e1400b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2e1400bae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2e1400bc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1400be00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2e1400a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2e1400a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1400a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2e1400a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2e1400a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2e1400a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f2e14008930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e14008930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e14008cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e14008e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e14007020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e14006c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e14007340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e140074d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e14007660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e140077f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e14007980"/>
        <function-ref name="get" scoped="" ref="0x7f2e14007b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e14007ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e14007e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e14006020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e140062b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e14006440"/>
        <function-ref name="set" scoped="" ref="0x7f2e140065d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e14006760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e140068f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e140071b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e14006a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f2e13ff63f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f2e13ff63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13ff6770"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13ff6900"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ff6a90"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ff6c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13ff6db0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13ff5020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13ff51b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13ff5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f2e13fea3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f2e13fea3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fea770"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fea900"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13feaa90"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13feac20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13feadb0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fe9020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fe91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fe9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f2e13ff3d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f2e13ff3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13ff2100"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13ff2290"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ff2420"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ff25b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13ff2740"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13ff28d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13ff2a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13ff2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f2e13ff03f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f2e13ff03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13ff0770"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13ff0900"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ff0a90"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ff0c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13ff0db0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fef020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fef1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f2e13ffebc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f2e13ffebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13ff8020"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13ff81b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ff8340"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ff84d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13ff8660"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13ff87f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13ff8980"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13ff8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f2e13fedd50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f2e13fedd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fec210"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fec3a0"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fec530"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fec6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fec850"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fec9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fecb70"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fecd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f2e13ff5710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f2e13ff5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13ff5a90"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13ff5c20"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ff5db0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ff4020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13ff41b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13ff4340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13ff44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13ff4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f2e13fe9710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f2e13fe9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fe9a90"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fe9c20"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fe9db0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fe8020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fe81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fe8340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fe84d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fe8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f2e13ff95e0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f2e13ff95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13ff9960"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13ff9af0"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ff9c80"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ff9e10"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fff020"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fff1b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fff340"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f2e13fef710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f2e13fef710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fefa90"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fefc20"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fefdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fee020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fee1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fee340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fee4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f2e13ff7020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f2e13ff7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13ff73a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13ff7530"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ff76c0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ff7850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13ff79e0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13ff7b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13ff7d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13ff6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f2e13feb100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f2e13feb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13feb480"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13feb610"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13feb7a0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13feb930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13febac0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13febc50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13febde0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f2e13ff4a30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f2e13ff4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13ff4db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13ff3020"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ff31b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ff3340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13ff34d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13ff3660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13ff37f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13ff3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f2e13ff1020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f2e13ff1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13ff13a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13ff1530"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ff16c0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ff1850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13ff19e0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13ff1b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13ff1d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13ff0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f2e13fff8a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f2e13fff8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fffc20"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fffdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ffe020"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ffe1b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13ffe340"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13ffe4d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13ffe660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13ffe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f2e13feea30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f2e13feea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13feedb0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fed020"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fed1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fed340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fed4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fed660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fed7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fed980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f2e13fdf3f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f2e13fdf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fdf770"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fdf900"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fdfa90"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fdfc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fdfdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fde020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fde1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fde340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f2e13fd33f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f2e13fd33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fd3770"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fd3900"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fd3a90"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fd3c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fd3db0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fd2020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fd21b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fd2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f2e13fdcd50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f2e13fdcd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fdb100"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fdb290"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fdb420"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fdb5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fdb740"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fdb8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fdba60"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fdbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f2e13fd93f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f2e13fd93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fd9770"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fd9900"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fd9a90"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fd9c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fd9db0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fd8020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fd81b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fd8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f2e13fe2d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f2e13fe2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fe1100"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fe1290"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fe1420"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fe15b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fe1740"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fe18d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fe1a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fe1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f2e13fd6d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f2e13fd6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fd5210"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fd53a0"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fd5530"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fd56c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fd5850"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fd59e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fd5b70"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fd5d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f2e13fde710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f2e13fde710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fdea90"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fdec20"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fdedb0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fdd020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fdd1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fdd340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fdd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fdd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f2e13fd2710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f2e13fd2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fd2a90"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fd2c20"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fd2db0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fd1020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fd11b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fd1340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fd14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fd1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f2e13fe77a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f2e13fe77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fe7b20"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fe7cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fe7e40"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fe3020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fe31b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fe3340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fe34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fe3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f2e13fd8710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f2e13fd8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fd8a90"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fd8c20"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fd8db0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fd7020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fd71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fd7340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fd74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fd7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f2e13fe0020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f2e13fe0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fe03a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fe0530"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fe06c0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fe0850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fe09e0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fe0b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fe0d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fdf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f2e13fd4100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f2e13fd4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fd4480"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fd4610"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fd47a0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fd4930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fd4ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fd4c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fd4de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f2e13fdda30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f2e13fdda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fdddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fdc020"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fdc1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fdc340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fdc4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fdc660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fdc7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fdc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f2e13fda020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f2e13fda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fda3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fda530"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fda6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fda850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fda9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fdab70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fdad00"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fd9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f2e13fe3a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f2e13fe3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fe3db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fe2020"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fe21b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fe2340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fe24d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fe2660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fe27f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fe2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f2e13fd7a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f2e13fd7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13fd7db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13fd6020"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13fd61b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13fd6340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13fd64d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13fd6660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13fd67f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13fd6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f2e13ec72f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f2e13ec72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13ec7670"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13ec7800"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ec7990"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13ec7b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13ec7cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13ec7e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13eba020"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13eba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f2e13ec8680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2e13ec8680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e13ec8a00"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13ec8b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2e13ec8d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2e13ec7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f2e13eb87a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f2e13eb87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13eb8b20"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13eb8cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13eb8e40"/>
        <function-ref name="edge" scoped="" ref="0x7f2e13eb7020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2e13eb71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2e13eb7340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2e13eb74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2e13eb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f2e13eb9b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2e13eb9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e13eb8020"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13eb81b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2e13eb8340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2e13eb84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f2e13a55e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e13a55e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a54410"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a545a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f2e13a5f160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f2e13a5f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f2e13a59e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e13a59e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a57210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f2e13a53880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e13a53880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a53c00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a53d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f2e13a4b0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f2e13a4b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a4b420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a4b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f2e13a520a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f2e13a520a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a52420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a525b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f2e13a3f500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2e13a3f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a3f880"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a3fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f2e13a41500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2e13a41500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a41880"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a41a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f2e13a5d490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2e13a5d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f2e13a47880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f2e13a47880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a47c00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a47d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f2e13a42500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e13a42500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a42880"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a42a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f2e13a57e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2e13a57e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a56210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f2e13a56e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2e13a56e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a55210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f2e13a4d880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f2e13a4d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a4dc00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a4dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f2e13a4e0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f2e13a4e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a4e420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a4e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f2e13a52880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2e13a52880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a52c00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a52d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2e13a61a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13a61a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2e13a61e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2e13a60020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2e13a601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f2e13a5ce00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e13a5ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f2e13a5b490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2e13a5b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5b910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f2e13a46c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2e13a46c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a450a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a45230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f2e13a5bbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f2e13a5bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f2e13a42ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e13a42ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a410a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a41230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f2e13a5c160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e13a5c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f2e13a470a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f2e13a470a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a47420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a475b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f2e13a56670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f2e13a56670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a569f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a56b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f2e13a57670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e13a57670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a579f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a57b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f2e13a60ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2e13a60ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a60e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f2e13a480a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f2e13a480a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a48420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a485b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f2e13a4b880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f2e13a4b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a4bc00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a4bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f2e13a48880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f2e13a48880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a48c00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a48d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f2e13a40ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2e13a40ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a3f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a3f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f2e13a41ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2e13a41ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a400a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a40230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f2e13a4e880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f2e13a4e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a4ec00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a4ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f2e13a490a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f2e13a490a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a49420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a495b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f2e13a44ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f2e13a44ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a420a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a42230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f2e13a50880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f2e13a50880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a50c00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a50d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f2e13a3fce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2e13a3fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e13a3e0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e13a3e230"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a3e3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e13a3e550"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e13a3e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f2e13a60480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2e13a60480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a60800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f2e13a59670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f2e13a59670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a599f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a59b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f2e13a55670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f2e13a55670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a559f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a55b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f2e13a4c0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f2e13a4c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a4c420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a4c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f2e13a500a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2e13a500a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a50420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a505b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f2e13a4c880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f2e13a4c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a4cc00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a4cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f2e13a54870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2e13a54870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a54bf0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a54d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f2e13a5f7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2e13a5f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f2e13a530a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e13a530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a53420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a535b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13a62e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13a62e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13a611c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13a61350"/>
        <function-ref name="request" scoped="" ref="0x7f2e13a614e0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13a61670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13a61800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f2e13a5a2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2e13a5a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f2e13a59020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f2e13a59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f2e13a44500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2e13a44500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a44880"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a44a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f2e13a45ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2e13a45ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a440a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a44230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f2e13a5c7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e13a5c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f2e13a45500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2e13a45500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a45880"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a45a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f2e13a40500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f2e13a40500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a40880"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a40a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f2e13a4d0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f2e13a4d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a4d420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a4d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f2e13a49880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f2e13a49880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a49c00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a49d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f2e13a5fe00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2e13a5fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f2e13a5dae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2e13a5dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f2e13a4f0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f2e13a4f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a4f420"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a4f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f2e13a5a940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2e13a5a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a5acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f2e13a4f880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f2e13a4f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a4fc00"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a4fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f2e13a460a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f2e13a460a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a46820"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a469b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f2e13a3e9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2e13a3e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e13a3ed30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e13a3d020"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a3d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e13a3d340"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e13a3d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f2e13e732c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f2e13e732c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e13e73640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e13e737d0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13e73960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e13e73af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e13e73c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2e13e74350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13e74350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2e13e746d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2e13e74860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2e13e749f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f2e13e72540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f2e13e72540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13e728c0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13e72a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f2e13e71370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f2e13e71370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13e716f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13e71880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13e764d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13e764d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13e76850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13e769e0"/>
        <function-ref name="request" scoped="" ref="0x7f2e13e76b70"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13e76d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13e74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f2e13e6f1d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f2e13e6f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13e6f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f2e13e5a2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f2e13e5a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e13e5a660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e13e5a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f2e13e6a890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f2e13e6a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e13e6ac10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e13e6ada0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13e69020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e13e691b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e13e69340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2e13e6c660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13e6c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2e13e6c9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2e13e6cb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2e13e6cd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f2e13e62c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f2e13e62c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f2e13e64020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f2e13e5ab40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f2e13e5ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2e13e61020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2e13e611b0"/>
        <function-ref name="isState" scoped="" ref="0x7f2e13e61340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2e13e614d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f2e13e61660"/>
        <function-ref name="forceState" scoped="" ref="0x7f2e13e617f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f2e13e65060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f2e13e65060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13e653e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13e65570"/>
        <function-ref name="request" scoped="" ref="0x7f2e13e65700"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13e65890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13e65a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f2e13e69ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f2e13e69ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13e68020"/>
        <function-ref name="write" scoped="" ref="0x7f2e13e681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f2e13e68a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f2e13e68a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13e68db0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13e66020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2e13e61a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e13e61a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e13e61df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e13e5b020"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e13e5b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e13e5b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e13e5b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2e13e5b660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e13e5b7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e13e5be30"/>
        <function-ref name="set" scoped="" ref="0x7f2e13e5b980"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e13e5bb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e13e5bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13e6b510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13e6b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13e6b890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13e6ba20"/>
        <function-ref name="request" scoped="" ref="0x7f2e13e6bbb0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13e6bd40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13e6a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f2e13e56bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f2e13e56bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e13e55020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e13e551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f2e13e668b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f2e13e668b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13e66c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f2e13dfb770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2e13dfb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2e13dfbaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2e13dfbc80"/>
        <function-ref name="isState" scoped="" ref="0x7f2e13dfbe10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2e13df7020"/>
        <function-ref name="requestState" scoped="" ref="0x7f2e13df71b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f2e13df7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f2e13df61d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2e13df61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2e13df6550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2e13df66e0"/>
        <function-ref name="isState" scoped="" ref="0x7f2e13df6870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2e13df6a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f2e13df6b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f2e13df6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e13df2020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e13df2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e13df23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f2e13df2b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2e13df2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2e13df1020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2e13df11b0"/>
        <function-ref name="isState" scoped="" ref="0x7f2e13df1340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2e13df14d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f2e13df1660"/>
        <function-ref name="forceState" scoped="" ref="0x7f2e13df17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f2e13a8a020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f2e13a8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e13a8a3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e13a8a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f2e13dd88f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f2e13dd88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f2e13dd8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13dd9c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13dd9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13dd8020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13dd81b0"/>
        <function-ref name="request" scoped="" ref="0x7f2e13dd8340"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13dd84d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13dd8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2e12d605d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e12d605d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2e12d60950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2e12d60ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f2e12d5d020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f2e12d5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e12d5d3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e12d5d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f2e12d5d7c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2e12d5d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2e12d5db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f2e12d60d70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f2e12d60d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f2e12d5e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e12d61940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e12d61940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e12d61cc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e12d61e50"/>
        <function-ref name="request" scoped="" ref="0x7f2e12d60020"/>
        <function-ref name="granted" scoped="" ref="0x7f2e12d601b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e12d60340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f2e12d5e410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f2e12d5e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f2e12d5e790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f2e12d5e920"/>
        <function-ref name="splitRead" scoped="" ref="0x7f2e12d5eab0"/>
        <function-ref name="write" scoped="" ref="0x7f2e12d5ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f2e13d6f8e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13d6f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2e13d6fc60"/>
        <function-ref name="configure" scoped="" ref="0x7f2e13d6fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f2e13d71850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f2e13d71850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e13d71bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e13d71d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f2e13d6ca40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2e13d6ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2e13d6cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f2e13d72110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f2e13d72110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f2e13d72490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f2e13d6d690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f2e13d6d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13d6da10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13d6dba0"/>
        <function-ref name="request" scoped="" ref="0x7f2e13d6dd30"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13d6c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13d6c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13d78d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13d78d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13d73180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13d73310"/>
        <function-ref name="request" scoped="" ref="0x7f2e13d734a0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13d73630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13d737c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f2e13d72790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f2e13d72790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f2e13d72b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f2e13d72ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f2e13d72e30"/>
        <function-ref name="write" scoped="" ref="0x7f2e13d71020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f2e13d68b40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2e13d68b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2e13d6a020"/>
        <function-ref name="txDone" scoped="" ref="0x7f2e13d6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f2e13cf6250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13cf6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2e13cf65f0"/>
        <function-ref name="configure" scoped="" ref="0x7f2e13cf6780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f2e13cf5c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f2e13cf5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e13cf4020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e13cf41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f2e13cf33e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2e13cf33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2e13cf3780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f2e13cf6a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f2e13cf6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f2e13cf6d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f2e13cf3a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f2e13cf3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2e13cf3dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2e13cf1020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2e13cf11b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2e13cf1340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2e13cf14d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2e13cf1660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2e13cf17f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2e13cf1980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2e13cf1b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2e13cf1ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2e13cf1e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2e13cf0020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2e13cf01b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2e13cf0440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2e13cf05d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2e13cf0760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2e13cf08f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2e13cf0a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2e13cf0c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2e13cf0da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2e13cef020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2e13cef1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2e13cef340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2e13cef4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e13cef660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2e13cef9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2e13cefb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2e13cefd10"/>
        <function-ref name="tx" scoped="" ref="0x7f2e13cee020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2e13cee1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2e13cee340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2e13cee4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2e13cee660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2e13cee7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f2e13cee980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2e13ceeb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2e13ceeca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2e13ceee30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2e13ced020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2e13ced1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2e13cedc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e13cedc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e13cec020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e13cec1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e13cec340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e13cec4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e13cec660"/>
        <function-ref name="get" scoped="" ref="0x7f2e13cec7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e13cec980"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e13ceb020"/>
        <function-ref name="set" scoped="" ref="0x7f2e13cecca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e13cecb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e13cece30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f2e13cf45b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f2e13cf45b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13cf4950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13cf4ae0"/>
        <function-ref name="request" scoped="" ref="0x7f2e13cf4c70"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13cf4e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13cf3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13cf7470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13cf7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13cf7810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13cf79a0"/>
        <function-ref name="request" scoped="" ref="0x7f2e13cf7b30"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13cf7cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13cf7e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f2e13cf5060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f2e13cf5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f2e13cf53e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f2e13cf5570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f2e13cf5700"/>
        <function-ref name="write" scoped="" ref="0x7f2e13cf5890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f2e13ced480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2e13ced480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2e13ced800"/>
        <function-ref name="txDone" scoped="" ref="0x7f2e13ced990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f2e13ceb2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f2e13ceb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e13ceb670"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e13ceb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f2e13cdb2c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2e13cdb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e13cdb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f2e13cdfd10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2e13cdfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2e13cde0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f2e13cde270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f2e13ce3020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2e13ce3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2e13ce33a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2e13ce3530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2e13ce36c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2e13ce3850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2e13ce39e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2e13ce3b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2e13ce3d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2e13ce2020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2e13ce21b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2e13ce2340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2e13ce24d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2e13ce2660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2e13ce27f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2e13ce2a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2e13ce2c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2e13ce2da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2e13ce1020"/>
        <function-ref name="isUart" scoped="" ref="0x7f2e13ce11b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2e13ce1340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2e13ce14d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2e13ce1660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2e13ce17f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2e13ce1980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2e13ce1b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e13ce1ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2e13ce0220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2e13ce03b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2e13ce0540"/>
        <function-ref name="tx" scoped="" ref="0x7f2e13ce06d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2e13ce0860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2e13ce09f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2e13ce0b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2e13ce0d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2e13cdf020"/>
        <function-ref name="rx" scoped="" ref="0x7f2e13cdf1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2e13cdf340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2e13cdf4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2e13cdf660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2e13cdf7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2e13cdf980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f2e13ca1bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f2e13ca1bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13ca0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13ca01b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e13ca0340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13c9e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13ca0660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13ca07f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e13ca0980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e13ca0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13ca0ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e13ca0e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e13c9f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e13c9f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e13c9f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e13c9f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e13c9f760"/>
        <function-ref name="set" scoped="" ref="0x7f2e13c9f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e13c9fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e13ca04d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e13c9fc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e13c9fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f2e13cd52d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f2e13cd52d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2e13cd5650"/>
        <function-ref name="txDone" scoped="" ref="0x7f2e13cd57e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f2e13c9e3e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f2e13c9e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13c9e760"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13c9e8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e13c9ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13c9c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13c9eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13c9d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e13c9d1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e13c9d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13c9d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2e13c9d660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e13c9d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e13c9d980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e13c9db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e13c9dda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e13c9c020"/>
        <function-ref name="set" scoped="" ref="0x7f2e13c9c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e13c9c340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e13c9ec10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e13c9c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e13c9c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f2e13c9cbb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f2e13c9cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13c9b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13c9b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e13c9b340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13c99020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13c9b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13c9b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e13c9b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e13c9bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13c9bca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e13c9be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e13c9a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e13c9a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e13c9a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e13c9a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e13c9a760"/>
        <function-ref name="set" scoped="" ref="0x7f2e13c9a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e13c9aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e13c9b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e13c9ac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e13c9ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f2e13cda700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f2e13cda700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2e13cdaa80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2e13cdac10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2e13cdada0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2e13cd9020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2e13cd91b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2e13cd9340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2e13cd94d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2e13cd9660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2e13cd97f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2e13cd9980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2e13cd9b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2e13cd9ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2e13cd9e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2e13cd8120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2e13cd82b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2e13cd8440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2e13cd85d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2e13cd8760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2e13cd88f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2e13cd8a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2e13cd8c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2e13cd8da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2e13cd7020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2e13cd71b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e13cd7340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2e13cd76d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2e13cd7860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2e13cd79f0"/>
        <function-ref name="tx" scoped="" ref="0x7f2e13cd7b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2e13cd7d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2e13cd6020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2e13cd61b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2e13cd6340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2e13cd64d0"/>
        <function-ref name="rx" scoped="" ref="0x7f2e13cd6660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2e13cd67f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2e13cd6980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2e13cd6b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2e13cd6ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2e13cd6e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f2e13cacd10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f2e13cacd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2e13cd30e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2e13cd3270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2e13cd3400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2e13cd3590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2e13cd3720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2e13cd38b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2e13cd3a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2e13cd3bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e13cd3d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2e13cd2020"/>
        <function-ref name="getData" scoped="" ref="0x7f2e13cd21b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2e13cd2340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2e13cd24d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2e13cd2760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2e13cd28f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f2e13cd2a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2e13cd2c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2e13cd2da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2e13caa020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2e13caa1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2e13caa340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2e13caa4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2e13caa660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2e13caa7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2e13caa980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2e13caad10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2e13ca9020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2e13ca91b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2e13ca9340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2e13ca94d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2e13ca9660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2e13ca97f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2e13ca9980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2e13ca9b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2e13ca9ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2e13ca9e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2e13ca8020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2e13ca81b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2e13ca8340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2e13ca84d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2e13ca8660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2e13ca87f0"/>
        <function-ref name="setData" scoped="" ref="0x7f2e13ca8980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2e13ca8b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2e13ca8ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2e13ca8e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2e13ca7020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2e13ca71b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2e13ca7340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2e13ca78d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2e13ca7a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2e13ca7bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2e13ca7d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2e13ca6020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2e13ca61b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2e13ca6340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2e13ca64d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2e13ca6660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2e13ca67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f2e13ca33e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f2e13ca33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13ca3760"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13ca38f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e13ca3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13ca17f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13ca3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13ca2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e13ca21b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e13ca2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13ca24d0"/>
        <function-ref name="get" scoped="" ref="0x7f2e13ca2660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e13ca27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e13ca2980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e13ca2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e13ca2da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e13ca1020"/>
        <function-ref name="set" scoped="" ref="0x7f2e13ca11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e13ca1340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e13ca3c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e13ca14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e13ca1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f2e13cd5c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2e13cd5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e13cd4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f2e13ca6bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f2e13ca6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13ca5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13ca51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e13ca5340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13ca3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13ca5660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13ca57f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e13ca5980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e13ca5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13ca5ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e13ca5e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e13ca4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e13ca41b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e13ca4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e13ca45d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e13ca4760"/>
        <function-ref name="set" scoped="" ref="0x7f2e13ca48f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e13ca4a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e13ca54d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e13ca4c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e13ca4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2e12d55020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e12d55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2e12d553a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2e12d55530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f2e12d4d440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2e12d4d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e12d4d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2e12d45760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e12d45760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2e12d45ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f2e12d45c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f2e12d4da50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2e12d4da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2e12d4ddd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2e12d4b020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2e12d4b1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2e12d4b340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2e12d4b4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2e12d4b660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2e12d4b7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2e12d4b980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e12d4bb10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2e12d4bca0"/>
        <function-ref name="getData" scoped="" ref="0x7f2e12d4be30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2e12d4a020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2e12d4a1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2e12d4a440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2e12d4a5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f2e12d4a760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2e12d4a8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2e12d4aa80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2e12d4ac10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2e12d4ada0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2e12d49020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2e12d491b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2e12d49340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2e12d494d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2e12d49660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2e12d499f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2e12d49b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2e12d49d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2e12d48020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2e12d481b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2e12d48340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2e12d484d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2e12d48660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2e12d487f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2e12d48980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2e12d48b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2e12d48ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2e12d48e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2e12d47020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2e12d471b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2e12d47340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2e12d474d0"/>
        <function-ref name="setData" scoped="" ref="0x7f2e12d47660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2e12d477f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2e12d47980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2e12d47b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2e12d47ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2e12d47e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2e12d46020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2e12d465b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2e12d46740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2e12d468d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2e12d46a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2e12d46bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2e12d46d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2e12d45020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2e12d451b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2e12d45340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2e12d454d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f2e12d50c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2e12d50c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2e12d4d020"/>
        <function-ref name="txDone" scoped="" ref="0x7f2e12d4d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e12d56340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e12d56340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e12d566c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e12d56850"/>
        <function-ref name="request" scoped="" ref="0x7f2e12d569e0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e12d56b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e12d56d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f2e12d54020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2e12d54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2e12d543a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2e12d54530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2e12d546c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2e12d54850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2e12d549e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2e12d54b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2e12d54d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2e12d53020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2e12d531b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2e12d53340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2e12d534d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2e12d53660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2e12d537f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2e12d53a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2e12d53c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2e12d53da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2e12d52020"/>
        <function-ref name="isUart" scoped="" ref="0x7f2e12d521b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2e12d52340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2e12d524d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2e12d52660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2e12d527f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2e12d52980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2e12d52b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e12d52ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2e12d51220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2e12d513b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2e12d51540"/>
        <function-ref name="tx" scoped="" ref="0x7f2e12d516d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2e12d51860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2e12d519f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2e12d51b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2e12d51d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2e12d50020"/>
        <function-ref name="rx" scoped="" ref="0x7f2e12d501b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2e12d50340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2e12d504d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2e12d50660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2e12d507f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2e12d50980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2e12d557c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e12d557c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2e12d55b40"/>
        <function-ref name="userId" scoped="" ref="0x7f2e12d55cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2e13bf32c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e13bf32c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2e13bf3640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2e13bf37d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2e13bf28a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13bf28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2e13bf2c20"/>
        <function-ref name="configure" scoped="" ref="0x7f2e13bf2db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f2e13bf64d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f2e13bf64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2e13bf6850"/>
        <function-ref name="txDone" scoped="" ref="0x7f2e13bf69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13bf4020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13bf4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13bf43a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13bf4530"/>
        <function-ref name="request" scoped="" ref="0x7f2e13bf46c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13bf4850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13bf49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f2e13bf53f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2e13bf53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e13bf5770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2e13bf3ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e13bf3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2e13bf3e50"/>
        <function-ref name="userId" scoped="" ref="0x7f2e13bf2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f2e13bddbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e13bddbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2e13bdc020"/>
        <function-ref name="userId" scoped="" ref="0x7f2e13bdc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f2e13befd60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f2e13befd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2e13bee180"/>
        <function-ref name="txDone" scoped="" ref="0x7f2e13bee310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f2e13bdd5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f2e13bdd5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e13bdd960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f2e13bee710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2e13bee710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e13beeab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f2e13beed80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f2e13beed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2e13bdd180"/>
        <function-ref name="txDone" scoped="" ref="0x7f2e13bdd310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2e13b5da60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e13b5da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2e13b5de00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2e13b5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2e13b5b790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e13b5b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2e13b5bb30"/>
        <function-ref name="configure" scoped="" ref="0x7f2e13b5bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2e13b5c270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2e13b5c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13b5c5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f2e13b5c780"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13b5c910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13b5caa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2e13b5cc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13b5eca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13b5eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13b5d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13b5d230"/>
        <function-ref name="request" scoped="" ref="0x7f2e13b5d3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13b5d550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13b5d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f2e13b5a020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f2e13b5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2e13b5a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2e13b5ce80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e13b5ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2e13b5b220"/>
        <function-ref name="userId" scoped="" ref="0x7f2e13b5b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e12cda020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e12cda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e12cda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f2e12cda630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f2e12cda630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2e12cda9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2e12cdab40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2e12cdacd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2e12cdae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2e12cd76c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2e12cd76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2e12cd7a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2e12cd7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2e12cd49d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2e12cd49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2e12cd4d70"/>
        <function-ref name="configure" scoped="" ref="0x7f2e12cd3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2e12cd32b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f2e12cd32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2e12cd3630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2e12cd37c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2e12cd3950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2e12cd3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2e12cd7e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2e12cd7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e12cd51e0"/>
        <function-ref name="requested" scoped="" ref="0x7f2e12cd5370"/>
        <function-ref name="granted" scoped="" ref="0x7f2e12cd5500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e12cd5690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2e12cd5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2e12cd3d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e12cd3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e12cd20e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e12cd2270"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e12cd2400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e12cd2590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e12cd2720"/>
        <function-ref name="get" scoped="" ref="0x7f2e12cd28b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e12cd2a40"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e12cd11b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e12cd2d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e12cd2bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e12cd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e12cd8850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e12cd8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e12cd8bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e12cd8d80"/>
        <function-ref name="request" scoped="" ref="0x7f2e12cd7020"/>
        <function-ref name="granted" scoped="" ref="0x7f2e12cd71b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e12cd7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f2e12cd42d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f2e12cd42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2e12cd4650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2e12cd5a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2e12cd5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2e12cd5df0"/>
        <function-ref name="userId" scoped="" ref="0x7f2e12cd4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f2e12cd1480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f2e12cd1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e12cd1800"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e12cd1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f2e13b51020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2e13b51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2e13b513a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2e13b51530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2e13b516c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2e13b51850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2e13b519e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2e13b51b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2e13b51d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2e13b50020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e13b501b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2e13b50340"/>
        <function-ref name="getData" scoped="" ref="0x7f2e13b504d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2e13b50660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2e13b507f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2e13b50a80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2e13b50c10"/>
        <function-ref name="getIV" scoped="" ref="0x7f2e13b50da0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2e13b4f020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2e13b4f1b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2e13b4f340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2e13b4f4d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2e13b4f660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2e13b4f7f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2e13b4f980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2e13b4fb10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2e13b4fca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2e13b4e220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2e13b4e3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2e13b4e540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2e13b4e6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2e13b4e860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2e13b4e9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2e13b4eb80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2e13b4ed10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2e13b4d020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2e13b4d1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2e13b4d340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2e13b4d4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2e13b4d660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2e13b4d7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2e13b4d980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2e13b4db10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2e13b4dca0"/>
        <function-ref name="setData" scoped="" ref="0x7f2e13b4de30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2e13b4c020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2e13b4c1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2e13b4c340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2e13b4c4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2e13b4c660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2e13b4c7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2e13b4cd80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2e13b4b020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2e13b4b1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2e13b4b340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2e13b4b4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2e13b4b660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2e13b4b7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2e13b4b980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2e13b4bb10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2e13b4bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f2e13b40bb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f2e13b40bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2e13b3f020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2e13b3f1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2e13b3f340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2e13b3f4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2e13b3f660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2e13b3f7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2e13b3f980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2e13b3fb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2e13b3fca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2e13b3fe30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2e13b3e020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2e13b3e1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2e13b3e340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2e13b3e5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2e13b3e760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2e13b3e8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2e13b3ea80"/>
        <function-ref name="isUart" scoped="" ref="0x7f2e13b3ec10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2e13b3eda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2e13b3d020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2e13b3d1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2e13b3d340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2e13b3d4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2e13b3d660"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e13b3d7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2e13b3db80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2e13b3dd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2e13b3c020"/>
        <function-ref name="tx" scoped="" ref="0x7f2e13b3c1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2e13b3c340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2e13b3c4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2e13b3c660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2e13b3c7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2e13b3c980"/>
        <function-ref name="rx" scoped="" ref="0x7f2e13b3cb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2e13b3cca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2e13b3ce30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2e13b3b020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2e13b3b1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2e13b3b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f2e13b39e40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f2e13b39e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13b381e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13b38370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e13b38500"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13b361b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13b38820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13b389b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e13b38b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e13b38cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13b38e60"/>
        <function-ref name="get" scoped="" ref="0x7f2e13b37020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e13b371b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e13b37340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e13b374d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e13b37760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e13b378f0"/>
        <function-ref name="set" scoped="" ref="0x7f2e13b37a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e13b37c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e13b38690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e13b37da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e13b36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f2e13b49d40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f2e13b49d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2e13b460e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2e13b46270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2e13b46400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2e13b46590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2e13b46720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2e13b468b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2e13b46a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2e13b46bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e13b46d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2e13b45020"/>
        <function-ref name="getData" scoped="" ref="0x7f2e13b451b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2e13b45340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2e13b454d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2e13b45760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2e13b458f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f2e13b45a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2e13b45c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2e13b45da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2e13b44020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2e13b441b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2e13b44340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2e13b444d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2e13b44660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2e13b447f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2e13b44980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2e13b44d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2e13b43020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2e13b431b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2e13b43340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2e13b434d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2e13b43660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2e13b437f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2e13b43980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2e13b43b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2e13b43ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2e13b43e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2e13b42020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2e13b421b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2e13b42340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2e13b424d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2e13b42660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2e13b427f0"/>
        <function-ref name="setData" scoped="" ref="0x7f2e13b42980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2e13b42b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2e13b42ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2e13b42e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2e13b41020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2e13b411b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2e13b41340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2e13b418d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2e13b41a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2e13b41bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2e13b41d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2e13b40020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2e13b401b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2e13b40340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2e13b404d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2e13b40660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2e13b407f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f2e13b3b700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f2e13b3b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13b3ba80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13b3bc10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e13b3bda0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13b39a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13b3a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13b3a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e13b3a4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e13b3a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13b3a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2e13b3a980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e13b3ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e13b3aca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e13b3ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e13b39120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e13b392b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e13b39440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e13b395d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e13b3a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e13b39760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e13b398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f2e13a25c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e13a25c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a23210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f2e13a2fda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f2e13a2fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f2e13a28b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e13a28b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a27020"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f2e13a22670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e13a22670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a229f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a22b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f2e13a1be50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f2e13a1be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a1a210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a1a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f2e13a22e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f2e13a22e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a21210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f2e13a0e2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2e13a0e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a0e670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a0e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f2e13a112f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2e13a112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a11670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a11800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f2e13a2d120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2e13a2d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f2e13a16670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f2e13a16670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a169f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a16b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f2e13a122f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e13a122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a12670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a12800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f2e13a27c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2e13a27c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a26020"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f2e13a26c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2e13a26c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a25020"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f2e13a1c670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f2e13a1c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a1c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a1cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f2e13a1fe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f2e13a1fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a1d210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a1d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f2e13a21670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2e13a21670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a219f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a21b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2e13a30760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13a30760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2e13a30ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2e13a30c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2e13a30e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f2e13a2caa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e13a2caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f2e13a2a120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2e13a2a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f2e13a15a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2e13a15a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a15df0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f2e13a2a870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f2e13a2a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f2e13a12ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e13a12ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a12e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f2e13a2ddc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e13a2ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f2e13a18e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f2e13a18e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a16210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f2e13a26480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f2e13a26480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a26800"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a26990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f2e13a27480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e13a27480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a27800"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a27990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f2e13a2f750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2e13a2f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f2e13a19e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f2e13a19e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a18210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f2e13a1a670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f2e13a1a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a1a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a1ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f2e13a18670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f2e13a18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a189f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a18b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f2e13a0fad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2e13a0fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a0fe50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f2e13a11ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2e13a11ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a11e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f2e13a1d670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f2e13a1d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a1d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a1db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f2e13a1ae50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f2e13a1ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a19210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f2e13a13ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f2e13a13ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a13e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f2e13a20670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f2e13a20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a209f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a20b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f2e13a0ead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2e13a0ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e13a0ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e13a0d020"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a0d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e13a0d340"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e13a0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f2e13a2f100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2e13a2f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2f480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f2e13a28370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f2e13a28370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a286f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a28880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f2e13a25480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f2e13a25480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a25800"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a25990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f2e13a1ce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f2e13a1ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a1b210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a1b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f2e13a21e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2e13a21e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a20210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f2e13a1b670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f2e13a1b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a1b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a1bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f2e13a23670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2e13a23670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a239f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a23b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f2e13a2e450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2e13a2e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f2e13a23e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e13a23e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a22210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13a32a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13a32a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13a32e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13a30020"/>
        <function-ref name="request" scoped="" ref="0x7f2e13a301b0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13a30340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13a304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f2e13a29020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2e13a29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f2e13a29cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f2e13a29cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a280a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f2e13a132f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2e13a132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a13670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a13800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f2e13a14ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2e13a14ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a14e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f2e13a2c450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e13a2c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f2e13a142f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2e13a142f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a14670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a14800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f2e13a0f2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f2e13a0f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a0f670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a0f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f2e13a1de50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f2e13a1de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a1c210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a1c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f2e13a19670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f2e13a19670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a199f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a19b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f2e13a2eaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2e13a2eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f2e13a2d770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2e13a2d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a2daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f2e13a20e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f2e13a20e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a1f210"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a1f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f2e13a29670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2e13a29670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a299f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f2e13a1f670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f2e13a1f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a1f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a1fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f2e13a16e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f2e13a16e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13a15610"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a157a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f2e13a0d7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2e13a0d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e13a0db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e13a0dcb0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13a0de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e13a0c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e13a0c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f2e139f8c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e139f8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f7210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f2e13a03da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f2e13a03da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a02180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f2e139fcb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e139fcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139fa020"/>
        <function-ref name="write" scoped="" ref="0x7f2e139fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f2e139f6670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e139f6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f69f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f2e139efe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f2e139efe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139ed210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139ed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f2e139f6e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f2e139f6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f4210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f2e139e22f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2e139e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e2670"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f2e139e42f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2e139e42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e4670"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f2e13a00120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2e13a00120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a004a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f2e139ea670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f2e139ea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139ea9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139eab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f2e139e52f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e139e52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e5670"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f2e139fac60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2e139fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f9020"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f2e139f9c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2e139f9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f8020"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f2e139f0670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f2e139f0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f09f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f2e139f2e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f2e139f2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f1210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f2e139f4670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2e139f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f49f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2e13a04760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e13a04760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2e13a04ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2e13a04c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2e13a04e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f2e139ffaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e139ffaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e139ffe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f2e139fe120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2e139fe120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e139fe5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f2e139e9a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2e139e9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e9df0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f2e139fe870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f2e139fe870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e139febf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f2e139e5ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e139e5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e5e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f2e13a00dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e13a00dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e139ff180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f2e139ebe50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f2e139ebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139ea210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139ea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f2e139f9480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f2e139f9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f9800"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f2e139fa480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e139fa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139fa800"/>
        <function-ref name="write" scoped="" ref="0x7f2e139fa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f2e13a03750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2e13a03750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a03ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f2e139ece50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f2e139ece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139eb210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f2e139ed670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f2e139ed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139ed9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139edb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f2e139eb670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f2e139eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139eb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139ebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f2e139e3ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2e139e3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e3e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f2e139e4ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2e139e4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e4e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f2e139f1670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f2e139f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f19f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f2e139ede50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f2e139ede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139ec210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f2e139e6ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f2e139e6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e6e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f2e139f3670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f2e139f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f39f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f2e139e2ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2e139e2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e139e2e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e139e1020"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e11b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e139e1340"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e139e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f2e13a03100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2e13a03100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a03480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f2e139fc370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f2e139fc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139fc6f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139fc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f2e139f8480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f2e139f8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f8800"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f2e139f0e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f2e139f0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139ef210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139ef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f2e139f4e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2e139f4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f3210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f2e139ef670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f2e139ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139ef9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139efb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f2e139f7670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2e139f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f79f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f2e13a02450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2e13a02450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a027d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f2e139f7e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e139f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f6210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13a059e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13a059e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13a05d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13a04020"/>
        <function-ref name="request" scoped="" ref="0x7f2e13a041b0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13a04340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13a044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f2e139fd020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2e139fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e139fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f2e139fdcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f2e139fdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e139fc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f2e139e62f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2e139e62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e6670"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f2e139e8ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2e139e8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e8e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f2e139ff450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e139ff450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e139ff7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f2e139e82f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2e139e82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e8670"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f2e139e32f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f2e139e32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e3670"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f2e139f1e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f2e139f1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f0210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f2e139ec670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f2e139ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139ec9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139ecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f2e13a02aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2e13a02aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a02e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f2e13a00770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2e13a00770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13a00af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f2e139f3e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f2e139f3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f2210"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f2e139fd670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2e139fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e139fd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f2e139f2670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f2e139f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139f29f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139f2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f2e139eae50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f2e139eae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139e9610"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f2e139e17a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2e139e17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e139e1b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e139e1cb0"/>
        <function-ref name="write" scoped="" ref="0x7f2e139e1e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e139e0020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e139e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f2e139d8b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2e139d8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f2e139d5020"/>
        <function-ref name="changed" scoped="" ref="0x7f2e139d51b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f2e139d5340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f2e139d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f2e139d7d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2e139d7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f2e139c10e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f2e139bc310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2e139bc310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f2e139bc690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f2e139b9880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f2e139b9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139b9c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f2e139ae020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f2e139ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f2e139a4bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f2e139a4bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139a8020"/>
        <function-ref name="write" scoped="" ref="0x7f2e139a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f2e139a8530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f2e139a8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2e139a88b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e139a8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f2e139a9140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f2e139a9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139a94c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f2e139adc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f2e139adc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13994020"/>
        <function-ref name="write" scoped="" ref="0x7f2e139941b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f2e13994540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f2e13994540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e139948c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13994a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13994be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13994d70"/>
        <function-ref name="get" scoped="" ref="0x7f2e13993020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e139931b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e13993340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e139934d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f2e1398b950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f2e1398b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149d9640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2e149d99b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f2e1398d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f2e13990150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f2e13990150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e139904d0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13990660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f2e139909f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f2e139909f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13990d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e1398f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e1398f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e1398f340"/>
        <function-ref name="get" scoped="" ref="0x7f2e1398f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e1398f660"/>
        <function-ref name="set" scoped="" ref="0x7f2e1398f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e1398f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f2e13992ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f2e13992ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149d9640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2e149d99b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f2e1396aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f2e13968a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f2e13968a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149d9640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2e149d99b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f2e139678d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2e13958020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e13958020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149d9640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2e149d99b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e13958e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e13956800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e13956340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e13956cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f2e13952530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f2e13952530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149d9640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2e149d99b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e139513d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e13951d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e13951890"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e13950260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2e1394b020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2e1394b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e1394b3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2e1394b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2e1394b6c0"/>
        <function-ref name="get" scoped="" ref="0x7f2e1394b850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2e1394b9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1394bb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f2e1394bd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1394a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e1394a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2e1394a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2e1394a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2e1394ee50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e1394ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149d9640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2e149d99b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1394dca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e1394c670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e1394c1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e1394cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f2e13995590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f2e13995590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13995910"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13995aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13995c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13995dc0"/>
        <function-ref name="get" scoped="" ref="0x7f2e13946020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e139461b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e13946340"/>
        <function-ref name="clr" scoped="" ref="0x7f2e139464d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2e13943c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2e13943c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13942020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e139421b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2e13942340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2e13940020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13942660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e139427f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2e13942980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2e13942b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13942ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2e13942e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2e13941020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2e139411b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2e13941340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2e139415d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2e13941760"/>
        <function-ref name="set" scoped="" ref="0x7f2e139418f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2e13941a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2e13941c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2e139424d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2e13941da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2e139449e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2e139449e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13944d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13943020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e139431b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13943340"/>
        <function-ref name="get" scoped="" ref="0x7f2e139434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13943660"/>
        <function-ref name="set" scoped="" ref="0x7f2e139437f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13943980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2e1393b1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2e1393b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2e1393b530"/>
        <function-ref name="stop" scoped="" ref="0x7f2e1393b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f2e1392ccb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e1392ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2e1392b0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2e1392b230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2e1392b3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2e1392b550"/>
        <function-ref name="setCca" scoped="" ref="0x7f2e1392b6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2e1392b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f2e13928990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f2e13928990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2e13928d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f2e1392c020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f2e1392c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e1392c3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e1392c530"/>
        <function-ref name="modify" scoped="" ref="0x7f2e1392c6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e1392c850"/>
        <function-ref name="resend" scoped="" ref="0x7f2e1392c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2e1392f6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2e1392f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2e1392fa40"/>
        <function-ref name="stop" scoped="" ref="0x7f2e1392fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f2e1392a150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f2e1392a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2e1392a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f2e1391e970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e1391e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2e1391ecf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2e1391ee80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2e1391d030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2e1391d1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f2e1391d350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2e1391d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f2e1390ec60" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2e1390ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2e13912210"/>
        <function-ref name="clear" scoped="" ref="0x7f2e13912940"/>
        <function-ref name="isValid" scoped="" ref="0x7f2e13913ac0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1390b090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f2e138f6020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e138f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138f63a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e138f6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f2e138f6890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2e138f6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138f6c10"/>
        <function-ref name="write" scoped="" ref="0x7f2e138f6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f2e1391d900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f2e1391d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2e1391dc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f2e138f9530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2e138f9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e138f98b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f2e13908a80" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f2e13908a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f2e13908e00"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13907020"/>
        <function-ref name="captured" scoped="" ref="0x7f2e139071b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f2e13907340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f2e1391cae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f2e1391cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e13916390"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13918360"/>
        <function-ref name="startAt" scoped="" ref="0x7f2e13918ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e13918820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2e13916850"/>
        <function-ref name="start" scoped="" ref="0x7f2e13919970"/>
        <function-ref name="stop" scoped="" ref="0x7f2e13919e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2e13916d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e13916d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2e139150a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2e13915230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2e139153c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2e13915550"/>
        <function-ref name="getPower" scoped="" ref="0x7f2e139156e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2e13915870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f2e138fb550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e138fb550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138fb8d0"/>
        <function-ref name="write" scoped="" ref="0x7f2e138fba60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f2e138fbe00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2e138fbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138fa1c0"/>
        <function-ref name="write" scoped="" ref="0x7f2e138fa350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f2e138f0d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f2e138f0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e138f30e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f2e138f3270"/>
        <function-ref name="sfd" scoped="" ref="0x7f2e138f3400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2e1391fbc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e1391fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e1391e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e1391e1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f2e1391e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e1391e4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f2e1391e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f2e138fed10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e138fed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2e138fd0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2e138fd270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2e138fd400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f2e138f9c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e138f9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e138f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f2e139019b0" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f2e139019b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13901d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13900020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e139001b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13900340"/>
        <function-ref name="get" scoped="" ref="0x7f2e139004d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13900660"/>
        <function-ref name="set" scoped="" ref="0x7f2e139007f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13900980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e13921c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e13921c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e1391f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2e13915bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e13915bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2e13914020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2e139141b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2e13914340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f2e13902e80" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2e13902e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e13908220"/>
        <function-ref name="isSet" scoped="" ref="0x7f2e139083b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e13908540"/>
        <function-ref name="set" scoped="" ref="0x7f2e139086d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f2e138f83e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e138f83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138f8960"/>
        <function-ref name="write" scoped="" ref="0x7f2e138f8af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f2e138fe020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f2e138fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e138fe3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e138fe530"/>
        <function-ref name="request" scoped="" ref="0x7f2e138fe6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e138fe850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e138fe9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f2e13907690" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f2e13907690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13907b10"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13907ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13907e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13901020"/>
        <function-ref name="get" scoped="" ref="0x7f2e139011b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13901340"/>
        <function-ref name="set" scoped="" ref="0x7f2e139014d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13901660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f2e138f5130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2e138f5130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138f54b0"/>
        <function-ref name="write" scoped="" ref="0x7f2e138f5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f2e138f59c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2e138f59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138f5d40"/>
        <function-ref name="write" scoped="" ref="0x7f2e138f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f2e138fa6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2e138fa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e138faa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f2e13900cd0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f2e13900cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e138ff0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e138ff230"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e138ff3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e138ff550"/>
        <function-ref name="get" scoped="" ref="0x7f2e138ff6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e138ff870"/>
        <function-ref name="set" scoped="" ref="0x7f2e138ffa00"/>
        <function-ref name="clr" scoped="" ref="0x7f2e138ffb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2e138f36c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e138f36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e138f3a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e138f3bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e138f3d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e138f2020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e138f21b0"/>
        <function-ref name="get" scoped="" ref="0x7f2e138f2340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e138f24d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e138f2b10"/>
        <function-ref name="set" scoped="" ref="0x7f2e138f2660"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e138f27f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e138f2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f2e138f75e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e138f75e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138f7960"/>
        <function-ref name="write" scoped="" ref="0x7f2e138f7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2e1391f320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2e1391f320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2e1391f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e1391f830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f2e138fd780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2e138fd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e138fdb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e138fdc90"/>
        <function-ref name="write" scoped="" ref="0x7f2e138fde20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e138fb020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e138fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f2e138fade0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2e138fade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e138f9180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f2e138f8e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2e138f8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e138f7220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f2e1391c0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f2e1391c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2e1391c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f2e13855c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e13855c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13854210"/>
        <function-ref name="write" scoped="" ref="0x7f2e138543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f2e1385f020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f2e1385f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f2e13859c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e13859c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13858020"/>
        <function-ref name="write" scoped="" ref="0x7f2e138581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f2e13853670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e13853670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138539f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13853b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f2e1384ce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f2e1384ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384b210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f2e13853e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f2e13853e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13852210"/>
        <function-ref name="write" scoped="" ref="0x7f2e138523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f2e1383f2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2e1383f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1383f670"/>
        <function-ref name="write" scoped="" ref="0x7f2e1383f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f2e138412f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2e138412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13841670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13841800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f2e1385e370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2e1385e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f2e13847670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f2e13847670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138479f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13847b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f2e138432f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e138432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13843670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13843800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f2e13858c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2e13858c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13856020"/>
        <function-ref name="write" scoped="" ref="0x7f2e138561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f2e13856c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2e13856c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13855020"/>
        <function-ref name="write" scoped="" ref="0x7f2e138551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f2e1384d670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f2e1384d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f2e1384fe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f2e1384fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384e210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f2e13852670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2e13852670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138529f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13852b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2e138618f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e138618f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2e13861c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2e13861e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2e13860020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f2e1385dd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e1385dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f2e1385b370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2e1385b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f2e13846a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2e13846a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13846df0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13845020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f2e1385bac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f2e1385bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f2e13843ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e13843ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13843e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13841020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f2e1385d060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e1385d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f2e13848e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f2e13848e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13847210"/>
        <function-ref name="write" scoped="" ref="0x7f2e138473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f2e13856480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f2e13856480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13856800"/>
        <function-ref name="write" scoped="" ref="0x7f2e13856990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f2e13858480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e13858480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13858800"/>
        <function-ref name="write" scoped="" ref="0x7f2e13858990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f2e13860940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2e13860940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13860cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f2e1384ae50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f2e1384ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13848210"/>
        <function-ref name="write" scoped="" ref="0x7f2e138483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f2e1384b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f2e1384b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f2e13848670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f2e13848670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138489f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13848b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f2e13840ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2e13840ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13840e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e1383f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f2e13841ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2e13841ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13841e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13840020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f2e1384e670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f2e1384e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f2e1384be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f2e1384be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384a210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f2e13844ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f2e13844ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13844e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13843020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f2e13851670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f2e13851670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138519f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13851b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f2e1383fad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2e1383fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e1383fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e1383e020"/>
        <function-ref name="write" scoped="" ref="0x7f2e1383e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e1383e340"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e1383e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f2e138602f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2e138602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13860670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f2e13859490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f2e13859490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13859810"/>
        <function-ref name="write" scoped="" ref="0x7f2e138599a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f2e13855480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f2e13855480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13855800"/>
        <function-ref name="write" scoped="" ref="0x7f2e13855990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f2e1384de50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f2e1384de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384c210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f2e13852e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2e13852e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13851210"/>
        <function-ref name="write" scoped="" ref="0x7f2e138513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f2e1384c670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f2e1384c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f2e13854670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2e13854670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138549f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13854b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f2e1385f670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2e1385f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f2e13854e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e13854e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13853210"/>
        <function-ref name="write" scoped="" ref="0x7f2e138533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e13862c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e13862c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13861020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e138611b0"/>
        <function-ref name="request" scoped="" ref="0x7f2e13861340"/>
        <function-ref name="granted" scoped="" ref="0x7f2e138614d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e13861660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f2e1385a160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2e1385a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f2e1385ae00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f2e1385ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e138591c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f2e138442f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2e138442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13844670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13844800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f2e13845ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2e13845ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13845e50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13844020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f2e1385d6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e1385d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f2e138452f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2e138452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13845670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13845800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f2e138402f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f2e138402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13840670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13840800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f2e1384ee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f2e1384ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384d210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f2e1384a670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f2e1384a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f2e1385fcc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2e1385fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f2e1385e9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2e1385e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f2e13851e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f2e13851e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384f210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f2e1385a7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2e1385a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1385ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f2e1384f670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f2e1384f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1384f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1384fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f2e13847e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f2e13847e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13846610"/>
        <function-ref name="write" scoped="" ref="0x7f2e138467a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f2e1383e7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2e1383e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e1383eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e1383ecb0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1383ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e1383d020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e1383d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f2e13832df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f2e13832df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1382f1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f2e1382f350"/>
        <function-ref name="sfd" scoped="" ref="0x7f2e1382f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e1382f7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e1382f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1382fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f2e1382e020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f2e1382e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2e1382e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2e138325c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2e138325c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2e13832940"/>
        <function-ref name="stop" scoped="" ref="0x7f2e13832ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f2e13825380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f2e13825380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13825700"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13825890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13825a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13825bb0"/>
        <function-ref name="get" scoped="" ref="0x7f2e13825d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13824020"/>
        <function-ref name="set" scoped="" ref="0x7f2e138241b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13824340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f2e1381eb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f2e1381eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f2e1381d020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f2e1381d1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f2e1381d340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f2e1381d4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f2e1381d660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f2e1381d7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2e1381d980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f2e1381db10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f2e1381dca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f2e1381de30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f2e1381c020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f2e1381c1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f2e1381c340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2e1381c5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f2e1381c760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f2e138079d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f2e138079d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e13807d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e13806020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f2e1381cd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2e1381cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2e13819330"/>
        <function-ref name="clear" scoped="" ref="0x7f2e13819a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f2e1381bba0"/>
        <function-ref name="set" scoped="" ref="0x7f2e13818210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f2e138246b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f2e138246b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e13824a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13824bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e13824d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13823020"/>
        <function-ref name="get" scoped="" ref="0x7f2e138231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13823340"/>
        <function-ref name="set" scoped="" ref="0x7f2e138234d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13823660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f2e13817cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e13817cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138160a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13816230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f2e13816590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2e13816590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13816910"/>
        <function-ref name="write" scoped="" ref="0x7f2e13816aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f2e138156d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2e138156d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13815a50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13815be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2e1381f330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e1381f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2e1381f6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2e1381f840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2e1381f9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2e1381fb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f2e1381fcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2e1381fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f2e13828550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f2e13828550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e138288d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f2e13828a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f2e13828bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f2e138203a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2e138203a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13820720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f2e13826020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f2e13826020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2e138263a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2e13826530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2e138266c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2e13826850"/>
        <function-ref name="get" scoped="" ref="0x7f2e138269e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2e13826b70"/>
        <function-ref name="set" scoped="" ref="0x7f2e13826d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2e13825020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f2e13814020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e13814020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138143a0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13814530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e1382a620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e1382a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e1382a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2e1381e1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e1381e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1381e560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2e1381e6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2e1381e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e13827020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e13827020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e138273a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f2e138226e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f2e138226e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13822a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13822bf0"/>
        <function-ref name="request" scoped="" ref="0x7f2e13822d80"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13821020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e138211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f2e13816e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2e13816e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e138151c0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13815350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f2e13821530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2e13821530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e138218b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e13821a40"/>
        <function-ref name="write" scoped="" ref="0x7f2e13821bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e13821d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e13820020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f2e138148b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2e138148b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13814e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f2e138277c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f2e138277c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2e13827b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2e13812150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e13812150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e138124d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e13812660"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e138127f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e13812980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e13812b10"/>
        <function-ref name="get" scoped="" ref="0x7f2e13812ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e13812e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e138114d0"/>
        <function-ref name="set" scoped="" ref="0x7f2e13811020"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e138111b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e13811340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f2e138173e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e138173e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13817760"/>
        <function-ref name="write" scoped="" ref="0x7f2e138178f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f2e13818b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2e13818b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13817020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f2e13823a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f2e13823a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2e13823dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f2e13822020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2e138221b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2e13822340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f2e13820ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e13820ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1381f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2e1382aca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2e1382aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2e138280a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e13828230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f2e137a6a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2e137a6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2e137a6df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f2e137aa670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e137aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2e137aa9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2e137aab80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2e137aad10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2e137a7020"/>
        <function-ref name="getPower" scoped="" ref="0x7f2e137a71b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2e137a7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f2e137a5550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2e137a5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2e137a4b00"/>
        <function-ref name="clear" scoped="" ref="0x7f2e137a22a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f2e137a43d0"/>
        <function-ref name="set" scoped="" ref="0x7f2e137a29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f2e137a60c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e137a60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2e137a6440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2e137a65d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2e137a6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f2e1379d480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2e1379d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1379d800"/>
        <function-ref name="isSet" scoped="" ref="0x7f2e1379d990"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e1379db20"/>
        <function-ref name="set" scoped="" ref="0x7f2e1379dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f2e137a1660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2e137a1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2e137a0ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f2e1379e460"/>
        <function-ref name="isValid" scoped="" ref="0x7f2e137a05b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e1379eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2e137a76e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f2e137a76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2e137a7a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f2e137a7bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2e137a7d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f2e13797020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2e13797020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2e137973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f2e1379cd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e1379cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2e137990e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2e13799270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2e13799400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2e13799590"/>
        <function-ref name="getPower" scoped="" ref="0x7f2e13799720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2e137998b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2e1378e4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2e1378e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e1378e820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e1378e9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1378eb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1378ecd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e1378ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f2e13797a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2e13797a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2e13794020"/>
        <function-ref name="clear" scoped="" ref="0x7f2e13794750"/>
        <function-ref name="isValid" scoped="" ref="0x7f2e137968d0"/>
        <function-ref name="set" scoped="" ref="0x7f2e13794e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f2e13798640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e13798640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2e137989c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2e13798b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2e13798ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f2e1378f8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2e1378f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1378fc30"/>
        <function-ref name="isSet" scoped="" ref="0x7f2e1378fdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e1378e020"/>
        <function-ref name="set" scoped="" ref="0x7f2e1378e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f2e1378d3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f2e1378d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1378c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f2e1378c6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f2e1378c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1378a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f2e13793af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2e13793af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2e137900d0"/>
        <function-ref name="clear" scoped="" ref="0x7f2e13790800"/>
        <function-ref name="isValid" scoped="" ref="0x7f2e13792970"/>
        <function-ref name="set" scoped="" ref="0x7f2e1378f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2e13799c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f2e13799c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2e13798020"/>
        <function-ref name="noAck" scoped="" ref="0x7f2e137981b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2e13798340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2e1373b020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2e1373b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e1373bc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2e13739300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2e13739300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2e13738150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2e13738ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2e13738610"/>
        <function-ref name="overflow" scoped="" ref="0x7f2e13737020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2e13735450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2e13735450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2e13731a20"/>
        <function-ref name="fired" scoped="" ref="0x7f2e13732020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2e13732da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2e13732920"/>
        <function-ref name="getdt" scoped="" ref="0x7f2e137304a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2e13730020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2e137324a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2e13734090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2e13731410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2e13734560"/>
        <function-ref name="stop" scoped="" ref="0x7f2e13734a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f2e13720c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2e13720c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1371e210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1371e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f2e13729020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f2e13729020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e137293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f2e13723c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2e13723c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13722020"/>
        <function-ref name="write" scoped="" ref="0x7f2e137221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f2e1371d670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2e1371d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1371d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1371db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f2e13716e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f2e13716e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13715210"/>
        <function-ref name="write" scoped="" ref="0x7f2e137153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f2e1371de50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f2e1371de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1371c210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1371c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f2e137092f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2e137092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13709670"/>
        <function-ref name="write" scoped="" ref="0x7f2e13709800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f2e1370c2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2e1370c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1370c670"/>
        <function-ref name="write" scoped="" ref="0x7f2e1370c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f2e13728370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2e13728370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e137286f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f2e13711670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f2e13711670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e137119f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13711b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f2e1370d2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2e1370d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1370d670"/>
        <function-ref name="write" scoped="" ref="0x7f2e1370d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f2e13722c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2e13722c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13721020"/>
        <function-ref name="write" scoped="" ref="0x7f2e137211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f2e13721c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2e13721c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13720020"/>
        <function-ref name="write" scoped="" ref="0x7f2e137201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f2e13717670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f2e13717670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e137179f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13717b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f2e1371ae50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f2e1371ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13719210"/>
        <function-ref name="write" scoped="" ref="0x7f2e137193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f2e1371c670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2e1371c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1371c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1371cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2e1372b970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2e1372b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2e1372bcf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2e1372be80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2e1372a030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f2e13727d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2e13727d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e137260a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f2e13726370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2e13726370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e137267f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f2e13710a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2e13710a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13710df0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1370f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f2e13726ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f2e13726ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13726e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f2e1370dad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2e1370dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1370de50"/>
        <function-ref name="write" scoped="" ref="0x7f2e1370c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f2e13727060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2e13727060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e137273e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f2e13713e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f2e13713e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13711210"/>
        <function-ref name="write" scoped="" ref="0x7f2e137113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f2e13721480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f2e13721480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13721800"/>
        <function-ref name="write" scoped="" ref="0x7f2e13721990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f2e13722480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2e13722480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13722800"/>
        <function-ref name="write" scoped="" ref="0x7f2e13722990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f2e1372a950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2e1372a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1372acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f2e13714e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f2e13714e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13713210"/>
        <function-ref name="write" scoped="" ref="0x7f2e137133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f2e13715670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f2e13715670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e137159f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13715b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f2e13713670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f2e13713670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e137139f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13713b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f2e1370bad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2e1370bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1370be50"/>
        <function-ref name="write" scoped="" ref="0x7f2e13709020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f2e1370cad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2e1370cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1370ce50"/>
        <function-ref name="write" scoped="" ref="0x7f2e1370b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f2e13719670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f2e13719670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e137199f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13719b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f2e13715e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f2e13715e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13714210"/>
        <function-ref name="write" scoped="" ref="0x7f2e137143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f2e1370ead0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f2e1370ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1370ee50"/>
        <function-ref name="write" scoped="" ref="0x7f2e1370d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f2e1371b670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f2e1371b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1371b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1371bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f2e13709ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2e13709ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e13709e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e13708020"/>
        <function-ref name="write" scoped="" ref="0x7f2e137081b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e13708340"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e137084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f2e1372a300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2e1372a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e1372a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f2e13723490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f2e13723490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13723810"/>
        <function-ref name="write" scoped="" ref="0x7f2e137239a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f2e13720480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f2e13720480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13720800"/>
        <function-ref name="write" scoped="" ref="0x7f2e13720990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f2e13717e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f2e13717e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13716210"/>
        <function-ref name="write" scoped="" ref="0x7f2e137163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f2e1371ce50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2e1371ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1371b210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1371b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f2e13716670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f2e13716670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e137169f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13716b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f2e1371e670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2e1371e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1371e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1371eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f2e13729670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2e13729670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e137299f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f2e1371ee50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2e1371ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1371d210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1371d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e1372dd00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e1372dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e1372b0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e1372b230"/>
        <function-ref name="request" scoped="" ref="0x7f2e1372b3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2e1372b550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e1372b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f2e13724160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2e13724160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e137244e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f2e13724e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f2e13724e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e137231c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f2e1370e2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2e1370e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1370e670"/>
        <function-ref name="write" scoped="" ref="0x7f2e1370e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f2e1370fad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2e1370fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1370fe50"/>
        <function-ref name="write" scoped="" ref="0x7f2e1370e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f2e137276b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2e137276b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13727a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f2e1370f2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2e1370f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1370f670"/>
        <function-ref name="write" scoped="" ref="0x7f2e1370f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f2e1370b2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f2e1370b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1370b670"/>
        <function-ref name="write" scoped="" ref="0x7f2e1370b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f2e13719e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f2e13719e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13717210"/>
        <function-ref name="write" scoped="" ref="0x7f2e137173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f2e13714670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f2e13714670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e137149f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13714b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f2e13729cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2e13729cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e137280a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f2e137289c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2e137289c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13728d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f2e1371be50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f2e1371be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1371a210"/>
        <function-ref name="write" scoped="" ref="0x7f2e1371a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f2e137247b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2e137247b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2e13724b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f2e1371a670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f2e1371a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e1371a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2e1371ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f2e13711e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f2e13711e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2e13710610"/>
        <function-ref name="write" scoped="" ref="0x7f2e137107a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f2e137087a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2e137087a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2e13708b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2e13708cb0"/>
        <function-ref name="write" scoped="" ref="0x7f2e13708e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2e13707020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2e137071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f2e136dda20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f2e136dda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2e136ddda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f2e136dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f2e136da920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f2e136da920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e136dd560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e136e1990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e136e1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e136e1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f2e136d6a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f2e136d6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2e136d6da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f2e136d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f2e136d7940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f2e136d7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e136d6560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e136d7080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e136d7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e136d7400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f2e136dfaa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2e136dfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2e136dfe20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2e136c8020"/>
        <function-ref name="isState" scoped="" ref="0x7f2e136c81b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2e136c8340"/>
        <function-ref name="requestState" scoped="" ref="0x7f2e136c84d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f2e136c8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2e136be020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2e136be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e136be3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e136be530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e136be6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e136be850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e136be9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2e136bf220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e136bf220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e136bf5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e136bf730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e136bf8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e136bfa50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e136bfbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2e136bae60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2e136bae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e136b9210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e136b93a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e136b9530"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e136b96c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e136b9850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2e136bda10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e136bda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e136bdd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e136ba020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e136ba1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e136ba340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e136ba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f2e136b88f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f2e136b88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2e136b8c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f2e136b8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e136ba750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e136ba750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e136baad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2e136b7170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e136b7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2e136b74f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2e136b7680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2e136b7810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f2e136b9ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2e136b9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2e136b9e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2e136b8020"/>
        <function-ref name="isState" scoped="" ref="0x7f2e136b81b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2e136b8340"/>
        <function-ref name="requestState" scoped="" ref="0x7f2e136b84d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f2e136b8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f2e136bb690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2e136bb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2e136bba10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2e136bbba0"/>
        <function-ref name="isState" scoped="" ref="0x7f2e136bbd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2e136a4020"/>
        <function-ref name="requestState" scoped="" ref="0x7f2e136a41b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f2e136a4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2e1369e950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2e1369e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1369ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e136a1aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e136a1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e136a1e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f2e1369e200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f2e1369e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1369e580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2e136983f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2e136983f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e13698770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e1369ab70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e1369ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e13698020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e1369de30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e1369de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1369a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2e13698a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e13698a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2e13698df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2e13697020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2e136971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f2e1369a570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f2e1369a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1369a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2e1366a020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2e1366a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1366a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2e1366a6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2e1366a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e1366aa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1366abc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1366ad50"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e13669020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e136691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2e1366e8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e1366e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e1366ec60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1366edf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1366d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e1366d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e1366d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f2e1366dc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f2e1366dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e1366c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1366c230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1366c3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e1366c550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e1366c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e1366d5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e1366d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1366d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e1366fbe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e1366fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e1366e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e1366e1b0"/>
        <function-ref name="request" scoped="" ref="0x7f2e1366e340"/>
        <function-ref name="granted" scoped="" ref="0x7f2e1366e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e1366e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f2e1366ca50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f2e1366ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1366cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f2e1366b170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f2e1366b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e1366b4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e1366b680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1366b810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1366b9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e1366bb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2e13660d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2e13660d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e1365f180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1365f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1365f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e1365f630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e1365f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2e1365fb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2e1365fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1365e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f2e13631db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f2e13631db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e13630180"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e13630310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2e1365e2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e1365e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2e1365e670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2e1365e800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2e1365e990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2e1365eb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f2e1365ecb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2e1365ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f2e13662a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f2e13662a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e13662da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e13661020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e136611b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e13661340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e136614d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2e1365db70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f2e1365db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2e1365c020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2e1365c1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2e1365c340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2e1365c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2e1365d170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e1365d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1365d4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2e1365d680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2e1365d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f2e13662370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f2e13662370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e136626f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2e136657b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2e136657b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e13665b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e13665cc0"/>
        <function-ref name="request" scoped="" ref="0x7f2e13665e50"/>
        <function-ref name="granted" scoped="" ref="0x7f2e13664020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e136641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f2e136644d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f2e136644d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e13664850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e136649e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e13664b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e13664d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e13662020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f2e13661840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f2e13661840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e13661bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f2e13660020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f2e13660020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e136603a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e13660530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e136606c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e13660850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e136609e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2e13611dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2e13611dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2e13610180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f2e13610410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f2e13610410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2e13610790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2e13610920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2e13610ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2e13610c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2e13604b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2e13604b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2e13603020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2e136031b0"/>
        <function-ref name="start" scoped="" ref="0x7f2e13603340"/>
        <function-ref name="stop" scoped="" ref="0x7f2e136034d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2e13602860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2e13602860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e13602be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e13602d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e13601020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e136011b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e13601340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2e13601690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2e13601690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e13601a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2e13608ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e13608ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e136050a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e13605230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e136053c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e13605550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e136056e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2e13604080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e13604080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2e13604400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2e13604590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2e13604720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2e136048b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f2e13603800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f2e13603800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2e13603b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2e13603d10"/>
        <function-ref name="isState" scoped="" ref="0x7f2e13602020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2e136021b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f2e13602340"/>
        <function-ref name="forceState" scoped="" ref="0x7f2e136024d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f2e13601d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f2e13601d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2e13600180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2e13600310"/>
        <function-ref name="start" scoped="" ref="0x7f2e136004a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2e13600630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e13605980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e13605980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e13605d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2e135fd2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e135fd2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2e135fd650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2e135fd7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2e135fd970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2e135fdb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f2e135ff580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2e135ff580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2e135ff900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2e135ffa90"/>
        <function-ref name="isState" scoped="" ref="0x7f2e135ffc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2e135ffdb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f2e135fe020"/>
        <function-ref name="forceState" scoped="" ref="0x7f2e135fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2e135f0d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2e135f0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e135ef180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e135ef310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e135ef4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e135ef630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e135ef7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2e135f3350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e135f3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e135f36d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e135f3860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e135f39f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e135f3b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e135f3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f2e135f0020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f2e135f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2e135f03a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2e135f0530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2e135f06c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2e135f0850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2e135f09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f2e135eb1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e135eb1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2e135eb540"/>
        <function-ref name="noAck" scoped="" ref="0x7f2e135eb6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2e135eb860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f2e135ee410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f2e135ee410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2e135ee790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2e135ee920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2e135eeab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2e135eec40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2e135eedd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2e135cb690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2e135cb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e135cba10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2e135cc860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2e135cc860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e135ccbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e135ccd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e135cb020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e135cb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e135cb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f2e135c9610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f2e135c9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f2e135c9990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f2e135c9b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f2e135c9cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f2e135c9e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f2e135c8020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f2e135c81b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2e135c8340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f2e135c84d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f2e135c8660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f2e135c87f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f2e135c8980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f2e135c8b10"/>
        <function-ref name="sync" scoped="" ref="0x7f2e135c8ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2e135c7020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f2e135c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f2e135cd8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f2e135cd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2e135cdc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2e135cddc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2e135cc020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2e135cc1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f2e135cc340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2e135cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f2e135cece0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f2e135cece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f2e135cd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f2e135c61f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f2e135c61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2e135c6570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2e135c6700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2e135c6890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2e135c6a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f2e135c6bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2e135c6d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2e135cfa80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2e135cfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e135cfe00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e135ce020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e135ce1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e135ce340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e135ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2e135d3020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2e135d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e135d33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e135d3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e135d36c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e135d3850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e135d39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2e135d2df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f2e135d2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e135d01c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2e135cbce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2e135cbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2e135ca0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2e135ca230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2e135ca3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2e135ca550"/>
        <function-ref name="getPower" scoped="" ref="0x7f2e135ca6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2e135ca870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f2e135c74d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2e135c74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f2e135c7950"/>
        <function-ref name="changed" scoped="" ref="0x7f2e135c7ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f2e135c7c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f2e135c7e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2e135cab70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2e135cab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2e135c9020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2e135c91b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2e135c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e135d2210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e135d2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e135d2590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2e135c5d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2e135c5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2e135c30e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2e135c3270"/>
        <function-ref name="led1On" scoped="" ref="0x7f2e135c3400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2e135c3590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2e135c3720"/>
        <function-ref name="get" scoped="" ref="0x7f2e135c38b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2e135c3a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2e135c21b0"/>
        <function-ref name="set" scoped="" ref="0x7f2e135c3bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2e135c3d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f2e135c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2e135d0470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2e135d0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2e135d07f0"/>
        <function-ref name="source" scoped="" ref="0x7f2e135d0980"/>
        <function-ref name="address" scoped="" ref="0x7f2e135d0b10"/>
        <function-ref name="destination" scoped="" ref="0x7f2e135d0ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2e135d0e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2e135cf020"/>
        <function-ref name="type" scoped="" ref="0x7f2e135cf1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f2e135cf340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2e135cf4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2e135cf660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2e135cf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f2e135c50f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f2e135c50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2e135c5470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2e135c5600"/>
        <function-ref name="request" scoped="" ref="0x7f2e135c5790"/>
        <function-ref name="granted" scoped="" ref="0x7f2e135c5920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2e135c5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2e1353f360" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2e1353f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2e1353f6e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2e1353f870"/>
        <function-ref name="start" scoped="" ref="0x7f2e1353fa00"/>
        <function-ref name="stop" scoped="" ref="0x7f2e1353fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2e1353e3f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2e1353e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e1353e770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1353e900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1353ea90"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e1353ec20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e1353edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2e1353b1d0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f2e1353b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1353b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2e1353b7e0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2e1353b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e1353bb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e1353bcf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1353be80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1353a030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e1353a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f2e13538a20" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2e13538a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149dae30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2e149d9200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2e13536020"/>
        <function-ref name="clear" scoped="" ref="0x7f2e13536750"/>
        <function-ref name="isValid" scoped="" ref="0x7f2e13537890"/>
        <function-ref name="set" scoped="" ref="0x7f2e13536e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2e1352e890" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2e1352e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2e1352ec10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2e1352eda0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2e1352d020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2e1352d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e1353d5c0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e1353d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e1353d940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2e13539b20" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2e13539b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2e13538020"/>
        <function-ref name="noAck" scoped="" ref="0x7f2e135381b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2e13538340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2e1353a470" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2e1353a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2e1353a7f0"/>
        <function-ref name="source" scoped="" ref="0x7f2e1353a980"/>
        <function-ref name="address" scoped="" ref="0x7f2e1353ab10"/>
        <function-ref name="destination" scoped="" ref="0x7f2e1353aca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2e1353ae30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2e13539020"/>
        <function-ref name="type" scoped="" ref="0x7f2e135391b0"/>
        <function-ref name="setType" scoped="" ref="0x7f2e13539340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2e135394d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2e13539660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2e135397f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f2e13532af0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2e13532af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2e149da680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2e149da9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2e135300d0"/>
        <function-ref name="clear" scoped="" ref="0x7f2e13530800"/>
        <function-ref name="isValid" scoped="" ref="0x7f2e13531970"/>
        <function-ref name="set" scoped="" ref="0x7f2e1352e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2e1349a020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2e1349a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e1349a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1349a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1349a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e1349a850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e1349a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2e1349ac30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2e1349ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e13498020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e134981b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e13498340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e134984d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e13498660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2e134988b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2e134988b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2e13498c30"/>
        <function-ref name="source" scoped="" ref="0x7f2e13498dc0"/>
        <function-ref name="address" scoped="" ref="0x7f2e13497020"/>
        <function-ref name="destination" scoped="" ref="0x7f2e134971b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2e13497340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2e134974d0"/>
        <function-ref name="type" scoped="" ref="0x7f2e13497660"/>
        <function-ref name="setType" scoped="" ref="0x7f2e134977f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2e13497980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2e13497b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2e13497ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2e13496020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f2e13496020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2e134963a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f2e13496530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2e134966c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2e12b52e60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2e12b52e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e12b50210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e12b503a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e12b50530"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e12b506c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e12b50850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2e12b50aa0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2e12b50aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e12b50e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e12b4f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e12b4f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e12b4f340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e12b4f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2e12b4f720" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2e12b4f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2e12b4faa0"/>
        <function-ref name="source" scoped="" ref="0x7f2e12b4fc30"/>
        <function-ref name="address" scoped="" ref="0x7f2e12b4fdc0"/>
        <function-ref name="destination" scoped="" ref="0x7f2e12b4e020"/>
        <function-ref name="setSource" scoped="" ref="0x7f2e12b4e1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2e12b4e340"/>
        <function-ref name="type" scoped="" ref="0x7f2e12b4e4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f2e12b4e660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2e12b4e7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2e12b4e980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2e12b4eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2e12b4eda0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f2e12b4eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2e12b4d180"/>
        <function-ref name="noAck" scoped="" ref="0x7f2e12b4d310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2e12b4d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2e12b447f0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2e12b447f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e12b44b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e12b44d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e12b43020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e12b431b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e12b43340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2e12b435f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e12b435f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e12b43970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e12b43b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e12b43c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e12b43e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e12b42020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2e12b42270" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2e12b42270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2e12b425f0"/>
        <function-ref name="source" scoped="" ref="0x7f2e12b42780"/>
        <function-ref name="address" scoped="" ref="0x7f2e12b42910"/>
        <function-ref name="destination" scoped="" ref="0x7f2e12b42aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2e12b42c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2e12b42dc0"/>
        <function-ref name="type" scoped="" ref="0x7f2e12b41020"/>
        <function-ref name="setType" scoped="" ref="0x7f2e12b411b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2e12b41340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2e12b414d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2e12b41660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2e13501930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e13501930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e13501cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e13501e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e134fe020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e134fe1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e134fe340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2e134ae400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2e134ae400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e134ae7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e134ae930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e134aeac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e134aec50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e134aede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2e134b0df0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2e134b0df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2e134af1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e134af350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e134af4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2e134af670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2e134af800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2e134ac720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2e134ac720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e134acaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e134acc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e134acdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e134ab020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e134ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f2e134afb80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f2e134afb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f2e134ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f2e134ab480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f2e134ab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e134ab800"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e134ab990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f2e134abc60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f2e134abc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2e134aa020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2e134aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2e134ad060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2e134ad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2e134ad3e0"/>
        <function-ref name="source" scoped="" ref="0x7f2e134ad570"/>
        <function-ref name="address" scoped="" ref="0x7f2e134ad700"/>
        <function-ref name="destination" scoped="" ref="0x7f2e134ad890"/>
        <function-ref name="setSource" scoped="" ref="0x7f2e134ada20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2e134adbb0"/>
        <function-ref name="type" scoped="" ref="0x7f2e134add40"/>
        <function-ref name="setType" scoped="" ref="0x7f2e134ac020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2e134ac1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2e134ac340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2e134ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2e1348d020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2e1348d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2e1348d3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2e1348d530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2e1348d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2e1348d850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2e1348d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2e13493910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2e13493910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2e13493c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2e1348dc30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2e1348dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2e1348b020"/>
        <function-ref name="source" scoped="" ref="0x7f2e1348b1b0"/>
        <function-ref name="address" scoped="" ref="0x7f2e1348b340"/>
        <function-ref name="destination" scoped="" ref="0x7f2e1348b4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2e1348b660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2e1348b7f0"/>
        <function-ref name="type" scoped="" ref="0x7f2e1348b980"/>
        <function-ref name="setType" scoped="" ref="0x7f2e1348bb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2e1348bca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2e1348be30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2e1348a020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2e149cfc60" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f2e149d0830" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f2e149c5d50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f2e149c1c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f2e149c1940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f2e149c6030" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f2e149c8870" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f2e149c4b40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f2e149c4550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f2e149c48b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f2e149c1020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f2e149c2cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f2e149c25a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f2e149c2320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f2e149c55b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f2e149c80e0" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f2e149c6dd0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f2e149c67e0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f2e149c6b40" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f2e14983b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f2e14986de0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f2e14983420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f2e14986700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f2e149855a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f2e149898f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f2e14986020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f2e14985cc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f2e14af37e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f2e14dbb700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f2e14a19a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f2e14a171f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f2e14a192b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f2e14b91020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2e15531e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f2e14e79e20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f2e14e79610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f2e14e6d770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f2e14e6b020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f2e1491f020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f2e1491f7d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f2e1491e020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f2e1491d020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f2e1491b7d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2e1491a020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f2e1491e7b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2e1491ab90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f2e1491a910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f2e14920850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f2e1491d800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f2e1491b020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f2e149108a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f2e1490f020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f2e14912a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f2e1490fe80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2e14910190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f2e1490f740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2e14915c40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f2e14912350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f2e148e5880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f2e148e4020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f2e148e0b10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2e148e0890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f2e148de5d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f2e148e7120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f2e148e3020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f2e148ded60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f2e148dd860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2e148dd5e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f2e148e4760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2e148e50e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f2e148db190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f2e148e1770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f2e148dfe30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f2e148e78c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f2e148df3e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2e148e8270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f2e148e37a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f2e148e0020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f2e148e1020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f2e148e89a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f2e145b2110" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2e145b6e40" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f2e145b1600" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2e145b1380" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2e145b6460" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2e145b2960" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f2e145dc3f0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e145dc170" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f2e145da490" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e145da210" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2e145d87b0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e145d81b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e145d84e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2e145d78a0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f2e145d9930" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e145d9370" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e145d96a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2e145c02c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2e145d5930" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f2e145d5cb0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e145c0020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2e145bc970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e145bc370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e145bc6a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2e145bba60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2e145bf630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e145bf3b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2e145beb80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e145be5a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2e145be8f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f2e145ae2b0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2e145afb50" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f2e145ae020" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f2e145aa980" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2e145aa380" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f2e145aa6f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f2e145aed90" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f2e15525110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2e145aeb10" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f2e145ab880" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2e145ab600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f2e145af350" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2e145af0d0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f2e145ac990" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2e145ac710" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f2e145b79c0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
              <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e145b7060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f2e145b73b0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e145b76e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e1463f350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e1463f350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f2e146381f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2e1463da60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f2e1463a820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2e1463a250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f2e1463a590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f2e1463ba60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f2e14636270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f2e14638980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f2e1463b270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f2e1463e020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2e1463fc40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f2e14639820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2e14639250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f2e14639590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f2e1463eae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2e1463e860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2e1463d350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f2e145c72a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2e145ee180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2e145c7020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f2e145d0d60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2e145d0ae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f2e145d31f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f2e145d3cb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2e145d3a30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f2e145cd7a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2e145cd1c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2e145cd510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f2e145cf2b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2e145d1c40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2e145cf020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f2e145cabf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2e145ca970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f2e145cc020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2e145c89a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f2e145c8cc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2e145efd50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f2e145cb9f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2e145cb770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f2e145c5730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2e145ee180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2e145c5150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f2e145c54a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2e145ee180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f2e145c4580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2e145ee180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e145606d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e145606d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2e1455d020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e14558070" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e14558070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2e145582b0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e145582b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f2e14554e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e145582b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2e14557e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f2e14554460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e145582b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e145582b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2e14556e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e145582b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f2e145541d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e145582b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f2e14556640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f2e14553620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e145582b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2e14558e10" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e145582b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2e14558b90" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e145582b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2e14557680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f2e14532270" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f2e14532bf0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2e14532970" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f2e14531610" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f2e14531390" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f2e1452f020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f2e14531d60" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2e1452f710" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f2e14540ad0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f2e1453e400" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f2e1453e180" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f2e1453f270" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2e14546d30" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f2e1453f9b0" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2e14543c50" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f2e145403e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2e14543510" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f2e14541390" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f2e14541ca0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2e14541a20" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f2e1453ee10" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f2e1453eb90" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f2e145368f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f2e14536320" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f2e14536660" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f2e1453a7d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2e1497a550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2e14979020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f2e145352b0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f2e145341f0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f2e14538a30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f2e145359f0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f2e14539020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f2e145397b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f2e145382a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2e1497a550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2e14979020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2e14538020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2e1497a550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2e14979020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f2e14521d60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f2e1451b400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f2e1451b180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f2e1451a020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2e1451bd10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2e1451c9a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2e1451c0e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f2e1451d740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f2e1451d4c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f2e144f01f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e143a0e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e143a0e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2e1439b070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e1439b070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2e1439b990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e1439b070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2e1439aad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2e1439a270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f2e14399270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f2e142d8e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f2e15525930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f2e142d8c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f2e15525930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f2e14220980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e14220700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f2e14223c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e142239b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f2e14224350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f2e142240d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f2e14226800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f2e14226580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f2e14224d80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f2e14224b00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f2e14221b10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e14221890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f2e1420e2b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f2e1421ec50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f2e1420e020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f2e1421b680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e1421b060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f2e1421b3f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f2e1421a850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e1421a5d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f2e1421c810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f2e1421fe10" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f2e1421fb90" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f2e1422d2e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e1422d060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f2e1422b510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e1422b290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f2e1422a680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e1422a400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f2e14212b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e142128b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f2e14217b90" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e14217570" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f2e14217900" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f2e14214ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e14214850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f2e14214020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e14215960" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f2e14215cf0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f2e14211b70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e142118f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f2e14227780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e14227500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2e142012b0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e14208c40" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e14201020" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2e141fd890" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e141fd290" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e141fd5c0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2e141fc9b0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2e142005f0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e14200370" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2e141ffac0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e141ff4e0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2e141ff830" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f2e14205120" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f2e14206120" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f2e14207770" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f2e14206910" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f2e14205b70" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2e141db3a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2e141e0dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f2e141db110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2e141da6a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f2e141d7e70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f2e141d7060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f2e141d78a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e141d7bd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2e141d9840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2e141d9260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2e141d95b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f2e141dbe30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f2e141dbbb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f2e141d30e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f2e141dc870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f2e141e6a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2e141dd270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f2e141cd2e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e141cd020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f2e141ce710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f2e14629410"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f2e14628d70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e141ce410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f2e141cc620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f2e14626860"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f2e14624180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e141cc320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f2e141e36e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f2e141e1840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f2e141e1070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f2e141e8e20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f2e141e4e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f2e141e2020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f2e141e2840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f2e141e46c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f2e141c7d00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f2e141c8350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f2e141c7530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f2e141c72b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f2e141c8ac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f2e141c9020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f2e141d0c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f2e141c9ad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f2e141c9850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f2e1416b870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f2e1416b290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f2e1416b5e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f2e1416d1f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f2e1416e880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f2e1416e210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f2e1416e5f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f2e14174c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2e14174990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f2e1416da70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f2e14170730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f2e141704b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f2e14173d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f2e14173ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f2e1416aae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f2e1416f9c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f2e1416f740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f2e1416a2b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f2e141714d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f2e14244ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f2e14241240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f2e14171cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f2e141741f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f2e14173390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f2e1416f020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f2e141684a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2e141684a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f2e14168d60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f2e14165ac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2e141684a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2e14165510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f2e14165830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2e141684a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f2e14141520" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2e1462d600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e141412a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2e14140030" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2e1462d600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e14141d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f2e1415ac50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f2e14244ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f2e14241240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f2e141490e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f2e14148070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f2e141498c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2e145ee180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f2e1414a860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2e145ee180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f2e1414a280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2e145ee180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f2e1414a5d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2e145ee560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f2e14139120" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2e1462d600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f2e14146840" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2e1462d600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f2e1414c9b0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f2e14146250" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2e141465a0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2e14143020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2e1462d600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f2e14144150" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f2e141449c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2e14144d10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f2e1414d7e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f2e1414d020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f2e1414e720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f2e14151db0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f2e14027190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f2e14025350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f2e14027b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2e140278b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f2e1402a8f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f2e13ffd800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2e13ff9270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f2e13ffd070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f2e13ffb9a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f2e13ffb720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f2e13ffb020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f2e14000870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f2e13ffc810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f2e13ffc030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f2e13eaa810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f2e13ea60e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f2e13ea6920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f2e13e7f420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13e80e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2e13e7f190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f2e13e7a700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13e7bd90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2e13e7a110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2e13e7a460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2e13e7b020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2e1462d600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13e7d970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2e13e7dcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f2e13e80020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2e1462d600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13e829d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2e13e82d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f2e13e7eb90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13e7e250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2e13e7e5a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2e13e7e8f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2e13e60a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f2e13e600d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f2e13e60460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e13e607a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2e13e5c020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f2e13e5f2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f2e13e5f630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e13e5f970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2e13e5fce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
              <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f2e13e628f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f2e13e62670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f2e13d82b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f2e13d7f4e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f2e13d7daa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f2e13db32b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f2e13db4e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f2e13d7c6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13d7c470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f2e13d7bb30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13d7b8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f2e13d7b020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2e13d7a5f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13d7a370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f2e13d6f020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f2e13d70750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f2e13d68740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13d684c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f2e13d6bcd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f2e13d437c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f2e13d4f2d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f2e13d5b020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2e13dd0020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f2e13dd0860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2e13d5ecf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2e13dd0020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f2e13dd0860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f2e13d513b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f2e13d59530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2e13dcb020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2e13dcb860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2e13d592b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2e13dcb020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2e13dcb860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f2e13d489e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f2e13d44020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f2e13d5aa90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2e13dceec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2e13dcd680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f2e13d59d20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2e13dcb020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2e13dcb860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f2e13d55b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f2e13d55910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f2e13d551f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f2e13d482b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f2e13d5a2a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2e13dceec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2e13dcd680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2e13d5a020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2e13dceec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2e13dcd680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f2e13d56020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f2e13d47190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f2e13d56a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f2e13d56780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f2e13d52480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f2e13d52c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f2e13d4a420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f2e13d4c190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f2e13d50350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f2e13d4ab60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f2e13d4fab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f2e13d478b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f2e13d54390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2e13dd6d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f2e13dd24d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f2e13d46070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f2e13d43020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f2e13d57700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f2e13d57480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f2e13d422a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13d42020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f2e13d5b800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2e13dd0020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f2e13dd0860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f2e13d51b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f2e13d4d270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f2e13d4bba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f2e13d9fb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2e13d9f730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f2e13d4b920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f2e13d9fb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2e13d9f730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f2e13d4cca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f2e13db32b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f2e13db4e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f2e13d4ca20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f2e13db32b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f2e13db4e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f2e13d42ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f2e13d46860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f2e13d54ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f2e13d44780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f2e13d4d9e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f2e13d50b30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f2e13cdb020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f2e13cb59d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f2e13cc6020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f2e13cbb620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2e13cbb3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f2e13ccf5b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f2e13cb8c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f2e13cc05e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f2e13cc8070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f2e13cc5020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f2e13cc9020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f2e13ccad30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f2e13ccb4b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f2e13cc2020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f2e13cba550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f2e13cb5270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f2e13cbcc30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f2e13caf350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f2e13cac9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f2e13cce420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f2e13cc4740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f2e13cc11f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f2e13cc98e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f2e13cd0350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f2e13cbc460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2e13cbc1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f2e13cd4c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f2e13cb84d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f2e13cb3190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f2e13caeb00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f2e13cac270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f2e13cb7b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f2e13cb38c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f2e13cbbdb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f2e13cb1390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f2e13cceb40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f2e13cbf7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f2e13cb27b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f2e13cb6ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f2e13cc1de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f2e13cc1b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f2e13cad2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f2e13cbda60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f2e13cb7420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f2e13cd0e10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f2e13d8b4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2e13d8b080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f2e13cd0b90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f2e13d8b4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2e13d8b080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f2e13cc4020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f2e13ccdcb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2e13ccda30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f2e13cc2980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2e13cc2700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f2e13cb1b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f2e13cca620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f2e13ccd350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f2e13cbd2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f2e13cbd020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2e15524520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f2e13ccfce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f2e13cb2020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f2e13cb6350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f2e13cbacc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f2e13cbf020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f2e13cc0d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f2e13cc5740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f2e13cc87b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f2e13cada40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f2e13ccbe30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2e13ccbbb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f2e13cafb10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f2e13cc6750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f2e13cae350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f2e13c0b020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f2e13c0b880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f2e13bd2dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f2e13bcf020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f2e13bd2530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f2e13bd16d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f2e13bcf950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f2e13bceb20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f2e13bc34c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2e13bcc490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2e13bc3240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2e13bcc490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f2e13bc5420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f2e13bc4020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2e13bcc490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2e13bc5ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2e13bcc490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f2e13bc4930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f2e13bcc490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f2e139b95e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2e139b9360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f2e139a6b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f2e139a61c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f2e139a6530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e139a6860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2e139a4880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2e139a42c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2e139a45f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e1398c530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e1398c530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2e1398c770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e1398c770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f2e1398b2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e1398c770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2e1398b060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e1398c770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f2e13928580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f2e13914af0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2e13914af0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2e13914d30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e13914d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f2e1390fbc0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e13914d30"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e1390f940" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f2e1390dd80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e1390db00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f2e13911920" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e139116a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2e1390e0c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e13914d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e1390ca80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f2e1390cde0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2e13914d30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f2e138f09e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f2e138f0020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f2e138f0750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f2e138f17f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f2e138f1020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2e138f4d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2e15524920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f2e139055f0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2e15524160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e13905370" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f2e139065f0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e13906370" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2e139025f0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e13902370" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2e139045f0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2e13904370" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2e145de350"/>
                <typename><typedef-ref name="message_t" ref="0x7f2e145dd9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f2e136de5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f2e136de5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f2e136da2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2e14e77020"/>
            <typename><typedef-ref name="error_t" ref="0x7f2e14e6f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f2e136de5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f2e136da020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f2e136de5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f2e134f51f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2e14e7d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
