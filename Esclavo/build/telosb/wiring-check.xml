<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fc5e53cdcf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fc5e5755a20"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fc5e5755a20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fc5e56b8110"/></to>
    </wire>
    <wire loc="27:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc5e53ca360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc5e56a00d0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc5e56a00d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc5e569ec40"/></to>
    </wire>
    <wire loc="28:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7fc5e53bd820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e5300980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e5300980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc5e52f5050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7fc5e53bacd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e4fd0260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e4fd0260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc5e52f5050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc5e535b910"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc5e421fc30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc5e421fc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc5e38d6aa0"/></to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc5e534b8d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc5e421e8b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc5e421e8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc5e38d5720"/></to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fc5e5338a50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc5e42c5360"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc5e42c5360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4fbdcc0"/></to>
    </wire>
    <wire loc="34:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc5e53408f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc5e421f020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc5e421f020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc5e38d7e60"/></to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc5e533b180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e4213910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc5e4213910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e42c25c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e5331c20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4fb6610"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4fb6610"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4f7e020"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e4396dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e441fb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e4440750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e445d080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e45af620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e46a6c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e4e3b7e0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e3a60020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e4b77020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e4ee7510"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e52f0e50"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fc5e56b8780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fc5e5bff1e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fc5e5bff1e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fc5e57a4140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fc5e56b71d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e5752020"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e5752020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e57451a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e56b78d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fc5e5747130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fc5e5745810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fc5e5743020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fc5e572c900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fc5e572c900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e5713850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fc5e5743700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e5746640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fc5e5743de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e5675600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e5713850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e56f91c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fc5e570ade0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fc5e56f9830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc5e587ac80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc5e56f8af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e57a3040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fc5e579e490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fc5e59d79a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e5675600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e569e640"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fc5e56951d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fc5e569fd80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fc5e569fd80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e53f8480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fc5e569b4d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fc5e5677020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fc5e5677020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e53e1b20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fc5e569a7f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fc5e5676380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fc5e5676380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e53db1b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e53e6610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fc5e56098a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fc5e56098a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54b2b90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e53e0de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fc5e5606020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fc5e5606020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54ac060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e53da480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fc5e56048a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fc5e56048a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54a7540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fc5e565a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5560060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fc5e5641710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e552a740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fc5e55b7d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e551a540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fc5e55bcd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e547b060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fc5e55e5d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5515b90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fc5e563b710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e551f060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fc5e56228a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54e9740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fc5e55f48a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5486540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fc5e55e0d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5509540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fc5e55ccd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e549c060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fc5e55add50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5476540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fc5e5653d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5550060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fc5e55dd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5504b90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fc5e564ed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5546b90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fc5e5634e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e550e060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fc5e561a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54d8540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fc5e5600020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54a2b90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fc5e55ec020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5476540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fc5e565f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e556c740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fc5e5646580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5535d10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fc5e562c710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54fe060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fc5e55e7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e551a540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fc5e55c3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e548b060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fc5e55af570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5476540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fc5e55d3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54b7540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fc5e5627710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54f4dc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fc5e560e8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54bd060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fc5e55f98a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5491b90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fc5e55c1d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5486540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fc5e55dbd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54c8540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fc5e5658d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e555b540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fc5e563fe50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5525b90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fc5e55fe8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e549c060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fc5e5639e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e551a540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fc5e561f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54e3b90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fc5e55f1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5481b90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fc5e55d6d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54bd060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fc5e5662530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e55a5d10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fc5e564b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5540060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fc5e5631710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5509540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fc5e56188a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54d3b90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fc5e55d1d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54fe060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fc5e55c9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5497540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fc5e55b9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5476540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fc5e56138a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54c8540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fc5e55ce580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54f9540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fc5e565dd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5567b90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fc5e5644e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e552f260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fc5e562ae50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54f9540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fc5e55d8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54c3b90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fc5e55be570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5481b90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fc5e5624020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54ee260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fc5e560b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54b7540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fc5e55f6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e548b060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fc5e5655580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5556b90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fc5e55fb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5497540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fc5e5650580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e554b540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fc5e5636710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5515b90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fc5e561d8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54dd060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fc5e55ef8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e547b060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fc5e5670d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5571260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fc5e5649d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e553b540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fc5e562fe50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5504b90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fc5e5615020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54cd060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fc5e55c6d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e5491b90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fc5e55b4560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e550e060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fc5e55e2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e550e060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fc5e5610020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54c3b90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fc5e55b2d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e547b060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fc5e55aa580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e54a2b90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fc5e55ea8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc5e551f060"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fc5e52f5050"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc5e52edc30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fc5e52edc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e4ff88e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e52f0e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e50a6020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e4ff88e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e3c4adb0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fc5e52e3500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fc5e4fe8020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e50a6020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e3e3fb10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fc5e4ff1020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e50792f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc5e5073850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc5e50a6870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc5e50a6870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc5e3e39890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc5e4fde300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc5e511f8c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc5e511f8c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc5e5102cf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e3e3fb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e3e21660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fc5e3e320a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc5e3e3e4f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc5e3e3e4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc5e3e20020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc5e3e35c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc5e511f8c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e3e1c190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e3e28340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e3e28340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e52b3990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e3e1b770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e3e27a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e3e27a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e52b0720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e3e1aa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e3e26da0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e3e26da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e52ae1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e52b3990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc5e529a9e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fc5e529a9e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e5244260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e52b0720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fc5e5298280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fc5e5298280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc5e51e16d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e52ae1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fc5e5297700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fc5e5297700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc5e51e0ac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e52b3990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc5e529a9e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e52b0720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fc5e5292a50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fc5e5292a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc5e51d1220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e52ae1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fc5e5290020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fc5e5290020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc5e51d0610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e52b3990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc5e529a9e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e52b0720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fc5e528fd40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fc5e528fd40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc5e51ca6d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e52ae1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fc5e528d160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fc5e528d160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc5e51c9ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e52b3990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc5e529a9e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e52b0720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fc5e528a020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fc5e528a020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc5e51c2b30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e52ae1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fc5e5289570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fc5e5289570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc5e51c0020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e52b3990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc5e529a9e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e52b0720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fc5e52875a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fc5e52875a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc5e51ba220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e52ae1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fc5e5286a20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fc5e5286a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc5e51b9610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e52b3990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc5e529a9e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e52b0720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fc5e52848c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fc5e52848c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc5e51b26d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e52ae1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fc5e5283d40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fc5e5283d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc5e51b1ac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fc5e529d730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc5e51e9220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fc5e529e700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e51efcb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fc5e528b020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e51c87a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fc5e52a4890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc5e51ef020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fc5e5282ae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e51b07a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fc5e52a80c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc5e523d6d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fc5e5293a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e51d8cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fc5e5294bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc5e51d8020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fc5e5295730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc5e51dab30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fc5e529ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e51e72f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fc5e5288570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e51c0cb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fc5e529cbb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc5e51e8610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fc5e52ac830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e524b3e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fc5e52a5410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc5e51f1b30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fc5e529f410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e51f77a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fc5e5290da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e51cf2f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fc5e52a7570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc5e51f8ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fc5e5285890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e51b82f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fc5e5296700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e51df7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fc5e52492f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e524abf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fc5e5249940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fc5e51a93f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fc5e5248020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fc5e51a9b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e51f6610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e524b3e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc5e51f4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e524abf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e51eeb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e524b3e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc5e51ec2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e524abf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e51e6160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e524b3e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc5e51e47a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e524abf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fc5e5242100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e5243a60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fc5e5242750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fc5e51a8430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fc5e5242da0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fc5e51a8bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e51de610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e5244260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc5e51ddc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e5243a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e51d7b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e5244260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc5e51d52f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e5243a60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e51ce160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e5244260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc5e51cd7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e5243a60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e51c7610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e5244260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc5e51c6c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e5243a60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e51bfb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e5244260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc5e51bd2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e5243a60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e51b7160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e5244260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc5e51b67a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e5243a60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e51af610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc5e5244260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc5e51aec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc5e5243a60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fc5e50e40f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fc5e511d8e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fc5e511d8e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc5e5116b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e5108c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc5e529a9e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fc5e50709c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fc5e3c433d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7fc5e4ff1020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7fc5e3c3ca40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7fc5e4fec450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fc5e3c3d5d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fc5e5747130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fc5e3c3b100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4fbdcc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4f90020"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4f90020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc5e438ab80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e4fb32c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e43538b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fc5e4fa31d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fc5e4354ce0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc5e4fb88f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc5e4355a80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc5e4fbcd20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc5e4359020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fc5e4fbac00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fc5e4357df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4f7e020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4530670"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e4f9e130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e4f7c080"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e4f7c080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e438a080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc5e4fba020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e4357210"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e4fb4080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e4f7d020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e4f7d020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fc5e452d6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fc5e4f95430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fc5e4f7cb70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fc5e4f7cb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fc5e4375020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc5e4fb92d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc5e4356470"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc5e4fab170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc5e4f7d9d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc5e4f7d9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc5e452ca70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fc5e434a0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4f8f530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc5e4352860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fc5e4f88a70"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fc5e4f88a70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fc5e43f3c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc5e4351690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fc5e4f80840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fc5e4f80840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fc5e43f2a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc5e434c4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc5e475eb20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4351ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4530670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4530670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4522d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e434fb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e452c0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e452c0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e451e640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fc5e434e610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fc5e4ef0dc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fc5e4ef0dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fc5e4ee6970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fc5e434b1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e4f76330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e4f76330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e4f6f7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc5e434ad30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc5e56a00d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc5e438ab80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fc5e4387d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc5e452ca70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc5e451c020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fc5e4375020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fc5e4373410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fc5e43f3c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fc5e43e8a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e438a080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e43832d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fc5e4f89690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e43f35e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc5e43f35e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fc5e43e8370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fc5e452d6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fc5e451fc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e4f8f530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e43f5be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e43f5be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e43ea7b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fc5e4f7f940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc5e43f48e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc5e43f48e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fc5e43e94d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fc5e4f89d50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fc5e43f1170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fc5e43f1170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fc5e43e6020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fc5e43f2a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fc5e43e7840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fc5e4387d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4f78390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4f78390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4f75e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc5e43f06b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc5e4445220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc5e4445220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc5e4443a10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc5e4444020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc5e4378350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc5e4378350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fc5e4375d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc5e4375d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc5e438ece0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc5e438ece0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fc5e4388860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc5e4388860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc5e4f78e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc5e4f78e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc5e4f70990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc5e43f0020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e438b980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc5e438b980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fc5e4387690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc5e4387690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e4426aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc5e4426aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e4422e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc5e4423950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e4f77b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc5e4f77b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e45b47c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc5e45b47c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e45ad020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e4f6e640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4f00950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e4f00950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4ee7b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fc5e4f66b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fc5e4efbbf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fc5e4efbbf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fc5e4ee4740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fc5e4f63760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc5e46b56c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fc5e4f63760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc5e45b75c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fc5e45b75c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc5e45afca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fc5e46b56c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc5e46a5320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fc5e4f5c2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fc5e46b2020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fc5e46b2020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc5e46a5bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fc5e4f62060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e46b2cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e46b2cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e46a4970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4f59330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4530670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e4f51920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e452c0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fc5e4f58420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fc5e4462a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fc5e4462a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fc5e445ca20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fc5e4f55110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc5e4464aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc5e4464aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc5e4b7c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc5e4f58bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc5e56a00d0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fc5e4f47b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fc5e4f49ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fc5e4f4ac20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fc5e4eec0c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fc5e4ee2b40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fc5e4edfa10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc5e4e38220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc5e4e38220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc5e4e32af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fc5e4edbc50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fc5e4df3e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fc5e4df3e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4de5630"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fc5e4edae70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fc5e4def6a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fc5e4def6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4dd4630"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fc5e4ed80f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fc5e4dedce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fc5e4dedce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4dc9020"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fc5e4ed2c00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fc5e4dae400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fc5e4dae400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fc5e4c4d680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fc5e4ec0520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e47eae20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e47eae20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4bfb4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc5e4ebf570"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fc5e47e67b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc5e47e67b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e4ebfc80"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e47e5ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e47e5ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e4ec1d70"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e47e8ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e47e8ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e4ec1450"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e47e4160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e47e4160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e4ec5420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e47dc870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e47dc870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e4ec5cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e47d9880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e47d9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e4ecd5d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e47d80a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e47d80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e4ec8020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e47e0e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e47e0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e4ec88f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e47df670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e47df670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc5e4ec9e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fc5e47cb500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc5e47cb500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e4ec94a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e47ccce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e47ccce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e4ec41e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e47dde50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e47dde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc5e4ec4a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fc5e47dfe50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc5e47dfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e4ec33c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e47dee50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e47dee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fc5e4ebd180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e47b7a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e47b7a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4bfb4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fc5e4ebe3d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e478b9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e478b9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4bfb4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc5e4ece390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc5e475eb20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc5e4edf020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc5e475dd20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc5e475dd20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc5e4742310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fc5e4eb2ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fc5e4eb3db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e4e3b7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e4e32260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e4e32260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e3be6720"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc5e4e32af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc5e3be5020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e3be6720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e3bdf760"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc5e3be5020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc5e3bd81d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e3bdf760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e3bc2340"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fc5e3bd2b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc5e3bdd020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc5e3bdd020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc5e3bc2bd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc5e3bd4690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc5e4e1c080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc5e4e1c080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc5e4e17cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e3bbedd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e3bc9e70"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e3bc9e70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e52b3990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e3bbc440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e3bc65d0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e3bc65d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e52b0720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e3bbb760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e3bc58f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e3bc58f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e52ae1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fc5e4e130f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fc5e511d8e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fc5e4df1090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4de0b00"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fc5e4df0390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4dd9020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fc5e4e39b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4dea020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fc5e4dee9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4dcfaf0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4de92f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fc5e565a580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4de47a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fc5e56228a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4ddec60"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fc5e565dd50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4dd82f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fc5e5662530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4dd37a0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fc5e56188a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4dcec60"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fc5e5624020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4dc82f0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fc5e561a020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fc5e4dab700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc5e4da8c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fc5e4dad060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fc5e4c3fb70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e4d90760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fc5e5295730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fc5e4d8fa80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fc5e5293a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4d8e930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fc5e5624020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fc5e4c4c2f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fc5e4d7c3f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fc5e4d7c3f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fc5e4d653f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fc5e4c3e7a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fc5e4d7f620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fc5e4d7f620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fc5e4d6c7a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fc5e4d6f3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fc5e4d593f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fc5e4d79d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fc5e4d62d50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fc5e4d763f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fc5e4d5f3f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fc5e4d84bc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fc5e4d68d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fc5e4d72d50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fc5e4d5cd50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fc5e4d7b710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fc5e4d64710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fc5e4d6e710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fc5e4d58710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fc5e4d75710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fc5e4d5e710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fc5e4d7d020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fc5e4d66020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fc5e4d70100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fc5e4d5a100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fc5e4d7aa30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fc5e4d63a30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fc5e4d77020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fc5e4d60020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fc5e4d858a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fc5e4d69a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fc5e4d73a30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fc5e4d5da30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fc5e47e6160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e47da880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fc5e47d20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fc5e47d90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e47c7500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc5e47c9500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e47e5490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fc5e47cf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e47ca500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fc5e47d5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fc5e47d60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e47e9a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4bfa350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4bfa350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4bf2660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e47e4e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc5e47e3490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc5e47cec80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fc5e47e3be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e47cace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fc5e47cf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fc5e47de670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fc5e47d00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fc5e47d2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fc5e47d0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e47c8ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc5e47c9ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fc5e47d6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fc5e47d10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fc5e47cbce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fc5e47d8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e47c7ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc5e47e8480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fc5e47e0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fc5e47dd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fc5e47d30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fc5e47d3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e47da0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e47e22f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fc5e47e0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e47e47b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc5e47cc500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fc5e47c8500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fc5e47d50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fc5e47d1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc5e47e6e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fc5e47d70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc5e47e2940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fc5e47d7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fc5e47ce0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e47c59b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf0890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4befba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4beda30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e4bfb4d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4bf1510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bec8b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fc5e4bdfb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc5e4b81770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc5e4b81770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc5e4b7c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fc5e4beb060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4b5fc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e4b5fc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e3ae6940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fc5e4be8c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fc5e4b5e8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fc5e4b5e8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fc5e3ae5d70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e4bdf2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e4810020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e4810020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e3ae3020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc5e4be9a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc5e56a00d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fc5e4bdcbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc5e4b7c1d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc5e4b77b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e3ae3020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e4af7850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fc5e3ae5d70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fc5e4af8110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e3ae6940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4afdd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e3ae55d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e3adb020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e3adb020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e497a8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fc5e4af8110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fc5e4a7c440"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fc5e3ae4410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fc5e4af8790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fc5e4af8790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fc5e4a7ca50"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc5e4af2a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc5e3ae37c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e3acb760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e4af48e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fc5e4af3690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e3adc340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e3adc340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e497b5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc5e4aedb40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc5e3ad3c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc5e3ad3c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fc5e497fa80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e4af48e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e4a7dc40"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e4af7850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e4a7a700"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e4afdd80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4a7ee80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc5e4a79e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc5e4af2a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fc5e4a79060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fc5e4af3690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc5e4a74de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc5e4aedb40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fc5e4a78490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc5e4a6c8a0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc5e4a6c8a0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fc5e4a63d00"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc5e4a735a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc5e56a00d0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fc5e4a72c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fc5e4a628a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc5e4a5a290"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc5e4a653b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fc5e4a5b910"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fc5e4a2c700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fc5e55e7580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fc5e4a2ae40"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fc5e55e5d50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fc5e4a27570"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fc5e55e2580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fc5e4a25d40"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fc5e55dd580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fc5e4a22570"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fc5e55e0d50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fc5e4a315b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fc5e48cd390"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fc5e3ad2440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc5e497c9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fc5e3ad2a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fc5e48d98c0"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fc5e48d98c0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fc5e48cd390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc5e3ada020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc5e4a6c8a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e3adb7c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e4978130"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e4978130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e48e2930"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e4977020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e3acb760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e497a8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e48e3530"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e48e3530"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e3a5c6c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fc5e497fa80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fc5e49755c0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e497b5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e48e46a0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e48e46a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e3a5d850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc5e497c9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc5e4964020"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e48e2930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e3a5ba70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e48e1270"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e4977020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e49624b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e48e2930"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fc5e4964690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc5e4a653b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fc5e4964e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fc5e4a628a0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc5e48e3cb0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc5e3a5ce40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e3a5a9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e48e1270"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fc5e3a5a2d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fc5e48e19f0"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fc5e3a592b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fc5e3a60630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fc5e3a57480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fc5e48c6250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fc5e4a63d00"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fc5e48c2d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fc5e55e7580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fc5e48bf570"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fc5e55e2580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e47aac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fc5e47b5da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e47aeb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e47a8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fc5e47a1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fc5e47a8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e47942f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc5e47962f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e47b3120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fc5e479c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e47982f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc5e47adc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e47abc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fc5e47a2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fc5e47a4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e47a7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e47b6760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4bfa350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e47b1aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc5e47b0120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc5e479ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fc5e47b0870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e4798ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e47b3dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fc5e479de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fc5e47ab480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e47ad480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e47b5750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fc5e479ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fc5e47a0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fc5e479d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e4795ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc5e4796ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fc5e47a3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fc5e47a0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fc5e4799ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fc5e47a6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e4794ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc5e47b5100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fc5e47ae370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fc5e47aa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fc5e47a2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e47a7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fc5e47a1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e47a9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc5e47b4450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e47a9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e47af020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fc5e47afcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc5e47992f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e479aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e47b1450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc5e479a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fc5e47952f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fc5e47a3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fc5e479e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc5e47b4aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e47b3770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fc5e47a6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc5e47af670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fc5e47a4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fc5e479ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e47937a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e477ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fc5e4789da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e4781b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e477b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fc5e4774e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fc5e477be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e47672f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc5e476a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e4786120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fc5e4770670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e476b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc5e4780c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e477fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fc5e4775670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fc5e4778e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e477a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e478a760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4bfa350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e4785aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc5e4784120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc5e476fa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fc5e4784870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e476bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e4786dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fc5e4771e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fc5e477f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e4780480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e4789750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fc5e4772e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fc5e4773670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fc5e4771670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e4769ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc5e476aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fc5e4777670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fc5e4773e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fc5e476cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fc5e4779670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e4767ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc5e4789100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fc5e4781370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fc5e477e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fc5e4775e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e477ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fc5e4774670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e477d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc5e4787450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e477de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e4782020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fc5e4782cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc5e476c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e476dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e4785450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc5e476d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fc5e47692f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fc5e4777e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fc5e4772670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc5e4787aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e4786770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fc5e4779e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc5e4782670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fc5e4778670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fc5e4770e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e47667a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fc5e473f880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fc5e4734020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fc5e4734020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fc5e472e140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fc5e472abd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fc5e4733c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fc5e4733c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fc5e4716150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fc5e472d530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc5e46c11b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fc5e471a540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fc5e471b590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fc5e471b590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e46ca9e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fc5e4710950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fc5e4718ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fc5e4718ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fc5e46eea90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fc5e47169f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fc5e471a540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc5e46dd020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fc5e46d8530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fc5e46d8530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc5e46d4e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e46d1020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fc5e52ac830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e46c9c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fc5e5646580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fc5e46ae990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fc5e46a3900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fc5e46b0150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fc5e46a00f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fc5e46a0ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc5e4e38220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fc5e468d690"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fc5e4e39b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fc5e46879b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fc5e4df3e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fc5e4685cd0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fc5e4dee9b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fc5e468ea80"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fc5e4dab700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fc5e4683020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e45e8c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e45e8c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4bfb4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4683d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e45e78f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e45e78f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4bfa350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc5e46806d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fc5e45e62f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc5e45e62f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc5e4680de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fc5e45e5cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc5e45e5cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e467f530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e45e3370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e45e3370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e467fc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e45e2d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e45e2d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e4681e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e45dcc60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e45dcc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e4682780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e45c47a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e45c47a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e4681550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e45c82f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e45c82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e467e3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e45dd480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e45dd480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e467d5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e45dae50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e45dae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e467c020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e45d9670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e45d9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc5e467ee80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fc5e45e07b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc5e45e07b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e467b9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e45c6ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e45c6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc5e467c890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fc5e45c72f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc5e45c72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc5e467b130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fc5e45c7ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc5e45c7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fc5e4675d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fc5e45b7df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fc5e45b7df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fc5e45ae550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e469cd00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4530670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e469bbb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e452c0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fc5e4695c60"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc5e452b550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc5e452b550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc5e451ca80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc5e4688e80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc5e4523480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc5e4523480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc5e45158b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc5e46796c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc5e56a00d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e45dbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fc5e45e5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e45dfc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fc5e45d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fc5e45d9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e45c52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fc5e45cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc5e45ddc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fc5e45d3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fc5e45d5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e45d7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc5e45e1370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc5e45cca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fc5e45e1ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e45c8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e45e2060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fc5e45cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fc5e45dc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e45e6940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fc5e45cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fc5e45d0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fc5e45ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fc5e45d4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fc5e45d0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fc5e45c9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fc5e45d6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e45c5ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fc5e45df490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fc5e45db480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fc5e45d3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e45d7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fc5e45d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e45da670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc5e45e5670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e45e0160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fc5e45e0e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc5e45c92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e45cbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e45e26b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc5e45cb2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fc5e45c62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fc5e45d4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fc5e45cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e45e39c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fc5e45d6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fc5e45d5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fc5e45cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fc5e45b3020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fc5e45ad7c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc5e4598150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc5e56a00d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fc5e45ac020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fc5e4df3e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fc5e45ab380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fc5e4df1090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fc5e45aa6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fc5e4df0390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fc5e45a9a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fc5e4dad060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fc5e45a86e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e44b2d00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc5e44b2d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc5e4bfb4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e45a7530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e448fad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e448fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e45a6ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e44ac6b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e44ac6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc5e45a63a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fc5e44ab370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc5e44ab370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e45a5330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4530670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e45a41e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e452c0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fc5e45a2d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc5e452b550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fc5e45a4b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fc5e4ef0dc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e459d3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e44a4e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e44a4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e459dcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e44a3670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e44a3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e459eb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e44aa160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e44aa160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e459a6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e448f2f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e448f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc5e459b590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fc5e44912f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc5e44912f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc5e459be00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fc5e4491ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc5e4491ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e4599020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e4493ad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e4493ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc5e45998b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fc5e44b0300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc5e44b0300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fc5e458c9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc5e4527660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc5e4519af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc5e44bf300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc5e4e1c080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fc5e45123b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fc5e44c0020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fc5e45116e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fc5e52e3500"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc5e44ba450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc5e52f5050"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e44a5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fc5e44af020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e44a9c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fc5e449ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fc5e44a3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e44ae370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fc5e4497670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e44932f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc5e44a8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e44a6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fc5e449d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fc5e449fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e44a2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e44b1970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4bfa350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e44acd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc5e4496a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fc5e44abac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e44ac060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fc5e4498e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fc5e44a6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e44a8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e44b0950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fc5e449ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fc5e449b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fc5e4498670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e4490ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fc5e449e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fc5e449be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fc5e4494ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fc5e44a1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fc5e44a9490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fc5e44a5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fc5e449de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e44a2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fc5e449c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e44a4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc5e44af670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fc5e44aae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc5e44942f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e4495ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc5e44952f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fc5e44902f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fc5e449ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fc5e449a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc5e44afcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e44ae9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fc5e44a1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc5e44aa7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fc5e449f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fc5e4497e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e448e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fc5e4460920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fc5e445d940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc5e4466990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc5e445d080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc5e4440e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fc5e4444020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc5e443fae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc5e4441690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc5e4441690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc5e4b7c1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fc5e443e8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fc5e4462a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e443d170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e452c0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fc5e4423200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fc5e441f570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc5e441e3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fc5e4423950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e441ea70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e452c0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc5e43e6d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fc5e43f06b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc5e43e5b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fc5e43f0020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e43e42f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4530670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e43e3170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e452c0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fc5e43e3b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fc5e4395410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fc5e43b7db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fc5e4389800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc5e4385580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc5e4385580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc5e4b7c1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e43701c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e4f7d020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc5e42c43f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc5e4fbcd20"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fc5e42c11d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fc5e4fbac00"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc5e42c17e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc5e4fb88f0"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc5e42bea20"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc5e452b550"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e42b4890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e4f9e130"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc5e42c25c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc5e4fba020"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e42bfb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e4fb4080"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc5e42c0470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc5e4fb92d0"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc5e42b8af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc5e4527660"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc5e38d7e60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc5e38ca7f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc5e38d6aa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc5e42c17e0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc5e38d5720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc5e42c0470"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fc5e421c020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fc5e38d4da0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fc5e38d4da0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e42bfb20"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc5e38c95f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc5e4286930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc5e38c7270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc5e42c0470"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc5e4286930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc5e4236df0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc5e4234400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc5e42c43f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc5e4233060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc5e42c0470"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc5e4232720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc5e42c17e0"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fc5e4231480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fc5e4231c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc5e4212020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc5e42c17e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc5e4212c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc5e42c0470"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="8:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e506a530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5760640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc5e57609b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5760640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc5e57609b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fc5e55a41d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fc5e55a4580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fc5e55a4930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fc5e55a4ce0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fc5e55a30d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fc5e527d930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fc5e527dcd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fc5e527c0d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fc5e527c450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fc5e527c7d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fc5e527cb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fc5e527b020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fc5e527b3b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fc5e527b780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fc5e523fc80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fc5e523c0d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fc5e5159cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fc5e5159cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fc5e5117a40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fc5e5117a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fc5e5101570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fc5e5101570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fc5e5101d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fc5e5101d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fc5e5100160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fc5e5100160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fc5e5100940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fc5e5100940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fc5e5100d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fc5e50fe540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fc5e50fe540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fc5e51246d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fc5e51246d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fc5e50dd020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fc5e50dd020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fc5e50dd410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fc5e50dd410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fc5e50ddbf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fc5e50ddbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fc5e50dc020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e50a1cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e50a1cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e506a530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e506a530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fc5e506a880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e505c980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e505c980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fc5e505ccd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e4fe7550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e4fe7550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fc5e495d020" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fc5e494f2f0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fc5e49369f0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e46ec020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e46ec020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc5e46ec7b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e46ec7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fc5e42ac660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fc5e42a1360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fc5e429a0d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fc5e4282c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fc5e4218330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fc5e5756020" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e5756020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e57563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fc5e5755a20" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fc5e5755a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fc5e5755da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e5752020" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e5752020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e57523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fc5e5747130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fc5e5747130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fc5e57501b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fc5e5750340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fc5e57477d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fc5e5747960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fc5e5747af0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fc5e5747c80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fc5e5747e10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fc5e5750020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fc5e57474b0"/>
        <function-ref name="node_id" scoped="" ref="0x7fc5e5747640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fc5e5743700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fc5e5743700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e5743a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e57451a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e57451a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e5745520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fc5e5743020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fc5e5743020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e57433a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fc5e5743de0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fc5e5743de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e5742180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fc5e5745810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fc5e5745810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fc5e5744980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fc5e5744b10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fc5e5744020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fc5e57441b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fc5e5744340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fc5e57444d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fc5e5744660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fc5e57447f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fc5e5745b90"/>
        <function-ref name="node_id" scoped="" ref="0x7fc5e5745d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e5746640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e5746640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e57469c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fc5e572c900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fc5e572c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e572cc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fc5e570ade0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fc5e570ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fc5e570fc70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fc5e570f310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fc5e570f4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fc5e570f630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fc5e570f180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fc5e570f7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fc5e570f950"/>
        <function-ref name="initClocks" scoped="" ref="0x7fc5e570fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e5713850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e5713850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e5713bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fc5e56f9830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fc5e56f9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fc5e56f87f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fc5e56f9d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fc5e56f8020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fc5e56f81b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fc5e56f9bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fc5e56f8340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fc5e56f84d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fc5e56f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fc5e56f8af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc5e56f8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fc5e56f8e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e56f91c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e56f91c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e56f9540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fc5e587ac80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc5e587ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fc5e5a550a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fc5e59d79a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fc5e59d79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fc5e59d7d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fc5e5af2020"/>
        <function-ref name="sleep" scoped="" ref="0x7fc5e5af21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fc5e59183d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fc5e59183d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fc5e5918750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fc5e57118b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fc5e57118b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fc5e56c47f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fc5e5711dc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fc5e56c4020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fc5e56c41b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fc5e5711c30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fc5e56c4340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fc5e56c44d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fc5e56c4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fc5e56b78d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fc5e56b78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e56b7c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fc5e56b8110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fc5e56b8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fc5e56b8490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fc5e56b71d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fc5e56b71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e56b7550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fc5e56b8780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fc5e56b8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e56b8b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fc5e56b8c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fc5e56b8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fc5e5bf2940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e5bf2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e5bf2cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e5bf2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fc5e5bff1e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fc5e5bff1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e5bff560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fc5e5bff6f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fc5e5bff880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fc5e57a3040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fc5e57a3040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e57a33c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e57a3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fc5e579e490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fc5e579e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fc5e579e810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fc5e579e9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fc5e579eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fc5e57a4140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fc5e57a4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e57a44c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fc5e57a4650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fc5e57a47e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fc5e56a00d0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e56a00d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e56a0450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e56a05e0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e56a0770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e56a0900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e56a0a90"/>
        <function-ref name="get" scoped="" ref="0x7fc5e56a0c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e56a0db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e56ab4d0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e56ab020"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e56ab1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e56ab340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fc5e56951d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fc5e56951d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5695550"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e56956e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5695870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5695a00"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5695b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5695d20"/>
        <function-ref name="set" scoped="" ref="0x7fc5e569b020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e569b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e569e640" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e569e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e569e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fc5e569b4d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fc5e569b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e569b850"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e569b9e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e569bb70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e569bd00"/>
        <function-ref name="get" scoped="" ref="0x7fc5e569a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e569a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e569a340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e569a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fc5e569ec40" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e569ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e569d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e569d1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e569d340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e569d4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e569d660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e569d7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e569d980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e569c020"/>
        <function-ref name="set" scoped="" ref="0x7fc5e569db10"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e569dca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e569de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fc5e569a7f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fc5e569a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e569ab70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e569ad00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5694020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56941b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5694340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e56944d0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5694660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e56947f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fc5e569fd80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fc5e569fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5678180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5678310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56784a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5678630"/>
        <function-ref name="get" scoped="" ref="0x7fc5e56787c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5678950"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5678ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5678c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fc5e5677020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fc5e5677020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e56773a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5677530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56776c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5677850"/>
        <function-ref name="get" scoped="" ref="0x7fc5e56779e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5677b70"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5677d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5676020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fc5e5675600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e5675600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e5675980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fc5e5676380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fc5e5676380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5676700"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5676890"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5676a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5676bb0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5676d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5675020"/>
        <function-ref name="set" scoped="" ref="0x7fc5e56751b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5675340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fc5e565a580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fc5e565a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e565a900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e565aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e565ac20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5658980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5659020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56591b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5659340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e56594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5659660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e56597f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5659980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5659b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5659ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5658020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56581b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5658340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e56584d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e565adb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5658660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fc5e5641710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fc5e5641710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5641a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5641c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5641db0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e563fa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56401b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5640340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e56404d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5640660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e56407f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5640980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5640b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5640ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5640e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e563f120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e563f2b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e563f440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e563f5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5640020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e563f760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e563f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fc5e55b7d30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fc5e55b7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55b60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55b6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55b6400"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55b41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55b6720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55b68b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55b6a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55b6bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55b6d60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55b5020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55b51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55b5340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55b54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55b5760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55b58f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55b5a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55b5c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55b6590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55b5da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fc5e55bcd40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fc5e55bcd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55bb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55bb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55bb400"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55b91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55bb720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55bb8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55bba40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55bbbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55bbd60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55ba020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55ba1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55ba340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55ba4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55ba760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55ba8f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55baa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55bac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55bb590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55bada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fc5e55e5d50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fc5e55e5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55e4100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55e4290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55e4420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55e21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55e4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55e48d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55e4a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55e4bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55e4d80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55e3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55e31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55e3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55e34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55e3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55e38f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55e3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55e3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55e45b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55e3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fc5e563b710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fc5e563b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e563ba90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e563bc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e563bdb0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5639a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e563a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e563a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e563a4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e563a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e563a7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e563a980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e563ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e563aca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e563ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5639120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56392b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5639440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e56395d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e563a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5639760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fc5e56228a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fc5e56228a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5622c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5622db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5621020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5620c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5621340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56214d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5621660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e56217f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5621980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5621b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5621ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5621e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5620020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e56202b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5620440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e56205d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5620760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56211b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56208f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5620a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fc5e56098a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fc5e56098a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5609c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5609db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5608020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5607c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5608340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56084d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5608660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e56087f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5608980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5608b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5608ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5608e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5607020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e56072b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5607440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e56075d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5607760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56081b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56078f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5607a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fc5e55f48a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fc5e55f48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55f4c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55f4db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55f3020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55f2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55f3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55f34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55f3660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55f37f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55f3980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55f3b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55f3ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55f3e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55f2020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55f22b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55f2440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55f25d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55f2760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55f31b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55f28f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55f2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fc5e55e0d50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fc5e55e0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55df100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55df290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55df420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55dd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55df740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55df8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55dfa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55dfbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55dfd80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55de020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55de1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55de340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55de4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55de760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55de8f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55dea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55dec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55df5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55deda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fc5e55ccd40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fc5e55ccd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55cb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55cb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55cb400"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55c91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55cb720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55cb8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55cba40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55cbbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55cbd60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55ca020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55ca1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55ca340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55ca4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55ca760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55ca8f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55caa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55cac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55cb590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55cada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fc5e55add50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fc5e55add50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55ac100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55ac290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55ac420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55aa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55ac740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55ac8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55aca60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55acbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55acd80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55ab020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55ab1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55ab340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55ab4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55ab760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55ab8f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55aba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55abc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55ac5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55abda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fc5e5653d50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fc5e5653d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5652100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5652290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5652420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e56501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5652740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56528d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5652a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5652bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5652d80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5651020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e56511b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5651340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e56514d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5651760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56518f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5651a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5651c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56525b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5651da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5650020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fc5e55dd580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fc5e55dd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55dd900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55dda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55ddc20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55db980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55dc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55dc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55dc340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55dc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55dc660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55dc7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55dc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55dcb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55dcca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55db020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55db1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55db340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55db4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55dddb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55db660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55db7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fc5e564ed50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fc5e564ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e564d100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e564d290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e564d420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e564b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e564d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e564d8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e564da60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e564dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e564dd80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e564c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e564c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e564c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e564c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e564c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e564c8f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e564ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e564cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e564d5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e564cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e564b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fc5e5634e50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fc5e5634e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5633210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e56333a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5633530"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5631340"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5633850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5633b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5633d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5632020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e56321b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5632340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e56324d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5632660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e56328f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5632a80"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5632c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5632da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56336c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5631020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fc5e561a020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fc5e561a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e561a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e561a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e561a6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e56184d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e561a9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e561ab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e561ad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5619020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e56191b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5619340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e56194d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5619660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e56197f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5619a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5619c10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5619da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5618020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e561a850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56181b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5618340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fc5e5600020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fc5e5600020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e56003a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5600530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e56006c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55fe4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56009e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5600b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5600d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55ff020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55ff1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55ff340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55ff4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55ff660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55ff7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55ffa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55ffc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55ffda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55fe020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5600850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55fe1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fc5e55ec020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fc5e55ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55ec3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55ec530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55ec6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55ea4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55ec9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55ecb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55ecd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55eb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55eb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55eb340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55eb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55eb660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55eb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55eba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55ebc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55ebda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55ea020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55ec850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55ea1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55ea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fc5e565f580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fc5e565f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e565f900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e565fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e565fc20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e565d980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e565e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e565e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e565e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e565e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e565e660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e565e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e565e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e565eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e565eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e565d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e565d1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e565d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e565d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e565fdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e565d660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e565d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fc5e5646580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fc5e5646580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5646a00"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5646b90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5646d20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5644a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56451b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5645340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e56454d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5645660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e56457f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5645980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5645b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5645ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5645e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5644120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56442b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5644440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e56445d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5645020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5644760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fc5e562c710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fc5e562c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e562ca90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e562cc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e562cdb0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e562aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e562b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e562b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e562b4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e562b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e562b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e562b980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e562bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e562bca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e562be30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e562a120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e562a2b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e562a440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e562a5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e562b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e562a760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e562a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fc5e55e7580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fc5e55e7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55e7900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55e7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55e7c20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55e5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55e6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55e61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55e6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55e64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55e6660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55e67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55e6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55e6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55e6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55e5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55e51b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55e5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55e54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55e7db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55e5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fc5e55c3570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fc5e55c3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55c38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55c3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55c3c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55c1980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55c21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55c2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55c2660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55c27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55c2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55c2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55c2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55c1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55c11b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55c1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55c14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55c3da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55c1660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55c17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fc5e55af570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fc5e55af570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55af8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55afa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55afc10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55ad980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55ae1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55ae340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55ae660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55ae7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55ae980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55aeb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55aeca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55ad020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55ad1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55ad340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55ad4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55afda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55ad660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55ad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fc5e55d3580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fc5e55d3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55d3900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55d3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55d3c20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55d1980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55d21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55d2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55d24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55d2660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55d27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55d2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55d2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55d2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55d1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55d11b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55d1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55d14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55d3db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55d1660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fc5e5627710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fc5e5627710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5627c90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5627e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5626020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5625c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5626340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56264d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5626660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e56267f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5626980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5626b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5626ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5626e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5625020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e56252b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5625440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e56255d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5625760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56261b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56258f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5625a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fc5e560e8a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fc5e560e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e560ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e560edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e560d020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e560cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e560d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e560d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e560d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e560d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e560d980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e560db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e560dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e560de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e560c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e560c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e560c440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e560c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e560c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e560d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e560c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e560ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fc5e55f98a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fc5e55f98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55f9c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55f9db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55f8020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55f7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55f8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55f84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55f8660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55f87f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55f8980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55f8b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55f8ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55f8e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55f7020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55f72b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55f7440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55f75d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55f7760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55f81b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55f78f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55f7a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fc5e55c1d40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fc5e55c1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55c00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55c0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55c0400"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55be1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55c0720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55c08b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55c0a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55c0bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55c0d60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55bf020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55bf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55bf340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55bf4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55bf760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55bf8f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55bfa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55bfc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55c0590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55bfda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fc5e55dbd40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fc5e55dbd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55da0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55da270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55da400"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55d81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55da720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55da8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55daa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55dabd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55dad60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55d9020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55d91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55d9340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55d94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55d9760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55d98f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55d9a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55d9c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55da590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55d9da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fc5e5658d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fc5e5658d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5657100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5657290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5657420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e56551b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5657740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56578d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5657a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5657bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5657d80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5656020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e56561b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5656340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e56564d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5656760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56568f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5656a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5656c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56575b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5656da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5655020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fc5e563fe50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fc5e563fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e563d210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e563d3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e563d530"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e563b340"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e563d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e563d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e563db70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e563dd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e563c020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e563c1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e563c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e563c4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e563c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e563c8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e563ca80"/>
        <function-ref name="set" scoped="" ref="0x7fc5e563cc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e563cda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e563d6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e563b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e563b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fc5e55fe8a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fc5e55fe8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55fec20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55fedb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55fd020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55fcc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55fd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55fd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55fd660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55fd7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55fd980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55fdb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55fdca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55fde30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55fc020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55fc2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55fc440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55fc5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55fc760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55fd1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55fc8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55fca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fc5e5639e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fc5e5639e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5638210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e56383a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5638530"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5636340"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5638850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56389e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5638b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5638d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5637020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e56371b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5637340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e56374d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5637660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e56378f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5637a80"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5637c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5637da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56386c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5636020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fc5e561f020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fc5e561f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e561f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e561f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e561f6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e561d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e561f9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e561fb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e561fd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e561e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e561e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e561e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e561e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e561e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e561e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e561ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e561ec10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e561eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e561d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e561f850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e561d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e561d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fc5e5606020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fc5e5606020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e56063a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5606530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e56066c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e56044d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56069e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5606b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5606d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5605020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e56051b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5605340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e56054d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5605660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e56057f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5605a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5605c10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5605da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5604020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5606850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56041b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5604340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fc5e55f1020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fc5e55f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55f13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55f1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55f16c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55ef4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55f19e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55f1b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55f1d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55f0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55f01b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55f0340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55f04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55f0660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55f07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55f0a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55f0c10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55f0da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55ef020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55f1850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55ef1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fc5e55d6d50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fc5e55d6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55d5100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55d5290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55d5420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55d31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55d5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55d58d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55d5a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55d5bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55d5d80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55d4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55d41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55d4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55d44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55d4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55d48f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55d4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55d4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55d55b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55d4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fc5e5662530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fc5e5662530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e56628b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5662a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5662bd0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5670980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5671020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56711b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5671340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e56714d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5671660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e56717f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5671980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5671b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5671ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5670020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56701b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5670340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e56704d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5662d60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5670660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56707f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fc5e564b580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fc5e564b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e564b900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e564ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e564bc20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5649980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e564a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e564a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e564a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e564a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e564a660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e564a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e564a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e564ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e564aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5649020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56491b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5649340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e56494d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e564bdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5649660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fc5e5631710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fc5e5631710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5631a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5631c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5631db0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e562fa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56301b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5630340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e56304d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5630660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e56307f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5630980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5630b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5630ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5630e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e562f120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e562f2b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e562f440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e562f5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5630020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e562f760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e562f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fc5e56188a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fc5e56188a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5618c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5618db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5617020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5616c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5617340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56174d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5617660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e56177f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5617980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5617b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5617ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5617e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5616020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e56162b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5616440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e56165d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5616760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56171b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56168f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5616a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fc5e55d1d50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fc5e55d1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55d0100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55d0290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55d0420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55ce1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55d0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55d08d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55d0a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55d0bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55d0d80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55cf020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55cf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55cf340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55cf4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55cf760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55cf8f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55cfa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55cfc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55d05b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55cfda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fc5e55c9570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fc5e55c9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55c98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55c9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55c9c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55c6980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55c7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55c71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55c7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55c74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55c7660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55c77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55c7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55c7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55c7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55c6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55c61b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55c6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55c64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55c9da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55c6660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fc5e55b9570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fc5e55b9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55b98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55b9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55b9c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55b7980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55b8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55b81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55b8340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55b84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55b8660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55b87f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55b8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55b8b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55b8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55b7020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55b71b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55b7340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55b74d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55b9da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55b7660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55b77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fc5e56138a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fc5e56138a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5613c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5613db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5612020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5611c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5612340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56124d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5612660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e56127f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5612980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5612b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5612ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5612e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5611020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e56112b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5611440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e56115d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5611760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56121b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56118f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5611a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fc5e55ce580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fc5e55ce580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55ce900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55cea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55cec20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55cc980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55cd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55cd340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55cd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55cd660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55cd7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55cd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55cdb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55cdca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55cc020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55cc1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55cc340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55cc4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55cedb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55cc660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55cc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fc5e565dd50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fc5e565dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e565c100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e565c290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e565c420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e565a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e565c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e565c8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e565ca60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e565cbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e565cd80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e565b020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e565b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e565b340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e565b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e565b760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e565b8f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e565ba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e565bc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e565c5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e565bda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e565a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fc5e5644e50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fc5e5644e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5643210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e56433a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5643530"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5641340"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5643850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56439e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5643b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5643d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5642020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e56421b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5642340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e56424d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5642660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e56428f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5642a80"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5642c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5642da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56436c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5641020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fc5e562ae50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fc5e562ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5629210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e56293a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5629530"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5627340"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5629850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56299e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5629b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5629d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5628020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e56281b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5628340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e56284d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5628660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e56288f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5628a80"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5628c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5628da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56296c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5627020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fc5e55d8580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fc5e55d8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55d8900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55d8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55d8c20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55d6980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55d7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55d74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55d7660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55d77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55d7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55d7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55d7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55d6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55d61b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55d6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55d64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55d8db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55d6660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fc5e55be570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fc5e55be570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55be8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55bea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55bec10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55bc980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55bd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55bd340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55bd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55bd660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55bd7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55bd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55bdb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55bdca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55bc020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55bc1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55bc340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55bc4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55beda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55bc660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fc5e5624020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fc5e5624020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e56243a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5624530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e56246c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e56224d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56249e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5624b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5624d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5623020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e56231b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5623340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e56234d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5623660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e56237f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5623a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5623c10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5623da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5622020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5624850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56221b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5622340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fc5e560b020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fc5e560b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e560b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e560b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e560b6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e56094d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e560b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e560bb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e560bd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e560a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e560a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e560a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e560a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e560a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e560a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e560aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e560ac10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e560ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5609020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e560b850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56091b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5609340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fc5e55f6020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fc5e55f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55f63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55f6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55f66c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55f44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55f69e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55f6b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55f6d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55f5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55f51b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55f5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55f54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55f5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55f57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55f5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55f5c10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55f5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55f4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55f6850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55f41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fc5e5655580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fc5e5655580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5655900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5655a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5655c20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5653980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5654020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5654340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e56544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5654660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e56547f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5654980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5654b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5654ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5653020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56531b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5653340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e56534d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5655db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5653660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fc5e55fb020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fc5e55fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55fb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55fb6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55f94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55fb9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55fbb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55fbd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55fa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55fa1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55fa340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55fa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55fa660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55fa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55faa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55fac10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55fada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55f9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55fb850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55f91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55f9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fc5e5650580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fc5e5650580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5650900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5650a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5650c20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e564e980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e564f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e564f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e564f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e564f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e564f660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e564f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e564f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e564fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e564fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e564e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e564e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e564e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e564e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5650db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e564e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e564e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fc5e5636710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fc5e5636710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5636a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5636c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5636db0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5634a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5635340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e56354d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5635660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e56357f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5635980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5635b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5635ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5635e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5634120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56342b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5634440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e56345d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5635020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5634760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e56348f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fc5e561d8a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fc5e561d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e561dc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e561ddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e561c020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e561bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e561c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e561c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e561c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e561c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e561c980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e561cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e561cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e561ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e561b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e561b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e561b440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e561b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e561b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e561c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e561b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e561ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fc5e56048a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fc5e56048a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5604c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5604db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5602020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5601c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5602340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56024d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5602660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e56027f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5602980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5602b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5602ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5602e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5601020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e56012b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5601440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e56015d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5601760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56021b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56018f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5601a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fc5e55ef8a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fc5e55ef8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55efc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55efdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55ee020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55edc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55ee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55ee4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55ee660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55ee7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55ee980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55eeb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55eeca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55eee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55ed020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55ed2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55ed440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55ed5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55ed760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55ee1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55ed8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55eda80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fc5e5670d50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fc5e5670d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5661100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5661290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5661420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e565f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5661740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56618d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5661a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5661bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5661d80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5660020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e56601b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5660340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e56604d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5660760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56608f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5660a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5660c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56615b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5660da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e565f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fc5e5649d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fc5e5649d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5648100"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5648290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5648420"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e56461b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5648740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e56488d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5648a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5648bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5648d80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5647020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e56471b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5647340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e56474d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5647760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e56478f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5647a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5647c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e56485b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5647da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5646020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fc5e562fe50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fc5e562fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e562e210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e562e3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e562e530"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e562c340"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e562e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e562e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e562eb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e562ed00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e562d020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e562d1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e562d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e562d4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e562d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e562d8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e562da80"/>
        <function-ref name="set" scoped="" ref="0x7fc5e562dc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e562dda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e562e6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e562c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e562c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fc5e5615020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fc5e5615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e56153a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5615530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e56156c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e56134d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56159e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5615b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5615d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5614020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e56141b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5614340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e56144d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5614660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e56147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5614a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5614c10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5614da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5613020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5615850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e56131b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5613340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fc5e55c6d40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fc5e55c6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55c50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55c5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55c5400"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55c31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55c5720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55c58b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55c5a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55c5bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55c5d60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55c4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55c41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55c4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55c44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55c4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55c48f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55c4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55c4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55c5590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55c4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fc5e55b4560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fc5e55b4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55b48e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55b4a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55b4c00"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55b2980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55b3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55b31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55b3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55b34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55b3660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55b37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55b3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55b3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55b3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55b2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55b21b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55b2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55b24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55b4d90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55b2660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fc5e55e2580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fc5e55e2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55e2900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55e2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55e2c20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55e0980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55e11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55e1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55e14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55e1660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55e17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55e1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55e1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55e1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55e0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55e01b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55e0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55e04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55e2db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55e0660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fc5e5610020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fc5e5610020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e56103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5610530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e56106c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e560e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e56109e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5610b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5610d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e560f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e560f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e560f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e560f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e560f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e560f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e560fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e560fc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e560fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e560e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5610850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e560e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e560e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fc5e55b2d40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fc5e55b2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55b10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55b1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55b1400"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55af1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55b1720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55b18b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55b1a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55b1bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55b1d60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55b0020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55b01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55b0340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55b04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55b0760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55b08f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55b0a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55b0c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55b1590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55b0da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fc5e55aa580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fc5e55aa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55aa900"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55aaa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55aac20"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55a8980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55a9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55a91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55a9340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55a94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55a9660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55a97f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55a9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55a9b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55a9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55a8020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55a81b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55a8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55a84d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55aadb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55a8660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fc5e55ea8f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fc5e55ea8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55e90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55e9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e55e93c0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55e96e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55e9870"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55e9a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55e9b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55e9d20"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55e8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55e81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55e8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55e84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55e8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55e88f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55e8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55e8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e55e9550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55e8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e55a5d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e55a5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55760e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5576270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5576400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55741b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5576720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55768b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5576a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5576bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5576d60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5575020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55751b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5575340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55754d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5575760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55758f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5575a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5575c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5575da0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5576590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5574020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5571260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5571260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55715e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5571770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5571900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e556f660"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5571c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5571db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5570020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5570340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55704d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5570660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55707f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5570980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5570c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5570da0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e556f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e556f1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e556f340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5571a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e556f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e556c740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e556c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e556cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e556cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e556cde0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e556aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e556b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e556b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e556b4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e556b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e556b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e556b980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e556bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e556bca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e556be30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e556a120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e556a2b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e556a440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e556a5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e556a760"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e556b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e556a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5567b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5567b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5565020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55651b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5565340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5563020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5565660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55657f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5565980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5565b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5565ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5565e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5564020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55641b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5564340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55645d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5564760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55648f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5564a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5564c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55654d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5564da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5560060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5560060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55603e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5560570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5560700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e555e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5560a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5560bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5560d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e555f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e555f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e555f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e555f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e555f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e555f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e555fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e555fc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e555fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e555e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e555e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5560890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e555e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e555b540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e555b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e555b8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e555ba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e555bbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5559980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e555a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e555a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e555a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e555a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e555a660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e555a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e555a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e555ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e555aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5559020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55591b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5559340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55594d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5559660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e555bd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5556b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5556b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5555020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55551b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5555340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5553020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5555660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55557f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5555980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5555b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5555ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5555e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5554020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55541b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5554340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55545d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5554760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55548f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5554a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5554c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55554d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5554da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5550060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5550060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55503e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5550570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5550700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e554e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5550a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5550bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5550d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e554f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e554f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e554f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e554f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e554f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e554f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e554fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e554fc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e554fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e554e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e554e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5550890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e554e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e554b540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e554b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e554b8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e554ba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e554bbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5549980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e554a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e554a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e554a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e554a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e554a660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e554a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e554a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e554ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e554aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5549020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55491b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5549340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55494d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5549660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e554bd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5546b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5546b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5545020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55451b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5545340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5543020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5545660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55457f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5545980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5545b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5545ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5545e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5544020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55441b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5544340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55445d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5544760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55448f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5544a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5544c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55454d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5544da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5540060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5540060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55403e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5540570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5540700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e553e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5540a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5540bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5540d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e553f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e553f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e553f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e553f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e553f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e553f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e553fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e553fc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e553fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e553e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e553e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5540890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e553e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e553b540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e553b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e553b8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e553ba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e553bbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5538980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5539020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55391b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5539340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5539660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55397f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5539980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5539b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5539ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5538020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55381b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5538340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55384d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5538660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e553bd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55387f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5535d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5535d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55340e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5534270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5534400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e55321b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5534720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55348b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5534a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5534bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5534d60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5533020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e55331b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5533340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e55334d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5533760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55338f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5533a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5533c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5533da0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5534590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5532020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e552f260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e552f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e552f5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e552f770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e552f900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e552d660"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e552fc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e552fdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e552e020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e552e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e552e340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e552e4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e552e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e552e7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e552e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e552ec10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e552eda0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e552d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e552d1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e552d340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e552fa90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e552d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e552a740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e552a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e552aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e552ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e552ade0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5528a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e55291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e5529340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e55294d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5529660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e55297f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5529980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5529b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5529ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5529e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5528120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55282b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5528440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55285d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5528760"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5529020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5525b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5525b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5524020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55241b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5524340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5522020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5524660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55247f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5524980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5524b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5524ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5524e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5523020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55231b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5523340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55235d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5523760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55238f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5523a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5523c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55244d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5523da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e551f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e551f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e551f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e551f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e551f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e551d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e551fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e551fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e551fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e551e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e551e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e551e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e551e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e551e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e551e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e551ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e551ec10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e551eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e551d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e551d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e551f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e551d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e551a540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e551a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e551a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e551aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e551abe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5518980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5519020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55191b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5519340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55194d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5519660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55197f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5519980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5519b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5519ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5518020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55181b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5518340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55184d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5518660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e551ad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55187f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5515b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5515b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5514020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55141b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5514340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5512020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5514660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55147f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5514980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5514b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5514ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5514e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5513020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55131b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5513340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55135d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5513760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55138f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5513a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5513c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55144d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5513da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e550e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e550e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e550e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e550e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e550e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e550c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e550ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e550ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e550ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e550d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e550d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e550d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e550d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e550d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e550d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e550da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e550dc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e550dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e550c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e550c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e550e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e550c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5509540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5509540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e55098c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5509a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5509be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5507980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5508020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55081b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5508340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e55084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5508660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e55087f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5508980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5508b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5508ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5507020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e55071b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5507340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e55074d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5507660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5509d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e55077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5504b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5504b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5503020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e55031b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5503340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5501020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5503660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e55037f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5503980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5503b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5503ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5503e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5502020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e55021b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5502340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e55025d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e5502760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e55028f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5502a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5502c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e55034d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5502da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54fe060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54fe060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54fe3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54fe570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54fe700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54fc4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54fea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54febb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54fed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54fd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54fd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54fd340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54fd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54fd660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54fd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54fda80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54fdc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54fdda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54fc020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54fc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54fe890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54f9540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54f9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54f98c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54f9a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54f9be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54f7980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54f81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54f8340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54f84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54f8660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54f87f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54f8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54f8b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54f8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54f7020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54f71b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54f7340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54f74d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54f7660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54f9d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54f77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54f4dc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54f4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54f3180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54f3310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54f34a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54f11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54f37c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54f3950"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54f3ae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54f3c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54f3e00"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54f2020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54f21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54f2340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54f24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54f2760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54f28f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54f2a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54f2c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54f2da0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54f3630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54ee260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54ee260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54ee5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54ee770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54ee900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54ec660"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54eec20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54eedb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54ed020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54ed1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54ed340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54ed4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54ed660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54ed7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54ed980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54edc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54edda0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54ec020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54ec1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54ec340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54eea90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54e9740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54e9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54e9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54e9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54e9de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54e6a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54e71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54e7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54e74d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54e77f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54e7980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54e7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54e7ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54e7e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54e6120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54e62b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54e6440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54e65d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54e6760"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54e7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54e68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54e3b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54e3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54e2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54e21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54e2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54e2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54e27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54e2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54e2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54e2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54e2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54e1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54e11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54e1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54e15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54e1760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54e18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54e1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54e1c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54e24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54e1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54dd060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54dd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54dd3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54dd570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54dd700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54db4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54dda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54ddbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54ddd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54dc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54dc1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54dc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54dc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54dc660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54dc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54dca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54dcc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54dcda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54db020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54db1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54dd890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54d8540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54d8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54d88c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54d8a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54d8be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54d6980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54d7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54d74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54d7660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54d77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54d7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54d7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54d7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54d6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54d61b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54d6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54d64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54d6660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54d8d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54d3b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54d3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54d2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54d21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54d2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54d0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54d2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54d27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54d2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54d2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54d2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54d2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54d1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54d11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54d1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54d15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54d1760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54d18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54d1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54d1c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54d24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54d1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54cd060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54cd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54cd3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54cd570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54cd700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54cb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54cda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54cdbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54cdd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54cc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54cc1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54cc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54cc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54cc660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54cc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54cca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54ccc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54ccda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54cb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54cb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54cd890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54c8540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54c8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54c88c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54c8a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54c8be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54c6980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54c7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54c71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54c7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54c74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54c7660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54c77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54c7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54c7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54c7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54c6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54c61b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54c6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54c64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54c6660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54c8d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54c3b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54c3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54c2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54c21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54c2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54c0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54c2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54c27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54c2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54c2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54c2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54c2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54c1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54c11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54c1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54c15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54c1760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54c18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54c1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54c1c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54c24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54bd060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54bd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54bd3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54bd570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54bd700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54ba4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54bda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54bdbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54bdd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54bb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54bb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54bb340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54bb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54bb660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54bb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54bba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54bbc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54bbda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54ba020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54ba1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54bd890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54ba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54b7540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54b7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54b78c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54b7a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54b7be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54b5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54b61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54b6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54b64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54b6660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54b67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54b6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54b6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54b6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54b5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54b51b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54b5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54b54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54b5660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54b7d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54b57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54b2b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54b2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54b1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54b11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54b1340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54af020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54b1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54b17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54b1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54b1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54b1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54b1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54b0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54b01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54b0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54b05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54b0760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54b08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54b0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54b0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54b14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54b0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54ac060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54ac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54ac3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54ac570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54ac700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54aa4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54aca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54acbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54acd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54ab020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54ab1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54ab340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54ab4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54ab660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54ab7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54aba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54abc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54abda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54aa020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54aa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54ac890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54a7540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54a7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54a78c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54a7a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54a7be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54a5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54a6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54a61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54a6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54a64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54a6660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54a67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54a6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54a6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54a6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54a5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54a51b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54a5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54a54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54a5660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54a7d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54a57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e54a2b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e54a2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54a1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54a11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e54a1340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e549f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e54a1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54a17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e54a1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54a1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e54a1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54a1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e54a0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e54a01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e54a0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e54a05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54a0760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e54a08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54a0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54a0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54a14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54a0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e549c060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e549c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e549c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e549c570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e549c700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e549a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e549ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e549cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e549cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e549b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e549b1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e549b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e549b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e549b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e549b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e549ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e549bc10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e549bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e549a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e549a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e549c890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e549a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5497540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5497540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54978c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5497a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5497be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5495980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5496020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54961b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5496340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5496660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54967f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5496980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5496b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5496ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5495020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54951b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5495340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54954d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5495660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5497d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5491b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5491b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5490020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54901b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5490340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e548e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5490660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54907f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5490980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5490b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5490ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5490e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e548f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e548f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e548f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e548f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e548f760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e548f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e548fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e548fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54904d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e548fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e548b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e548b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e548b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e548b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e548b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54894d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e548ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e548bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e548bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e548a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e548a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e548a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e548a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e548a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e548a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e548aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e548ac10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e548ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5489020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54891b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e548b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5489340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5486540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5486540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54868c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5486a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5486be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5484980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5485020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54851b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5485340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5485660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54857f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5485980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5485b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5485ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5484020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54841b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5484340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54844d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5484660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5486d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5481b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5481b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e5480020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e54801b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5480340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e547e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5480660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54807f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5480980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e5480b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5480ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5480e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e547f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e547f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e547f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e547f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e547f760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e547f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e547fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e547fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e54804d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e547fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e547b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e547b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e547b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e547b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e547b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e54794d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e547ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e547bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e547bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e547a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e547a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e547a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e547a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e547a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e547a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e547aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e547ac10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e547ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e5479020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e54791b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e547b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e5479340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc5e5476540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc5e5476540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e54768c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e5476a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e5476be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e5474980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e5475020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e54751b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e5475340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e54754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e5475660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e54757f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e5475980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e5475b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e5475ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e5474020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e54741b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e5474340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e54744d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e5474660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e5476d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e54747f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e53e6610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e53e6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e53e6990"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e53e6b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e53e6cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e53e4980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e53e5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e53e51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e53e5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e53e54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e53e5660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e53e57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e53e5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e53e5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e53e5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e53e4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e53e41b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e53e4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e53e44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e53e4660"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e53e6e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e53e47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e53f8480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e53f8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e53f8800"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e53f8990"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e53f8b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e53f8cb0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e53f8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e53e6020"/>
        <function-ref name="set" scoped="" ref="0x7fc5e53e61b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e53e6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e53e0de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e53e0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e53df180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e53df310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e53df4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e53dd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e53df7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e53df950"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e53dfae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e53dfc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e53dfe00"/>
        <function-ref name="get" scoped="" ref="0x7fc5e53de020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e53de1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e53de340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e53de4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e53de760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e53de8f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e53dea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e53dec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e53deda0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e53df630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e53dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e53e1b20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e53e1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e53e0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e53e01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e53e0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e53e04d0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e53e0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e53e07f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e53e0980"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e53e0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e53da480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e53da480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e53da800"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e53da990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e53dab20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e53d87f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e53dae40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e53d9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e53d91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e53d9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e53d94d0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e53d9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e53d97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e53d9980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e53d9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e53d9da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e53d8020"/>
        <function-ref name="set" scoped="" ref="0x7fc5e53d81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e53d8340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e53d84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e53dacb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e53d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e53db1b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e53db1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e53db530"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e53db6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e53db850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e53db9e0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e53dbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e53dbd00"/>
        <function-ref name="set" scoped="" ref="0x7fc5e53da020"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e53da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7fc5e5338a50" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7fc5e5338a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc5e5338dd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc5e5349020"/>
        <function-ref name="start" scoped="" ref="0x7fc5e53491b0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e5349340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fc5e53cdcf0" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fc5e53cdcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fc5e53ca0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fc5e535b910" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc5e535b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e535bc90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e535be20"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e53b3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e53b31b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e53b3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fc5e53408f0" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc5e53408f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e5340c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e5340e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e534a020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e534a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e534a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc5e5331c20" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e5331c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc5e5341020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc5e53411b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc5e5341340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc5e53414d0"/>
        <function-ref name="getPower" scoped="" ref="0x7fc5e5341660"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc5e53417f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fc5e533b180" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e533b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e533b500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc5e53ca360" loc="10:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e53ca360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e53ca6e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e53ca870"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e53caa00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e53cab90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e53cad20"/>
        <function-ref name="get" scoped="" ref="0x7fc5e53c9020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e53c91b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e53c97f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e53c9340"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e53c94d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e53c9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7fc5e53bd820" loc="11:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7fc5e53bd820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e53bbcf0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e53c7300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e53bb0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e53c7c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e53ba660"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e53ba1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e53c7780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e53c8480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e53bb6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e53c8950"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e53c8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7fc5e53bacd0" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7fc5e53bacd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e53b5220"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e53b87c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e53b6590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e53b6110"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e53b5b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e53b56a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e53b8c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e53b9940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e53b6ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e53b9e10"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e53b8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fc5e534b8d0" loc="15:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc5e534b8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc5e534bc50"/>
        <function-ref name="source" scoped="" ref="0x7fc5e534bde0"/>
        <function-ref name="address" scoped="" ref="0x7fc5e53b2020"/>
        <function-ref name="destination" scoped="" ref="0x7fc5e53b21b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc5e53b2340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc5e53b24d0"/>
        <function-ref name="type" scoped="" ref="0x7fc5e53b2660"/>
        <function-ref name="setType" scoped="" ref="0x7fc5e53b27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc5e53b2980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc5e53b2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc5e53b2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc5e5300980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e5300980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e4fd4e80"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4fd54a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e4fd4260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e4fd5da0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e4fd27a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e4fd2320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e4fd5920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e4fd65a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e4fd4870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e4fd6a70"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4fd5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fc5e52f5050" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fc5e52f5050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e52f2630"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e52f4ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e52f3920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e52f34a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e52f0020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e52f2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e52f3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e52f5c40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e52f2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e52f4170"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e52f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fc5e52edc30" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fc5e52edc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e52e8110"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e52ea6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e52e94a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e52e9020"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e52e8a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e52e8590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e52eab20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e52ec860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e52e9ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e52ecd30"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e52ea220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fc5e52e3500" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fc5e52e3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e52e5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e52f0e50" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e52f0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e52ed210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc5e50a6870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc5e50a6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e50a2090"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e50a4090"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e50a4a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e50a4550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e50a2550"/>
        <function-ref name="start" scoped="" ref="0x7fc5e50a56a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e50a5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e50a6020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e50a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e50a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc5e3e3e4f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc5e3e3e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3e3cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3e3dda0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e3e3c760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3e3c2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e3e3b2a0"/>
        <function-ref name="start" scoped="" ref="0x7fc5e3e3d3d0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3e3d8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e3e3fb10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e3e3fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e3e3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fc5e3e26da0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e3e26da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e3e25180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e3e25310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e3e254a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e3e25630"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3e257c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fc5e3e28340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e3e28340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e3e286c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e3e28850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e3e289e0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e3e28b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e3e28d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e3e27020"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e3e271b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e3e27340"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e3e274d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e3e27660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e3e277f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fc5e3e27a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e3e27a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e3e27e00"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e3e26020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e3e261b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e3e26340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e3e264d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e3e26660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e3e267f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e3e26980"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e3e26b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fc5e52ae1d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e52ae1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e52ae550"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e52ae6e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e52ae870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e52aea00"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e52aeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fc5e52b3990" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e52b3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e52b3d10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e52b2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e52b21b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e52b2340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e52b24d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e52b2660"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e52b27f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e52b2980"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e52b2b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e52b2ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e52b2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fc5e52b0720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e52b0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e52b0aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e52b0c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e52b0dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e52af020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e52af1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e52af340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e52af4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e52af660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e52af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fc5e529d730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fc5e529d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e529dab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e529dc40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e529ddd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e529c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e529c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e529c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e529c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e529c660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e529c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fc5e5298280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fc5e5298280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e5298600"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e5298790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e5298920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e5298ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e5298c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e5298dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e5297020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e52971b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e5297340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fc5e529e700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fc5e529e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e529ea80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e529ec10"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e529eda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e529d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e529d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e529d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fc5e528b020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fc5e528b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e528b3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e528b530"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e528b6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e528b850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e528b9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e528bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fc5e52a4890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fc5e52a4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e52a4c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e52a4da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e529e020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e529e1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e529e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fc5e528d160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fc5e528d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e528d4e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e528d670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e528d800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e528d990"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e528db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fc5e5282ae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fc5e5282ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e5282e60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e5281020"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e52811b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e5281340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e52814d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e5281660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fc5e528a020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fc5e528a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e528a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e528a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e528a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e528a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e528a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e528ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e528ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e5289020"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e52891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fc5e52a80c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fc5e52a80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e52a8440"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e52a85d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e52a8760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e52a88f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e52a8a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e52a8c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e52a8da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e52a7020"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e52a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fc5e5293a20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fc5e5293a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e5293da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e5292020"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e52921b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e5292340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e52924d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e5292660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fc5e5294bb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fc5e5294bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e5293020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e52931b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e5293340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e52934d0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e5293660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fc5e5295730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fc5e5295730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e5295ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e5295c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e5295dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e5294020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e52941b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e5294340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e52944d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e5294660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e52947f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fc5e529ba20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fc5e529ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e529bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e529a020"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e529a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e529a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e529a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e529a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fc5e5288570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fc5e5288570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e52888f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e5288a80"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e5288c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e5288da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e5287020"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e52871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fc5e5292a50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fc5e5292a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e5292dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e5291020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e52911b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e5291340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e52914d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e5291660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e52917f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e5291980"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e5291b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fc5e529cbb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fc5e529cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e529b020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e529b1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e529b340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e529b4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e529b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fc5e52ac830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fc5e52ac830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e52acbb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e52acd40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e52a9020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e52a91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e52a9340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e52a94d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e52a9660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e52a97f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e52a9980"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e52a9b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e52a9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fc5e5289570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fc5e5289570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e5289af0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e5289c80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e5289e10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e5288020"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e52881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fc5e52a5410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fc5e52a5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e52a5790"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e52a5920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e52a5ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e52a5c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e52a5dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e52a4020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e52a41b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e52a4340"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e52a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fc5e52875a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fc5e52875a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e5287920"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e5287ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e5287c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e5287dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e5286020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e52861b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e5286340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e52864d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e5286660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fc5e529f410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fc5e529f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e529f790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e529f920"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e529fab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e529fc40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e529fdd0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e52a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fc5e5290da0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fc5e5290da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e528f180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e528f310"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e528f4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e528f630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e528f7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e528f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fc5e52a7570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fc5e52a7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e52a78f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e52a7a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e52a7c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e52a7da0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e52a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fc5e5290020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fc5e5290020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e52903a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e5290530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e52906c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e5290850"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e52909e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fc5e5285890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fc5e5285890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e5285c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e5285da0"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e5284020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e52841b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e5284340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e52844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fc5e528fd40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fc5e528fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e528e0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e528e270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e528e400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e528e590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e528e720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e528e8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e528ea40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e528ebd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e528ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fc5e529a9e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fc5e529a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e529ad60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e5299020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e52991b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5299340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e52994d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e5299660"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e52997f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e5299980"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e5299b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e5299ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e5299e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fc5e5296700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fc5e5296700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e5296a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e5296c10"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e5296da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e5295020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e52951b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e5295340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fc5e5286a20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fc5e5286a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e5286da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e5285020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e52851b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e5285340"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e52854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fc5e5283d40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fc5e5283d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e52820e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e5282270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e5282400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e5282590"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e5282720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fc5e5297700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fc5e5297700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e5297b80"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e5297d10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e5296020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e52961b0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e5296340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fc5e52848c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fc5e52848c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e5284c40"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e5284dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e5283020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e52831b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e5283340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e52834d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e5283660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e52837f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e5283980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fc5e5249940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fc5e5249940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e5249cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fc5e52492f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fc5e52492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e5249670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fc5e5248020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fc5e5248020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e52483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fc5e524abf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e524abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e5249020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc5e524b3e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e524b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e524b760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e524b8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e524ba80"/>
        <function-ref name="get" scoped="" ref="0x7fc5e524bc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e524bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e524a020"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e524a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e524a340"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e524a4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e524a660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e524a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fc5e5242750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fc5e5242750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e5242ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fc5e5242100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fc5e5242100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e5242480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fc5e5242da0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fc5e5242da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e5240180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fc5e5243a60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e5243a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e5243e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc5e5244260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e5244260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e52445e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e5244770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e5244900"/>
        <function-ref name="get" scoped="" ref="0x7fc5e5244a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e5244c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e5244db0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e5243020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e52431b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e5243340"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e52434d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e5243660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e51f77a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e51f77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51f7b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e51f7cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e51f7e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51f6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51f61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e51f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc5e523d6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc5e523d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e523da50"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e523dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e523dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e51f8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e51f81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51f8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e51f84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e51f8660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e51f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc5e51f4c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e51f4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc5e51f8ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc5e51f8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51f8e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e51f7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e51f71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e51f7340"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e51f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc5e51f6610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e51f6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e51f6990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51f6b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51f6cb0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51f6e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51f4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51f41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e51f4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51f44d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e51f4660"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e51f47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e51f4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e51efcb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e51efcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51ee0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e51ee230"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e51ee3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51ee550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51ee6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e51ee870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc5e51f1b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc5e51f1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e51f0020"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e51f01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51f0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e51f04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e51f0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51f07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e51f0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e51f0b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e51f0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc5e51ec2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e51ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51ec670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc5e51ef020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc5e51ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51ef3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e51ef530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e51ef6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e51ef850"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e51ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc5e51eeb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e51eeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e51ed020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51ed1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51ed340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51ed4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51ed660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51ed7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e51ed980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51edb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e51edca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e51ede30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e51ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e51e72f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e51e72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51e7670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e51e7800"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e51e7990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51e7b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51e7cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e51e7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc5e51e9220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc5e51e9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e51e95a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e51e9730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51e98c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e51e9a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e51e9be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51e9d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e51e8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e51e81b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e51e8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc5e51e47a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e51e47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51e4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc5e51e8610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc5e51e8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51e8990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e51e8b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e51e8cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e51e8e40"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e51e7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc5e51e6160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e51e6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e51e64e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51e6670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51e6800"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51e6990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51e6b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51e6cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e51e6e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51e4020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e51e41b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e51e4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e51e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e51df7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e51df7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51dfb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e51dfcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e51dfe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51de020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51de1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e51de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc5e51e16d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc5e51e16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e51e1a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e51e1be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51e1d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e51e0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e51e01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51e0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e51e04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e51e0660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e51e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc5e51ddc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e51ddc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc5e51e0ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc5e51e0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51e0e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e51df020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e51df1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e51df340"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e51df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc5e51de610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e51de610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e51de990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51deb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51decb0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51dee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51dd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51dd1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e51dd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51dd4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e51dd660"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e51dd7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e51dd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e51d8cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e51d8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51d70a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e51d7230"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e51d73c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51d7550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51d76e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e51d7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc5e51dab30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc5e51dab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e51d9020"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e51d91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51d9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e51d94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e51d9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51d97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e51d9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e51d9b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e51d9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc5e51d52f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e51d52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51d5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc5e51d8020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc5e51d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51d83a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e51d8530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e51d86c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e51d8850"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e51d89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc5e51d7b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e51d7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e51d6020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51d61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51d6340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51d64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51d6660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51d67f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e51d6980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51d6b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e51d6ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e51d6e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e51d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e51cf2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e51cf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51cf670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e51cf800"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e51cf990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51cfb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51cfcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e51cfe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc5e51d1220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc5e51d1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e51d15a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e51d1730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51d18c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e51d1a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e51d1be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51d1d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e51d0020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e51d01b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e51d0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc5e51cd7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e51cd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51cdb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc5e51d0610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc5e51d0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51d0990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e51d0b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e51d0cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e51d0e40"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e51cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc5e51ce160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e51ce160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e51ce4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51ce670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51ce800"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51ce990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51ceb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51cecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e51cee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51cd020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e51cd1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e51cd340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e51cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e51c87a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e51c87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51c8b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e51c8cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e51c8e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51c7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51c71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e51c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc5e51ca6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc5e51ca6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e51caa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e51cabe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51cad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e51c9020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e51c91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51c9340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e51c94d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e51c9660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e51c97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc5e51c6c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e51c6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc5e51c9ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc5e51c9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51c9e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e51c8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e51c81b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e51c8340"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e51c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc5e51c7610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e51c7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e51c7990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51c7b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51c7cb0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51c7e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51c6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51c61b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e51c6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51c64d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e51c6660"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e51c67f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e51c6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e51c0cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e51c0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51bf0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e51bf230"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e51bf3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51bf550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51bf6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e51bf870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc5e51c2b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc5e51c2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e51c1020"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e51c11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51c1340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e51c14d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e51c1660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51c17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e51c1980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e51c1b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e51c1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc5e51bd2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e51bd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51bd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc5e51c0020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc5e51c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51c03a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e51c0530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e51c06c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e51c0850"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e51c09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc5e51bfb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e51bfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e51be020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51be1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51be340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51be4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51be660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51be7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e51be980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51beb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e51beca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e51bee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e51bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e51b82f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e51b82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51b8670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e51b8800"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e51b8990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51b8b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51b8cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e51b8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc5e51ba220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc5e51ba220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e51ba5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e51ba730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51ba8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e51baa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e51babe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51bad70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e51b9020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e51b91b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e51b9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc5e51b67a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e51b67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51b6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc5e51b9610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc5e51b9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51b9990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e51b9b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e51b9cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e51b9e40"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e51b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc5e51b7160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e51b7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e51b74e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51b7670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51b7800"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51b7990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51b7b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51b7cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e51b7e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51b6020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e51b61b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e51b6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e51b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e51b07a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e51b07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51b0b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e51b0cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e51b0e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51af020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51af1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e51af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc5e51b26d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc5e51b26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e51b2a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e51b2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51b2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e51b1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e51b11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51b1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e51b14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e51b1660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e51b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc5e51aec50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc5e51aec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc5e51b1ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc5e51b1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e51b1e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e51b0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e51b01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e51b0340"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e51b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc5e51af610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e51af610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e51af990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51afb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e51afcb0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51afe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e51ae020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51ae1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e51ae340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e51ae4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e51ae660"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e51ae7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e51ae980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fc5e51a8bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fc5e51a8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fc5e51a93f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fc5e51a93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51a9770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fc5e51a9b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fc5e51a9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fc5e51a8430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fc5e51a8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e51a87b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fc5e3e1aa80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e3e1aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e3e1ae00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e3e19020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e3e191b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e3e19340"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3e194d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fc5e3e1c190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e3e1c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e3e1c510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e3e1c6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e3e1c830"/>
        <function-ref name="get" scoped="" ref="0x7fc5e3e1c9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e3e1cb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e3e1cce0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e3e1ce70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e3e1b030"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e3e1b1c0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e3e1b350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e3e1b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc5e3e20020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc5e3e20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3e1d870"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3e1f840"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e3e1d220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3e1fd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e3e1dd30"/>
        <function-ref name="start" scoped="" ref="0x7fc5e3e20e30"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3e1f380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e3e21660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e3e21660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e3e219e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fc5e3e1b770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e3e1b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e3e1baf0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e3e1bc80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e3e1be10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e3e1a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e3e1a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e3e1a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e3e1a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e3e1a660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e3e1a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc5e511f8c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e511f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e5123700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51220d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e5123bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e5122590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fc5e511d8e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fc5e511d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e511a780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e5118150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e511ac40"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e5118610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fc5e5108c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e5108c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e5106020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e51061b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e5106340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e51064d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e5106660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e51067f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e5106980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e5106b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e5106ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e5106e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e5105020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc5e5116b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e5116b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e51159b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e5108360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e5115e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e5108820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fc5e50e40f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fc5e50e40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e50e3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e50e39a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e50e34e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e50e3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc5e5102cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e5102cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e50e7b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e50e5550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e50e5090"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e50e5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc5e3e39890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc5e3e39890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3e350d0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3e360d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e3e36a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3e36590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e3e35590"/>
        <function-ref name="start" scoped="" ref="0x7fc5e3e386e0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3e38bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fc5e3e320a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fc5e3e320a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3e2fb30"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3e309f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e3e2f4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3e2f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e3e2e020"/>
        <function-ref name="start" scoped="" ref="0x7fc5e3e30020"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3e30530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc5e3e35c00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e3e35c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e3e34a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e3e334e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e3e33020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e3e339a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fc5e50709c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fc5e50709c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e5070d40"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e506e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fc5e5073850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc5e5073850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e5070090"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e5071090"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e5071a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e5071550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e5070550"/>
        <function-ref name="start" scoped="" ref="0x7fc5e50726a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e5072bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc5e50792f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e50792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e5075870"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e5077e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e5076c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e5076780"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e50731e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e5075cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e5076300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e5077020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e5075260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e50774f0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e50779c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fc5e4ff1020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fc5e4ff1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e4fed630"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4ff0a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e4fee920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e4fee4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e4fec020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e4fedab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e4fee020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e4ff1c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e4fed020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e4ff0110"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4ff05e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fc5e4fec450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fc5e4fec450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fc5e4fec7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc5e4ff88e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e4ff88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e4ff2020"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4ff54c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e4ff4300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e4ff5e00"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e4ff2960"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e4ff24c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e4ff5960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e4ff7560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e4ff4930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e4ff7a50"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4ff5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fc5e3c3b100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fc5e3c3b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e3c3b480"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e3c3b610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fc5e3c433d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fc5e3c433d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3c3f870"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3c41e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e3c40c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e3c40780"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e3c3d1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e3c3fcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3c40300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e3c41020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e3c3f260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e3c414f0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3c419c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fc5e3c3ca40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fc5e3c3ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fc5e3c3cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7fc5e3c3d5d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fc5e3c3d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fc5e3c3c660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fc5e3c3c7f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fc5e3c3dc70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fc5e3c3de00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fc5e3c3c020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fc5e3c3c1b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fc5e3c3c340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fc5e3c3c4d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fc5e3c3d950"/>
        <function-ref name="node_id" scoped="" ref="0x7fc5e3c3dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc5e3c4adb0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e3c4adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3c44470"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3c479b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e3c467c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e3c46320"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e3c44db0"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e3c44910"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3c47e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e3c49a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e3c46df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e3c47020"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3c47510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fc5e4fe8020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fc5e4fe8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e4fe8c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc5e4fde300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e4fde300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e4fdd150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e4fddad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e4fdd610"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e4fdc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc5e4fd0260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e4fd0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e4fcc6e0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4fcfca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e4fcea70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e4fce5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e4fcb020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e4fccb60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e4fce170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e4fd0e50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e4fcc0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e4fcf350"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4fcf820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc5e4fbdcc0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4fbdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc5e4fbc0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc5e4fbc230"/>
        <function-ref name="start" scoped="" ref="0x7fc5e4fbc3c0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4fbc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc5e4fb32c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e4fb32c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc5e4fb3640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc5e4fb37d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc5e4fb3960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc5e4fb3af0"/>
        <function-ref name="setCca" scoped="" ref="0x7fc5e4fb3c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc5e4fb3e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fc5e4fa31d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fc5e4fa31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fc5e4fa3650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc5e4fb88f0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc5e4fb88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4fb8c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e4fb8e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4fb6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4fb61b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e4fb6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc5e4fbcd20" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc5e4fbcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4fbb0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4fbb270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4fbb400"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4fbb590"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4fbb720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fc5e4fbac00" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fc5e4fbac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4fb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fc5e4fb6610" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4fb6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc5e4fb6990"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc5e4fb6b20"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc5e4fb6cb0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc5e4fb6e40"/>
        <function-ref name="getPower" scoped="" ref="0x7fc5e4fb5020"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc5e4fb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fc5e4f9e130" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e4f9e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fc5e4f9e4b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fc5e4f9e640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fc5e4f9e7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fc5e4f9e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e4fba020" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e4fba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4fba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fc5e4fb4080" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e4fb4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc5e4fb4400"/>
        <function-ref name="noAck" scoped="" ref="0x7fc5e4fb4590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc5e4fb4720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fc5e4f95430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fc5e4f95430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fc5e4f957b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fc5e4f95940"/>
        <function-ref name="getRetries" scoped="" ref="0x7fc5e4f95ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fc5e4f95c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fc5e4f95df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc5e4fb92d0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc5e4fb92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc5e4fb9650"/>
        <function-ref name="source" scoped="" ref="0x7fc5e4fb97e0"/>
        <function-ref name="address" scoped="" ref="0x7fc5e4fb9970"/>
        <function-ref name="destination" scoped="" ref="0x7fc5e4fb9b00"/>
        <function-ref name="setSource" scoped="" ref="0x7fc5e4fb9c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc5e4fb9e20"/>
        <function-ref name="type" scoped="" ref="0x7fc5e4fb8020"/>
        <function-ref name="setType" scoped="" ref="0x7fc5e4fb81b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc5e4fb8340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc5e4fb84d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc5e4fb8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fc5e4fab170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc5e4fab170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fc5e4fab4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc5e4f90020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4f90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc5e4f903a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc5e4f90530"/>
        <function-ref name="start" scoped="" ref="0x7fc5e4f906c0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4f90850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fc5e4f7d9d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc5e4f7d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fc5e4f7dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fc5e4f7cb70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fc5e4f7cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fc5e4f7b020"/>
        <function-ref name="setRetries" scoped="" ref="0x7fc5e4f7b1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fc5e4f7b340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fc5e4f7b4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fc5e4f7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fc5e4f7e020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4f7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc5e4f7e3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc5e4f7e530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc5e4f7e6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc5e4f7e850"/>
        <function-ref name="getPower" scoped="" ref="0x7fc5e4f7e9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc5e4f7eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fc5e4f88a70" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fc5e4f88a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4f88df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4f80020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4f801b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4f80340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4f804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fc5e4f7c080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e4f7c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fc5e4f7c400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fc5e4f7c590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fc5e4f7c720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fc5e4f7c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fc5e4f89690" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fc5e4f89690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4f89a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fc5e4f7d020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e4f7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc5e4f7d3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fc5e4f7d530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc5e4f7d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e4f8f530" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e4f8f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4f8f8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4f8fa40"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4f8fbd0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4f8fd60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4f8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fc5e4f7f940" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fc5e4f7f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4f7fcc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4f7fe50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4f89020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4f891b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4f89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fc5e4f89d50" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fc5e4f89d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4f88100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e4f88290"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4f88420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4f885b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e4f88740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fc5e4f80840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fc5e4f80840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4f80bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc5e4f78390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4f78390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc5e4f78710"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc5e4f788a0"/>
        <function-ref name="start" scoped="" ref="0x7fc5e4f78a30"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4f78bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc5e4f76330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e4f76330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc5e4f766b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc5e4f76840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc5e4f769d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc5e4f76b60"/>
        <function-ref name="setCca" scoped="" ref="0x7fc5e4f76cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc5e4f76e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc5e4f78e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e4f78e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4f77220"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4f773b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4f77540"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4f776d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4f77860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e4f77b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e4f77b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4f76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc5e4f75e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc5e4f75e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc5e4f70220"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc5e4f703b0"/>
        <function-ref name="start" scoped="" ref="0x7fc5e4f70540"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4f706d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc5e4f6f7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e4f6f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc5e4f6fb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc5e4f6fcf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc5e4f6fe80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc5e4f6e030"/>
        <function-ref name="setCca" scoped="" ref="0x7fc5e4f6e1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc5e4f6e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fc5e4f62060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fc5e4f62060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc5e4f623e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc5e4f62570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc5e4f62700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc5e4f62890"/>
        <function-ref name="setCca" scoped="" ref="0x7fc5e4f62a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc5e4f62bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc5e4f59330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4f59330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc5e4f596b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc5e4f59840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc5e4f599d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc5e4f59b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fc5e4f59cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc5e4f59e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fc5e4f5c2a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fc5e4f5c2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4f5c620"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4f5c7b0"/>
        <function-ref name="modify" scoped="" ref="0x7fc5e4f5c940"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4f5cad0"/>
        <function-ref name="resend" scoped="" ref="0x7fc5e4f5cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc5e4f70990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e4f70990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4f70d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4f6f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4f6f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4f6f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4f6f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fc5e4f58420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fc5e4f58420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fc5e4f587a0"/>
        <function-ref name="rand32" scoped="" ref="0x7fc5e4f58930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fc5e4f63760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fc5e4f63760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc5e4f63ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4f63c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc5e4f51920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e4f51920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4f51ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc5e4f51e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc5e4f56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fc5e4f66b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fc5e4f66b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fc5e4f6c020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fc5e4f6c1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fc5e4f6c340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fc5e4f6c4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fc5e4f6c660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fc5e4f6c7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fc5e4f6c980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fc5e4f6cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc5e4f58bf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e4f58bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e4f5a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e4f5a1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e4f5a340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e4f5a4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e4f5a660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4f5a7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e4f5a980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e4f59020"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4f5ab10"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e4f5aca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e4f5ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fc5e4f6e640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e4f6e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4f6e9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4f6eb50"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4f6ece0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4f6ee70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4f6d030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fc5e4f55110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fc5e4f55110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc5e4f55590"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc5e4f55720"/>
        <function-ref name="isState" scoped="" ref="0x7fc5e4f558b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc5e4f55a40"/>
        <function-ref name="requestState" scoped="" ref="0x7fc5e4f55bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7fc5e4f55d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fc5e4f47b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fc5e4f47b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e4f46020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e4f461b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fc5e4f49ba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fc5e4f49ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e4f47020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e4f471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fc5e4f4ac20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fc5e4f4ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e4f49020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e4f491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fc5e4ef0dc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fc5e4ef0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fc5e4efc180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fc5e4efc310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fc5e4efc4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fc5e4efc630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fc5e4efc7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fc5e4efc950"/>
        <function-ref name="setChannel" scoped="" ref="0x7fc5e4efcae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fc5e4efcc70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fc5e4efce00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fc5e4efb020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fc5e4efb1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fc5e4efb340"/>
        <function-ref name="sync" scoped="" ref="0x7fc5e4efb4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc5e4efb760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fc5e4efb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fc5e4eec0c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fc5e4eec0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4eeccb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e4eeb170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fc5e4efbbf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fc5e4efbbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fc5e4eee020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fc5e4eee1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fc5e4eee340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fc5e4eee4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fc5e4eee660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fc5e4eee7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fc5e4eee980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fc5e4eeeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e4f00950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e4f00950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4f00cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4f00e60"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4efd020"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4efd1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4efd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fc5e4ee6970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fc5e4ee6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fc5e4ee6cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fc5e4ee6e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fc5e4ee5030"/>
        <function-ref name="syncDone" scoped="" ref="0x7fc5e4ee51c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fc5e4ee5350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fc5e4ee54e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fc5e4ee5670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fc5e4ee5800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fc5e4ee5990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fc5e4ee5b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fc5e4ee5cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fc5e4ee5e40"/>
        <function-ref name="sync" scoped="" ref="0x7fc5e4ee4020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc5e4ee42b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fc5e4ee4440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fc5e4ec41e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e4ec41e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ec4560"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4ec46f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fc5e4edf020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc5e4edf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fc5e4edf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fc5e4edfa10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fc5e4edfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e4edb2a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4edd2a0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e4eddc20"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e4edd760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e4edb760"/>
        <function-ref name="start" scoped="" ref="0x7fc5e4ede890"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4ededa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fc5e4ec8020" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e4ec8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ec83a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4ec8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fc5e4edae70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fc5e4edae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4ed9220"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4ed93b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4ed9540"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4ed96d0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4ed9860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4ed99f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4ed9b80"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4ed9d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fc5e4ee2b40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fc5e4ee2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ee1750"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e4ee1bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fc5e4eb2ca0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fc5e4eb2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e4eb10a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e4eb1230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fc5e4ec4a80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc5e4ec4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ec4e00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4ec3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fc5e4ec33c0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e4ec33c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ec3740"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4ec38d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fc5e4ec5cd0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e4ec5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ecd0a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4ecd230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fc5e4ece390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc5e4ece390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fc5e4ece710"/>
        <function-ref name="changed" scoped="" ref="0x7fc5e4ece8a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fc5e4ecea30"/>
        <function-ref name="setAddress" scoped="" ref="0x7fc5e4ecebc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fc5e4edbc50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fc5e4edbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4eda020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4eda1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4eda340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4eda4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4eda660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4eda7f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4eda980"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4edab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fc5e4ec1450" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e4ec1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4ec19d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fc5e4ed80f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fc5e4ed80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4ed8470"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4ed8600"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4ed8790"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4ed8920"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4ed8ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4ed8c40"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4ed8dd0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4ed7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e4ee7510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e4ee7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e4ee7890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fc5e4ec88f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e4ec88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ec8c70"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4ec8e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fc5e4ec1d70" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e4ec1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4ec0180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fc5e4ec0520" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fc5e4ec0520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4ec08a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4ec0a30"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4ec0bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4ec0d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4ebe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fc5e4ebd180" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fc5e4ebd180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4ebd500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4ebd690"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4ebd820"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4ebd9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4ebdb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fc5e4ee4740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fc5e4ee4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fc5e4ee4ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fc5e4ee4c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7fc5e4ee4de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fc5e4ee2020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fc5e4ee21b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fc5e4ee2340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fc5e4ee24d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fc5e4ee2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fc5e4ecd5d0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e4ecd5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ecd950"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4ecdae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fc5e4ec5420" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e4ec5420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ec57a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4ec5930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fc5e4ebf570" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc5e4ebf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4ebf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc5e4ebde00" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e4ebde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e4ebb1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e4ebb350"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e4ebb4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e4ebb670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e4ebb800"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4ebb990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e4ebbb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e4eba1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4ebbcb0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e4ebbe40"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e4eba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fc5e4eb3db0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fc5e4eb3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e4eb2180"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e4eb2310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e4ee7b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e4ee7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4ee6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4ee61b0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4ee6340"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4ee64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4ee6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fc5e4ec9e20" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc5e4ec9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ed11c0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4ed1350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fc5e4ec94a0" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e4ec94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4ec9920"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4ec9ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fc5e4ed2c00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fc5e4ed2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e4ed6020"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4ed61b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc5e4ed6340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc5e4ed64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fc5e4ebe3d0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fc5e4ebe3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4ebe750"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4ebe8e0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4ebea70"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4ebec00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4ebed90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fc5e4ebfc80" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e4ebfc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4ec10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e4e3b7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e4e3b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e4e3bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fc5e4e38220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc5e4e38220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e4e36b30"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4e37a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e4e364e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e4e36020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e4e34020"/>
        <function-ref name="start" scoped="" ref="0x7fc5e4e37090"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4e375a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e4e32260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e4e32260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e4e325e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fc5e4e32af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc5e4e32af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e4df8390"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4df9360"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e4df9ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e4df9820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e4df8850"/>
        <function-ref name="start" scoped="" ref="0x7fc5e4dfa970"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4dfae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc5e3be5020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc5e3be5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3be3870"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3be4840"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e3be3220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3be4d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e3be3d30"/>
        <function-ref name="start" scoped="" ref="0x7fc5e3be5e30"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3be4380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e3be6720" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e3be6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e3be6aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc5e3bdd020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc5e3bdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3bdb870"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3bdc840"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e3bdb220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3bdcd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e3bdbd30"/>
        <function-ref name="start" scoped="" ref="0x7fc5e3bdde30"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3bdc380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e3bdf760" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e3bdf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e3bdfae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fc5e3bc58f0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e3bc58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e3bc5c70"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e3bc5e00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e3bc4020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e3bc41b0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3bc4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fc5e3bc9e70" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e3bc9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e3bc7220"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e3bc73b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e3bc7540"/>
        <function-ref name="get" scoped="" ref="0x7fc5e3bc76d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e3bc7860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e3bc79f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e3bc7b80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e3bc7d10"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e3bc6020"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e3bc61b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e3bc6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fc5e3bc65d0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e3bc65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e3bc6950"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e3bc6ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e3bc6c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e3bc6e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e3bc5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e3bc51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e3bc5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e3bc54d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e3bc5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fc5e3bbb760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fc5e3bbb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e3bbbae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc5e3bbbc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc5e3bbbe00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc5e3bba020"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3bba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fc5e3bbedd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e3bbedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e3bbd180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e3bbd310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e3bbd4a0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e3bbd630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e3bbd7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e3bbd950"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e3bbdae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e3bbdc70"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e3bbde00"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e3bbc020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e3bbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc5e3bc2bd0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc5e3bc2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3bbe4e0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3bc04e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e3bc0e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3bc09a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e3bbe9a0"/>
        <function-ref name="start" scoped="" ref="0x7fc5e3bc1a80"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3bc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e3bc2340" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e3bc2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e3bc26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fc5e3bbc440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e3bbc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e3bbc7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e3bbc950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e3bbcae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e3bbcc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e3bbce00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e3bbb020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e3bbb1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e3bbb340"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e3bbb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc5e4e1c080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e4e1c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e4e1b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e4e1b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e4e1b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e4e1be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fc5e4e130f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fc5e4e130f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e4e12020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e4e129a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e4e124e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e4e12e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc5e4e17cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e4e17cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e4e16b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e4e15550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e4e15090"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e4e15a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc5e3bd81d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc5e3bd81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3bd5b30"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3bd79f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e3bd54e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3bd5020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e3bd4020"/>
        <function-ref name="start" scoped="" ref="0x7fc5e3bd7020"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3bd7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fc5e3bd2b90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fc5e3bd2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e3bce4e0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e3bcf4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e3bcfe60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e3bcf9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e3bce9a0"/>
        <function-ref name="start" scoped="" ref="0x7fc5e3bd19d0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e3bcf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc5e3bd4690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e3bd4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e3bd35b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e3bd2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e3bd3a70"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e3bd24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fc5e4df1090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fc5e4df1090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4df1410"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4df15a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4df1730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4df18c0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4df1a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4df1be0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4df1d70"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4df0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fc5e4df0390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fc5e4df0390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4df0710"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4df08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4df0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4df0bc0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4df0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4def020"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4def1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4def340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fc5e4def6a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fc5e4def6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4defa20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4defbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4defd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dee020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dee340"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dee4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4dee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fc5e4df3e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fc5e4df3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4df2210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4df23a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4df2530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4df26c0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4df2850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4df29e0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4df2b70"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4df2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fc5e4dedce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fc5e4dedce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4dec0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dec230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dec3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dec550"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dec6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dec870"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4deca00"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4decb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fc5e4e39b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fc5e4e39b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4df3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4df31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4df3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4df34d0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4df3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4df37f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4df3980"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4df3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fc5e4dee9b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fc5e4dee9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4deed30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4ded020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4ded1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4ded340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4ded4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4ded660"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4ded7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4ded980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e4de92f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4de92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4de9670"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4de9800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4de9990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4de7660"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4de9cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4de9e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4de8020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4de81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4de8340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4de84d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4de8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4de87f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4de8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4de8c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4de8da0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4de7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4de71b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4de7340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4de9b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4de74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e4dea020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4dea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4dea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dea530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dea6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dea850"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dea9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4deab70"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dead00"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4de9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e4de47a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4de47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4de4b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4de4cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4de4e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4de2a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4de31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4de3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4de34d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4de3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4de37f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4de3980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4de3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4de3ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4de3e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4de2120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4de22b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4de2440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4de25d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4de2760"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4de3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4de28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e4de5630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4de5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4de59b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4de5b40"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4de5cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4de5e60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4de4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4de41b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4de4340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4de44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e4ddec60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4ddec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4ddd020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4ddd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4ddd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4ddb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4ddd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4ddd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4ddd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4dddb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dddca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4ddde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4ddc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4ddc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4ddc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4ddc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4ddc760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4ddc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4ddca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4ddcc10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4ddd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4ddcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e4de0b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4de0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4de0e80"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dde030"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dde1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dde350"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dde4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dde670"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dde800"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4dde990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e4dd82f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4dd82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4dd8670"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dd8800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4dd8990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4dd6660"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dd8cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dd8e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4dd7020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4dd71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dd7340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dd74d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4dd7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4dd77f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4dd7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4dd7c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4dd7da0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dd6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4dd61b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4dd6340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4dd8b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4dd64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e4dd9020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4dd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4dd93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dd9530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dd96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dd9850"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dd99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dd9b70"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dd9d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4dd8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e4dd37a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4dd37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4dd3b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dd3cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4dd3e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4dd1a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dd21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dd2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4dd24d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4dd2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dd27f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dd2980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4dd2b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4dd2ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4dd2e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4dd1120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4dd12b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dd1440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4dd15d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4dd1760"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4dd2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4dd18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e4dd4630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4dd4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4dd49b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dd4b40"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dd4cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dd4e60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dd3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dd31b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dd3340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4dd34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e4dcec60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4dcec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4dcd020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dcd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4dcd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4dcb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dcd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dcd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4dcd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4dcdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dcdca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dcde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4dcc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4dcc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4dcc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4dcc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4dcc760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dcc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4dcca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4dccc10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4dcd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4dccda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e4dcfaf0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4dcfaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4dcfe70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dce030"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dce1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dce350"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dce4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dce670"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dce800"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4dce990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e4dc82f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e4dc82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4dc8670"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dc8800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4dc8990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4dc5660"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dc8cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dc8e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4dc6020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4dc61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dc6340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dc64d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4dc6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4dc67f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4dc6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4dc6c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4dc6da0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dc5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4dc51b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4dc5340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4dc8b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4dc54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e4dc9020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4dc9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4dc93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4dc9530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4dc96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4dc9850"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4dc99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4dc9b70"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4dc9d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4dc8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fc5e4dab700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fc5e4dab700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fc5e4daba80"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4dabc10"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e4dabda0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fc5e4dae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fc5e4dae400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fc5e4dae400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e4dae780"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4dae910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc5e4daeaa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc5e4daec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fc5e4dad060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fc5e4dad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e4dad3e0"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4dad570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc5e4dad700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc5e4dad890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fc5e4d8fa80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fc5e4d8fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc5e4d8fe00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc5e4d8e020"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e4d8e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e4d8e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e4d8e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc5e4d8e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc5e4da8c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc5e4da8c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fc5e4d90020"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d901b0"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e4d90340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fc5e4d904d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fc5e4d90760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc5e4d90760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc5e4d90ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc5e4d90c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e4d90e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc5e4d8f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc5e4d8f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e4d8f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc5e4d8f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc5e4d8f660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc5e4d8f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fc5e4d8e930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e4d8e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4d8ecb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4d8ee40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4d8d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4d8cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4d8d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4d8d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4d8d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4d8d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4d8d980"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4d8db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4d8dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4d8de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4d8c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4d8c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4d8c440"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4d8c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4d8c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4d8c8f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4d8d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4d8ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fc5e4d7c3f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fc5e4d7c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d7c770"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d7c900"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d7ca90"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d7cc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d7cdb0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d7b020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d7b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d7b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fc5e4d6f3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fc5e4d6f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d6f770"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d6f900"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d6fa90"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d6fc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d6fdb0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d6e020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d6e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d6e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fc5e4d79d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fc5e4d79d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d78100"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d78290"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d78420"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d785b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d78740"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d788d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d78a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d78bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fc5e4d763f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fc5e4d763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d76770"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d76900"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d76a90"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d76c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d76db0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d75020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d751b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d75340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fc5e4d84bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fc5e4d84bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d7e020"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d7e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d7e340"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d7e4d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d7e660"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d7e7f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d7e980"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d7eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fc5e4d72d50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fc5e4d72d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d71210"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d713a0"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d71530"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d716c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d71850"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d719e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d71b70"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d71d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fc5e4d7b710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fc5e4d7b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d7ba90"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d7bc20"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d7bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d7a020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d7a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d7a340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d7a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d7a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fc5e4d6e710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fc5e4d6e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d6ea90"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d6ec20"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d6edb0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d6d020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d6d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d6d340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d6d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d6d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fc5e4d7f620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fc5e4d7f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d7f9a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d7fb30"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d7fcc0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d7fe50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d85020"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d851b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d85340"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fc5e4d75710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fc5e4d75710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d75a90"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d75c20"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d75db0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d73020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d731b0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d73340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d734d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d73660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fc5e4d7d020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fc5e4d7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d7d3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d7d530"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d7d6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d7d850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d7d9e0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d7db70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d7dd00"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fc5e4d70100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fc5e4d70100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d70480"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d70610"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d707a0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d70930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d70ac0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d70c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d70de0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fc5e4d7aa30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fc5e4d7aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d7adb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d79020"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d791b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d79340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d794d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d79660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d797f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d79980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fc5e4d77020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fc5e4d77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d773a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d77530"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d776c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d77850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d779e0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d77b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d77d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fc5e4d858a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fc5e4d858a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d85c20"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d85db0"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d84020"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d841b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d84340"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d844d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d84660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fc5e4d73a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fc5e4d73a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d73db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d72020"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d721b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d72340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d724d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d72660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d727f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d72980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fc5e4d653f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fc5e4d653f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d65770"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d65900"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d65a90"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d65c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d65db0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d64020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d641b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d64340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fc5e4d593f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fc5e4d593f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d59770"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d59900"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d59a90"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d59c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d59db0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d58020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d581b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fc5e4d62d50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fc5e4d62d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d61100"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d61290"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d61420"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d615b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d61740"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d618d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d61a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d61bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fc5e4d5f3f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fc5e4d5f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d5f770"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d5f900"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d5fa90"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d5fc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d5fdb0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d5e020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d5e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d5e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fc5e4d68d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fc5e4d68d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d67100"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d67290"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d67420"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d675b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d67740"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d678d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d67a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d67bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fc5e4d5cd50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fc5e4d5cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d5b210"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d5b3a0"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d5b530"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d5b6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d5b850"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d5b9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d5bb70"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d5bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fc5e4d64710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fc5e4d64710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d64a90"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d64c20"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d64db0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d63020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d631b0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d63340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d634d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d63660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fc5e4d58710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fc5e4d58710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d58a90"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d58c20"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d58db0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d57020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d571b0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d57340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d574d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fc5e4d6c7a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fc5e4d6c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d6cb20"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d6ccb0"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d6ce40"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d69020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d691b0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d69340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d694d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d69660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fc5e4d5e710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fc5e4d5e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d5ea90"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d5ec20"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d5edb0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d5d020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d5d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d5d340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d5d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d5d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fc5e4d66020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fc5e4d66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d663a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d66530"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d666c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d66850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d669e0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d66b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d66d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fc5e4d5a100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fc5e4d5a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d5a480"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d5a610"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d5a7a0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d5a930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d5aac0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d5ac50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d5ade0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fc5e4d63a30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fc5e4d63a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d63db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d62020"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d621b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d62340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d624d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d62660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d627f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d62980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fc5e4d60020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fc5e4d60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d603a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d60530"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d606c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d60850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d609e0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d60b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d60d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fc5e4d69a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fc5e4d69a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d69db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d68020"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d681b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d68340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d684d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d68660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d687f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d68980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fc5e4d5da30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fc5e4d5da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4d5ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4d5c020"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4d5c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4d5c340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4d5c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4d5c660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4d5c7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4d5c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fc5e4c4c2f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fc5e4c4c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4c4c670"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4c4c800"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4c4c990"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4c4cb20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4c4ccb0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4c4ce40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4c40020"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4c401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fc5e4c4d680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fc5e4c4d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e4c4da00"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4c4db90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc5e4c4dd20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc5e4c4c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fc5e4c3e7a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fc5e4c3e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4c3eb20"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e4c3ecb0"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4c3ee40"/>
        <function-ref name="edge" scoped="" ref="0x7fc5e4c3c020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fc5e4c3c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fc5e4c3c340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fc5e4c3c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc5e4c3c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fc5e4c3fb70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fc5e4c3fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e4c3e020"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e4c3e1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc5e4c3e340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc5e4c3e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fc5e47dde50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e47dde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47dc410"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47dc5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fc5e47e6160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fc5e47e6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fc5e47e0e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e47e0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47df210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fc5e47da880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e47da880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47dac00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47dad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fc5e47d20a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fc5e47d20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d2420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fc5e47d90a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fc5e47d90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d9420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fc5e47c7500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e47c7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47c7880"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47c7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fc5e47c9500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc5e47c9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47c9880"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47c9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fc5e47e5490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e47e5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e5810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fc5e47cf880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fc5e47cf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47cfc00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47cfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fc5e47ca500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e47ca500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47ca880"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47caa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fc5e47dfe50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc5e47dfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47de210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fc5e47dee50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e47dee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47dd210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fc5e47d5880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fc5e47d5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d5c00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fc5e47d60a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fc5e47d60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d6420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fc5e47d9880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e47d9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d9c00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc5e47e9a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e47e9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc5e47e9e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc5e47e8020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc5e47e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fc5e47e4e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e47e4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fc5e47e3490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc5e47e3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e3910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fc5e47cec80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc5e47cec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47cc0a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47cc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fc5e47e3be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fc5e47e3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fc5e47cace0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e47cace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47c90a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47c9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fc5e47e4160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e47e4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fc5e47cf0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fc5e47cf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47cf420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47cf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fc5e47de670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fc5e47de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47de9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47deb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fc5e47df670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e47df670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47df9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47dfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fc5e47e8ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e47e8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e8e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fc5e47d00a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fc5e47d00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d0420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fc5e47d2880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fc5e47d2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d2c00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fc5e47d0880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fc5e47d0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d0c00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fc5e47c8ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e47c8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47c70a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47c7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fc5e47c9ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc5e47c9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47c80a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47c8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fc5e47d6880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fc5e47d6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d6c00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fc5e47d10a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fc5e47d10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d1420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fc5e47cbce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fc5e47cbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47ca0a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47ca230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fc5e47d8880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fc5e47d8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d8c00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fc5e47c7ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e47c7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e47c50a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e47c5230"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47c53c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e47c5550"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e47c56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fc5e47e8480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc5e47e8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fc5e47e0670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fc5e47e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47e09f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47e0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fc5e47dd670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fc5e47dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47dd9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47ddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fc5e47d30a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fc5e47d30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d3420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fc5e47d80a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e47d80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d8420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fc5e47d3880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fc5e47d3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d3c00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fc5e47dc870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e47dc870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47dcbf0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47dcd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fc5e47e67b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc5e47e67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fc5e47da0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e47da0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47da420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47da5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e47eae20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e47eae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e47e91c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e47e9350"/>
        <function-ref name="request" scoped="" ref="0x7fc5e47e94e0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e47e9670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e47e9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fc5e47e22f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e47e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fc5e47e0020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fc5e47e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fc5e47cb500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc5e47cb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47cb880"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47cba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fc5e47ccce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e47ccce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47cb0a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47cb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fc5e47e47b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e47e47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e4b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fc5e47cc500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc5e47cc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47cc880"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47cca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fc5e47c8500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fc5e47c8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47c8880"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47c8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fc5e47d50a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fc5e47d50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d5420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fc5e47d1880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fc5e47d1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d1c00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fc5e47e6e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc5e47e6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fc5e47e5ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e47e5ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fc5e47d70a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fc5e47d70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d7420"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fc5e47e2940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc5e47e2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47e2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fc5e47d7880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fc5e47d7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47d7c00"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47d7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fc5e47ce0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fc5e47ce0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47ce820"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47ce9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fc5e47c59b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e47c59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e47c5d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e47c4020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47c41b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e47c4340"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e47c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fc5e4bf92c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e4bf9640"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e4bf97d0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4bf9960"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e4bf9af0"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e4bf9c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc5e4bfa350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4bfa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc5e4bfa6d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc5e4bfa860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc5e4bfa9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fc5e4bf8540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fc5e4bf8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4bf88c0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4bf8a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fc5e4bf6370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fc5e4bf6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4bf66f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4bf6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e4bfb4d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e4bfb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4bfb850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4bfb9e0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4bfbb70"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4bfbd00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4bfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fc5e4bf51d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bf51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4bf5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fc5e4bdf2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e4bdf2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4bdf660"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4bdf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fc5e4bf0890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fc5e4bf0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e4bf0c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e4bf0da0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4bef020"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e4bef1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e4bef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc5e4bf2660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4bf2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc5e4bf29e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc5e4bf2b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc5e4bf2d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fc5e4be8c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fc5e4be8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc5e4bea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fc5e4bdfb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fc5e4bdfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc5e4be9020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc5e4be91b0"/>
        <function-ref name="isState" scoped="" ref="0x7fc5e4be9340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc5e4be94d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fc5e4be9660"/>
        <function-ref name="forceState" scoped="" ref="0x7fc5e4be97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fc5e4beb060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fc5e4beb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4beb3e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4beb570"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4beb700"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4beb890"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4beba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fc5e4befba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fc5e4befba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4bed020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4bed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fc5e4beda30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fc5e4beda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4beddb0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4bec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc5e4be9a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e4be9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e4be9df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e4be7020"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e4be71b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e4be7340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e4be74d0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4be7660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e4be77f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e4be7e30"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4be7980"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e4be7b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e4be7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e4bf1510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e4bf1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4bf1890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4bf1a20"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4bf1bb0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4bf1d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4bf0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fc5e4bdcbd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fc5e4bdcbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e4bdb020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e4bdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fc5e4bec8b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fc5e4bec8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4becc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc5e4b81770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc5e4b81770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc5e4b81af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc5e4b81c80"/>
        <function-ref name="isState" scoped="" ref="0x7fc5e4b81e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc5e4b7d020"/>
        <function-ref name="requestState" scoped="" ref="0x7fc5e4b7d1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fc5e4b7d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc5e4b7c1d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc5e4b7c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc5e4b7c550"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc5e4b7c6e0"/>
        <function-ref name="isState" scoped="" ref="0x7fc5e4b7c870"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc5e4b7ca00"/>
        <function-ref name="requestState" scoped="" ref="0x7fc5e4b7cb90"/>
        <function-ref name="forceState" scoped="" ref="0x7fc5e4b7cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e4b77020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e4b77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e4b773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc5e4b77b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc5e4b77b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc5e4b76020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc5e4b761b0"/>
        <function-ref name="isState" scoped="" ref="0x7fc5e4b76340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc5e4b764d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fc5e4b76660"/>
        <function-ref name="forceState" scoped="" ref="0x7fc5e4b767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fc5e4810020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e4810020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e48103a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4810530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fc5e4b5e8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fc5e4b5e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc5e4b5ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e4b5fc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e4b5fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4b5e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4b5e1b0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4b5e340"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4b5e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4b5e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc5e3ae55d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e3ae55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc5e3ae5950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc5e3ae5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fc5e3ae3020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e3ae3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e3ae33a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e3ae3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fc5e3ae37c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc5e3ae37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fc5e3ae3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fc5e3ae5d70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fc5e3ae5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc5e3ae4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e3ae6940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e3ae6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e3ae6cc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e3ae6e50"/>
        <function-ref name="request" scoped="" ref="0x7fc5e3ae5020"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e3ae51b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e3ae5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fc5e3ae4410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fc5e3ae4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fc5e3ae4790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fc5e3ae4920"/>
        <function-ref name="splitRead" scoped="" ref="0x7fc5e3ae4ab0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e3ae4c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fc5e4af48e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e4af48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc5e4af4c60"/>
        <function-ref name="configure" scoped="" ref="0x7fc5e4af4df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fc5e4af7850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e4af7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4af7bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4af7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fc5e4af2a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc5e4af2a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fc5e4af2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fc5e4af8110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fc5e4af8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc5e4af8490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fc5e4af3690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fc5e4af3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4af3a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4af3ba0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4af3d30"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4af2020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4af21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e4afdd80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e4afdd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4af9180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4af9310"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4af94a0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4af9630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4af97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fc5e4af8790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fc5e4af8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fc5e4af8b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fc5e4af8ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fc5e4af8e30"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4af7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fc5e4aedb40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc5e4aedb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc5e4af0020"/>
        <function-ref name="txDone" scoped="" ref="0x7fc5e4af01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fc5e4a7dc40" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e4a7dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc5e4a7c020"/>
        <function-ref name="configure" scoped="" ref="0x7fc5e4a7c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fc5e4a7a700" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fc5e4a7a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4a7aaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4a7ac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fc5e4a79e00" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc5e4a79e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fc5e4a781c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fc5e4a7c440" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fc5e4a7c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc5e4a7c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fc5e4a78490" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fc5e4a78490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc5e4a78810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc5e4a789a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc5e4a78b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc5e4a78cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc5e4a78e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc5e4a77020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc5e4a771b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc5e4a77340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc5e4a774d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc5e4a77660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc5e4a777f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc5e4a77980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc5e4a77b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc5e4a77da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc5e4a76020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc5e4a761b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc5e4a76340"/>
        <function-ref name="isUart" scoped="" ref="0x7fc5e4a764d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc5e4a76660"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc5e4a767f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc5e4a76980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc5e4a76b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc5e4a76ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc5e4a76e30"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e4a75020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc5e4a753b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc5e4a75540"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc5e4a756d0"/>
        <function-ref name="tx" scoped="" ref="0x7fc5e4a75860"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc5e4a759f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc5e4a75b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc5e4a75d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc5e4a74020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc5e4a741b0"/>
        <function-ref name="rx" scoped="" ref="0x7fc5e4a74340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc5e4a744d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc5e4a74660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc5e4a747f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc5e4a74980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc5e4a74b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc5e4a735a0" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e4a735a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e4a73920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e4a73ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e4a73c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e4a73dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e4a72020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4a721b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e4a72340"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e4a72980"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4a72660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e4a724d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e4a727f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fc5e4a79060" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fc5e4a79060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4a79400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4a79590"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4a79720"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4a798b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4a79a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e4a7ee80" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e4a7ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e4a7d240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4a7d3d0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e4a7d560"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4a7d6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e4a7d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fc5e4a7ca50" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fc5e4a7ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fc5e4a7cdd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fc5e4a7a020"/>
        <function-ref name="splitRead" scoped="" ref="0x7fc5e4a7a1b0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4a7a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fc5e4a74de0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc5e4a74de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc5e4a73180"/>
        <function-ref name="txDone" scoped="" ref="0x7fc5e4a73310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fc5e4a72c50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fc5e4a72c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e4a71020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e4a711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fc5e4a628a0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fc5e4a628a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e4a62c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fc5e4a653b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc5e4a653b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc5e4a65730"/>
        <function-ref name="txDone" scoped="" ref="0x7fc5e4a658c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fc5e4a6c8a0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc5e4a6c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc5e4a6cc20"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc5e4a6cdb0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc5e4a69020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc5e4a691b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc5e4a69340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc5e4a694d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc5e4a69660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc5e4a697f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc5e4a69980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc5e4a69b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc5e4a69ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc5e4a69e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc5e4a68020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc5e4a682b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc5e4a68440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc5e4a685d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc5e4a68760"/>
        <function-ref name="isUart" scoped="" ref="0x7fc5e4a688f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc5e4a68a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc5e4a68c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc5e4a68da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc5e4a67020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc5e4a671b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc5e4a67340"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e4a674d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc5e4a67860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc5e4a679f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc5e4a67b80"/>
        <function-ref name="tx" scoped="" ref="0x7fc5e4a67d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc5e4a66020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc5e4a661b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc5e4a66340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc5e4a664d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc5e4a66660"/>
        <function-ref name="rx" scoped="" ref="0x7fc5e4a667f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc5e4a66980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc5e4a66b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc5e4a66ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc5e4a66e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc5e4a65020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fc5e4a27570" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fc5e4a27570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4a278f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4a27a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4a27c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4a25980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4a26020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4a261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4a26340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4a264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4a26660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4a267f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4a26980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4a26b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4a26ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4a25020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4a251b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4a25340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4a254d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4a27da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4a25660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4a257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fc5e4a5b910" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fc5e4a5b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc5e4a5bc90"/>
        <function-ref name="txDone" scoped="" ref="0x7fc5e4a5be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fc5e4a25d40" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fc5e4a25d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4a240e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4a24270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4a24400"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4a221b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4a24720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4a248b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4a24a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4a24bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4a24d60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4a23020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4a231b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4a23340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4a234d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4a23760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4a238f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4a23a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4a23c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4a24590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4a23da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4a22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fc5e4a22570" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fc5e4a22570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4a228f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4a22a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4a22c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4a20980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4a21020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4a211b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4a21340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4a214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4a21660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4a217f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4a21980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4a21b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4a21ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4a20020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4a201b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4a20340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4a204d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4a22da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4a20660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4a207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fc5e4a63d00" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fc5e4a63d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc5e4a5f0a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc5e4a5f230"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc5e4a5f3c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc5e4a5f550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc5e4a5f6e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc5e4a5f870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc5e4a5fa00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc5e4a5fb90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc5e4a5fd20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc5e4a5e020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc5e4a5e1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc5e4a5e340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc5e4a5e4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc5e4a5e760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc5e4a5e8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc5e4a5ea80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc5e4a5ec10"/>
        <function-ref name="isUart" scoped="" ref="0x7fc5e4a5eda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc5e4a5d020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc5e4a5d1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc5e4a5d340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc5e4a5d4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc5e4a5d660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc5e4a5d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e4a5d980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc5e4a5dd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc5e4a5c020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc5e4a5c1b0"/>
        <function-ref name="tx" scoped="" ref="0x7fc5e4a5c340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc5e4a5c4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc5e4a5c660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc5e4a5c7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc5e4a5c980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc5e4a5cb10"/>
        <function-ref name="rx" scoped="" ref="0x7fc5e4a5cca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc5e4a5ce30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc5e4a5b020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc5e4a5b1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc5e4a5b340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc5e4a5b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fc5e4a315b0" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fc5e4a315b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fc5e4a31930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fc5e4a31ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fc5e4a31c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fc5e4a31de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fc5e4a59020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fc5e4a591b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fc5e4a59340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fc5e4a594d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e4a59660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fc5e4a597f0"/>
        <function-ref name="getData" scoped="" ref="0x7fc5e4a59980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fc5e4a59b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fc5e4a59ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fc5e4a58020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fc5e4a581b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fc5e4a58340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fc5e4a584d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fc5e4a58660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fc5e4a587f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fc5e4a58980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fc5e4a58b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fc5e4a58ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fc5e4a58e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fc5e4a30020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fc5e4a301b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fc5e4a30540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fc5e4a306d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fc5e4a30860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fc5e4a309f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fc5e4a30b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fc5e4a30d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fc5e4a2f020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fc5e4a2f1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fc5e4a2f340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fc5e4a2f4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fc5e4a2f660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fc5e4a2f7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fc5e4a2f980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fc5e4a2fb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fc5e4a2fca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fc5e4a2fe30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fc5e4a2e020"/>
        <function-ref name="setData" scoped="" ref="0x7fc5e4a2e1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fc5e4a2e340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fc5e4a2e4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fc5e4a2e660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fc5e4a2e7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fc5e4a2e980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fc5e4a2eb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fc5e4a2d420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fc5e4a2d5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fc5e4a2d740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fc5e4a2d8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fc5e4a2da60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fc5e4a2dbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fc5e4a2dd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fc5e4a2c020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fc5e4a2c1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fc5e4a2c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fc5e4a2ae40" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fc5e4a2ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4a291e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4a29370"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4a29500"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4a271b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4a29820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4a299b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4a29b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4a29cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4a29e60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4a28020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4a281b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4a28340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4a284d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4a28760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4a288f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4a28a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4a28c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4a29690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4a28da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4a27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fc5e4a5a290" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc5e4a5a290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e4a5a610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fc5e4a2c700" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fc5e4a2c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4a2ca80"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4a2cc10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e4a2cda0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4a2aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e4a2b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4a2b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e4a2b4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e4a2b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4a2b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4a2b980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e4a2bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e4a2bca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e4a2be30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e4a2a120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e4a2a2b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4a2a440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e4a2a5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e4a2b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e4a2a760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e4a2a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc5e3adb020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e3adb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc5e3adb3a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc5e3adb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fc5e3ad2440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fc5e3ad2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e3ad27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc5e3acb760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e3acb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc5e3acbae0"/>
        <function-ref name="configure" scoped="" ref="0x7fc5e3acbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fc5e3ad2a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fc5e3ad2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fc5e3ad2dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fc5e3ad1020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fc5e3ad11b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fc5e3ad1340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fc5e3ad14d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fc5e3ad1660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fc5e3ad17f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fc5e3ad1980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e3ad1b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fc5e3ad1ca0"/>
        <function-ref name="getData" scoped="" ref="0x7fc5e3ad1e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fc5e3ad0020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fc5e3ad01b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fc5e3ad0440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fc5e3ad05d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fc5e3ad0760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fc5e3ad08f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fc5e3ad0a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fc5e3ad0c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fc5e3ad0da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fc5e3acf020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fc5e3acf1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fc5e3acf340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fc5e3acf4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fc5e3acf660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fc5e3acf9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fc5e3acfb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fc5e3acfd10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fc5e3ace020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fc5e3ace1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fc5e3ace340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fc5e3ace4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fc5e3ace660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fc5e3ace7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fc5e3ace980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fc5e3aceb10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fc5e3aceca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fc5e3acee30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fc5e3acd020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fc5e3acd1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fc5e3acd340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fc5e3acd4d0"/>
        <function-ref name="setData" scoped="" ref="0x7fc5e3acd660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fc5e3acd7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fc5e3acd980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fc5e3acdb10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fc5e3acdca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fc5e3acde30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fc5e3acc020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fc5e3acc5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fc5e3acc740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fc5e3acc8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fc5e3acca60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fc5e3accbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fc5e3accd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fc5e3acb020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fc5e3acb1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fc5e3acb340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fc5e3acb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fc5e3ad3c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc5e3ad3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc5e3ad2020"/>
        <function-ref name="txDone" scoped="" ref="0x7fc5e3ad21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e3adc340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e3adc340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e3adc6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e3adc850"/>
        <function-ref name="request" scoped="" ref="0x7fc5e3adc9e0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e3adcb70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e3adcd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fc5e3ada020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc5e3ada020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc5e3ada3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc5e3ada530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc5e3ada6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc5e3ada850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc5e3ada9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc5e3adab70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc5e3adad00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc5e3ad8020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc5e3ad81b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc5e3ad8340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc5e3ad84d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc5e3ad8660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc5e3ad87f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc5e3ad8a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc5e3ad8c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc5e3ad8da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc5e3ad7020"/>
        <function-ref name="isUart" scoped="" ref="0x7fc5e3ad71b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc5e3ad7340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc5e3ad74d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc5e3ad7660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc5e3ad77f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc5e3ad7980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc5e3ad7b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e3ad7ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc5e3ad4220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc5e3ad43b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc5e3ad4540"/>
        <function-ref name="tx" scoped="" ref="0x7fc5e3ad46d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc5e3ad4860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc5e3ad49f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc5e3ad4b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc5e3ad4d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc5e3ad3020"/>
        <function-ref name="rx" scoped="" ref="0x7fc5e3ad31b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc5e3ad3340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc5e3ad34d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc5e3ad3660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc5e3ad37f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc5e3ad3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc5e3adb7c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e3adb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc5e3adbb40"/>
        <function-ref name="userId" scoped="" ref="0x7fc5e3adbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc5e497a8a0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e497a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc5e497ac20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc5e497adb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc5e4977020" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e4977020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc5e49773a0"/>
        <function-ref name="configure" scoped="" ref="0x7fc5e4977530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fc5e497fa80" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fc5e497fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc5e497fe00"/>
        <function-ref name="txDone" scoped="" ref="0x7fc5e497c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e497b5c0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e497b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e497b940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e497bad0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e497bc60"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e497bdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e497a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fc5e497c9a0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc5e497c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e497cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc5e4978130" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e4978130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc5e49784b0"/>
        <function-ref name="userId" scoped="" ref="0x7fc5e4978640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fc5e49624b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e49624b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc5e4962830"/>
        <function-ref name="userId" scoped="" ref="0x7fc5e49629c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fc5e49755c0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fc5e49755c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc5e4975960"/>
        <function-ref name="txDone" scoped="" ref="0x7fc5e4975af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fc5e4964e70" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fc5e4964e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e4962220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fc5e4964020" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc5e4964020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e49643c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fc5e4964690" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fc5e4964690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc5e4964a10"/>
        <function-ref name="txDone" scoped="" ref="0x7fc5e4964ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc5e48e3530" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e48e3530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc5e48e38d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc5e48e3a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc5e48e1270" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e48e1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc5e48e1610"/>
        <function-ref name="configure" scoped="" ref="0x7fc5e48e17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fc5e48e3cb0" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc5e48e3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e48e20a0"/>
        <function-ref name="requested" scoped="" ref="0x7fc5e48e2230"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e48e23c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e48e2550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc5e48e26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e48e46a0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e48e46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e48e4a40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e48e4bd0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e48e4d60"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e48e3020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e48e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fc5e48e19f0" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fc5e48e19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc5e48e1d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc5e48e2930" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e48e2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc5e48e2cb0"/>
        <function-ref name="userId" scoped="" ref="0x7fc5e48e2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e3a60020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e3a60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e3a603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fc5e3a60630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fc5e3a60630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc5e3a609b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc5e3a60b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc5e3a60cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc5e3a60e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc5e3a5c6c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc5e3a5c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc5e3a5ca60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc5e3a5cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc5e3a5a9d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc5e3a5a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc5e3a5ad70"/>
        <function-ref name="configure" scoped="" ref="0x7fc5e3a59020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fc5e3a592b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fc5e3a592b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc5e3a59630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc5e3a597c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc5e3a59950"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc5e3a59ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fc5e3a5ce40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc5e3a5ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e3a5b1e0"/>
        <function-ref name="requested" scoped="" ref="0x7fc5e3a5b370"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e3a5b500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e3a5b690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc5e3a5b820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc5e3a59d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e3a59d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e3a580e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e3a58270"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e3a58400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e3a58590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e3a58720"/>
        <function-ref name="get" scoped="" ref="0x7fc5e3a588b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e3a58a40"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e3a571b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e3a58d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e3a58bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e3a57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e3a5d850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e3a5d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e3a5dbf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e3a5dd80"/>
        <function-ref name="request" scoped="" ref="0x7fc5e3a5c020"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e3a5c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e3a5c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fc5e3a5a2d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fc5e3a5a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc5e3a5a650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc5e3a5ba70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc5e3a5ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc5e3a5bdf0"/>
        <function-ref name="userId" scoped="" ref="0x7fc5e3a5a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fc5e3a57480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fc5e3a57480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e3a57800"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e3a57990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fc5e48d98c0" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fc5e48d98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fc5e48d9c40"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fc5e48d9dd0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fc5e48d6020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fc5e48d61b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fc5e48d6340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fc5e48d64d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fc5e48d6660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fc5e48d67f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e48d6980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fc5e48d6b10"/>
        <function-ref name="getData" scoped="" ref="0x7fc5e48d6ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fc5e48d6e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fc5e48d5020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fc5e48d52b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fc5e48d5440"/>
        <function-ref name="getIV" scoped="" ref="0x7fc5e48d55d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fc5e48d5760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fc5e48d58f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fc5e48d5a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fc5e48d5c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fc5e48d5da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fc5e48d4020"/>
        <function-ref name="isI2C" scoped="" ref="0x7fc5e48d41b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fc5e48d4340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fc5e48d44d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fc5e48d4860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fc5e48d49f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fc5e48d4b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fc5e48d4d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fc5e48d3020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fc5e48d31b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fc5e48d3340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fc5e48d34d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fc5e48d3660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fc5e48d37f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fc5e48d3980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fc5e48d3b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fc5e48d3ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fc5e48d3e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fc5e48d2020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fc5e48d21b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fc5e48d2340"/>
        <function-ref name="setData" scoped="" ref="0x7fc5e48d24d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fc5e48d2660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fc5e48d27f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fc5e48d2980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fc5e48d2b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fc5e48d2ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fc5e48d2e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fc5e48d1420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fc5e48d15b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fc5e48d1740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fc5e48d18d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fc5e48d1a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fc5e48d1bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fc5e48d1d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fc5e48d0020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fc5e48d01b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fc5e48d0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fc5e48c6250" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fc5e48c6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc5e48c65d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc5e48c6760"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc5e48c68f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc5e48c6a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc5e48c6c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc5e48c6da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc5e48c5020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc5e48c51b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc5e48c5340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc5e48c54d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc5e48c5660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc5e48c57f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc5e48c5980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc5e48c5c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc5e48c5da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc5e48c4020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc5e48c41b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fc5e48c4340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc5e48c44d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc5e48c4660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc5e48c47f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc5e48c4980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc5e48c4b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc5e48c4ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e48c4e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc5e48c3220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc5e48c33b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc5e48c3540"/>
        <function-ref name="tx" scoped="" ref="0x7fc5e48c36d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc5e48c3860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc5e48c39f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc5e48c3b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc5e48c3d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc5e48c2020"/>
        <function-ref name="rx" scoped="" ref="0x7fc5e48c21b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc5e48c2340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc5e48c24d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc5e48c2660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc5e48c27f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc5e48c2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fc5e48bf570" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fc5e48bf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e48bf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e48bfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e48bfc10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e48bd980"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e48be020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e48be1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e48be340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e48be4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e48be660"/>
        <function-ref name="get" scoped="" ref="0x7fc5e48be7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e48be980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e48beb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e48beca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e48bd020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e48bd1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e48bd340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e48bd4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e48bfda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e48bd660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e48bd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fc5e48cd390" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fc5e48cd390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fc5e48cd710"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fc5e48cd8a0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fc5e48cda30"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fc5e48cdbc0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fc5e48cdd50"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fc5e48cc020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fc5e48cc1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fc5e48cc340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e48cc4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fc5e48cc660"/>
        <function-ref name="getData" scoped="" ref="0x7fc5e48cc7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fc5e48cc980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fc5e48ccb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fc5e48ccda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fc5e48cb020"/>
        <function-ref name="getIV" scoped="" ref="0x7fc5e48cb1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fc5e48cb340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fc5e48cb4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fc5e48cb660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fc5e48cb7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fc5e48cb980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fc5e48cbb10"/>
        <function-ref name="isI2C" scoped="" ref="0x7fc5e48cbca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fc5e48cbe30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fc5e48ca020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fc5e48ca3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fc5e48ca540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fc5e48ca6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fc5e48ca860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fc5e48ca9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fc5e48cab80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fc5e48cad10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fc5e48c9020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fc5e48c91b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fc5e48c9340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fc5e48c94d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fc5e48c9660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fc5e48c97f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fc5e48c9980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fc5e48c9b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fc5e48c9ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fc5e48c9e30"/>
        <function-ref name="setData" scoped="" ref="0x7fc5e48c8020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fc5e48c81b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fc5e48c8340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fc5e48c84d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fc5e48c8660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fc5e48c87f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fc5e48c8980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fc5e48c7020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fc5e48c71b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fc5e48c7340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fc5e48c74d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fc5e48c7660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fc5e48c77f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fc5e48c7980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fc5e48c7b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fc5e48c7ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fc5e48c7e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fc5e48c2d40" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fc5e48c2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e48c10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e48c1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e48c1400"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e48bf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e48c1720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e48c18b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e48c1a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e48c1bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e48c1d60"/>
        <function-ref name="get" scoped="" ref="0x7fc5e48c0020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e48c01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e48c0340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e48c04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e48c0760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e48c08f0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e48c0a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e48c0c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e48c1590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e48c0da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e48bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fc5e47aac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e47aac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a9210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fc5e47b5da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fc5e47b5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fc5e47aeb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e47aeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47ad020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47ad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fc5e47a8670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e47a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a89f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fc5e47a1e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fc5e47a1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a0210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fc5e47a8e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fc5e47a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a7210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fc5e47942f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e47942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4794670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4794800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fc5e47962f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc5e47962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4796670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4796800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fc5e47b3120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e47b3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fc5e479c670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fc5e479c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e479c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e479cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fc5e47982f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e47982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4798670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4798800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fc5e47adc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc5e47adc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47ab020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fc5e47abc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e47abc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47aa020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fc5e47a2670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fc5e47a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a29f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fc5e47a4e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fc5e47a4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a3210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fc5e47a7670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e47a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a79f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc5e47b6760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e47b6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc5e47b6ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc5e47b6c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc5e47b6e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fc5e47b1aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e47b1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b1e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fc5e47b0120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc5e47b0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fc5e479ba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc5e479ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e479bdf0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e479a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fc5e47b0870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fc5e47b0870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fc5e4798ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e4798ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4798e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4796020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fc5e47b3dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e47b3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fc5e479de50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fc5e479de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e479c210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e479c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fc5e47ab480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fc5e47ab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47ab800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47ab990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fc5e47ad480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e47ad480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47ad800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47ad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fc5e47b5750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e47b5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fc5e479ee50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fc5e479ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e479d210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e479d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fc5e47a0670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fc5e47a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a09f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fc5e479d670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fc5e479d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e479d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e479db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fc5e4795ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e4795ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4795e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4794020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fc5e4796ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc5e4796ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4796e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4795020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fc5e47a3670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fc5e47a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a39f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fc5e47a0e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fc5e47a0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e479e210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e479e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fc5e4799ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fc5e4799ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4799e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4798020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fc5e47a6670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fc5e47a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a69f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fc5e4794ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e4794ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e4794e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e4793020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47931b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e4793340"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e47934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fc5e47b5100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc5e47b5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b5480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fc5e47ae370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fc5e47ae370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47ae6f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47ae880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fc5e47aa480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fc5e47aa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47aa800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47aa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fc5e47a2e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fc5e47a2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a1210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fc5e47a7e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e47a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a6210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fc5e47a1670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fc5e47a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a19f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fc5e47a9670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e47a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a99f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fc5e47b4450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc5e47b4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fc5e47a9e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e47a9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a8210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e47b7a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e47b7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e47b7e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e47b6020"/>
        <function-ref name="request" scoped="" ref="0x7fc5e47b61b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e47b6340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e47b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fc5e47af020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e47af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47af3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fc5e47afcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fc5e47afcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47ae0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fc5e47992f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc5e47992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4799670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4799800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fc5e479aad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e479aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e479ae50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4799020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fc5e47b1450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e47b1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b17d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fc5e479a2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc5e479a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e479a670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e479a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fc5e47952f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fc5e47952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4795670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4795800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fc5e47a3e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fc5e47a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a2210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fc5e479e670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fc5e479e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e479e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e479eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fc5e47b4aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc5e47b4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fc5e47b3770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e47b3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47b3af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fc5e47a6e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fc5e47a6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a4210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fc5e47af670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc5e47af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47af9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fc5e47a4670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fc5e47a4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47a49f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47a4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fc5e479ce50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fc5e479ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e479b610"/>
        <function-ref name="write" scoped="" ref="0x7fc5e479b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fc5e47937a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e47937a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e4793b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e4793cb0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4793e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e4792020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e47921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fc5e477ec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e477ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e477d210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e477d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fc5e4789da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fc5e4789da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4787180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fc5e4781b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e4781b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4780020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fc5e477b670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e477b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e477b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e477bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fc5e4774e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fc5e4774e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4773210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fc5e477be50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fc5e477be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e477a210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e477a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fc5e47672f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e47672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4767670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4767800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fc5e476a2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc5e476a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e476a670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e476a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fc5e4786120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e4786120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47864a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fc5e4770670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fc5e4770670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47709f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4770b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fc5e476b2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e476b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e476b670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e476b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fc5e4780c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc5e4780c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e477f020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e477f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fc5e477fc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e477fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e477e020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e477e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fc5e4775670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fc5e4775670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47759f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4775b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fc5e4778e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fc5e4778e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4777210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fc5e477a670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e477a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e477a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e477ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc5e478a760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e478a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc5e478aae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc5e478ac70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc5e478ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fc5e4785aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e4785aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4785e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fc5e4784120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc5e4784120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47845a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fc5e476fa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc5e476fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e476fdf0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e476d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fc5e4784870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fc5e4784870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4784bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fc5e476bad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e476bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e476be50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e476a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fc5e4786dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e4786dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4785180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fc5e4771e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fc5e4771e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4770210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fc5e477f480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fc5e477f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e477f800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e477f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fc5e4780480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e4780480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4780800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4780990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fc5e4789750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e4789750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4789ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fc5e4772e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fc5e4772e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4771210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fc5e4773670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fc5e4773670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47739f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4773b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fc5e4771670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fc5e4771670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47719f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4771b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fc5e4769ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e4769ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4769e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4767020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fc5e476aad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc5e476aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e476ae50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4769020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fc5e4777670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fc5e4777670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47779f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4777b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fc5e4773e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fc5e4773e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4772210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fc5e476cad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fc5e476cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e476ce50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e476b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fc5e4779670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fc5e4779670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47799f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4779b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fc5e4767ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e4767ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e4767e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e4766020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47661b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e4766340"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e47664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fc5e4789100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc5e4789100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4789480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fc5e4781370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fc5e4781370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47816f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4781880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fc5e477e480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fc5e477e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e477e800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e477e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fc5e4775e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fc5e4775e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4774210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fc5e477ae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e477ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4779210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fc5e4774670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fc5e4774670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47749f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4774b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fc5e477d670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e477d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e477d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e477db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fc5e4787450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc5e4787450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47877d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fc5e477de50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e477de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e477b210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e477b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e478b9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e478b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e478bd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e478a020"/>
        <function-ref name="request" scoped="" ref="0x7fc5e478a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e478a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e478a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fc5e4782020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e4782020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fc5e4782cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fc5e4782cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47810a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fc5e476c2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc5e476c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e476c670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e476c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fc5e476dad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e476dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e476de50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e476c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fc5e4785450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e4785450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47857d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fc5e476d2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc5e476d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e476d670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e476d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fc5e47692f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fc5e47692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4769670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4769800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fc5e4777e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fc5e4777e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4775210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fc5e4772670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fc5e4772670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47729f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4772b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fc5e4787aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc5e4787aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4787e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fc5e4786770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e4786770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4786af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fc5e4779e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fc5e4779e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4778210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e47783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fc5e4782670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc5e4782670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e47829f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fc5e4778670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fc5e4778670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47789f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4778b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fc5e4770e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fc5e4770e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e476f610"/>
        <function-ref name="write" scoped="" ref="0x7fc5e476f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fc5e47667a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e47667a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e4766b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e4766cb0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4766e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e4765020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e47651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fc5e475eb20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc5e475eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fc5e475b020"/>
        <function-ref name="changed" scoped="" ref="0x7fc5e475b1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fc5e475b340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fc5e475b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fc5e475dd20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc5e475dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fc5e47470e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fc5e4742310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc5e4742310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fc5e4742690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fc5e473f880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fc5e473f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e473fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fc5e4734020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fc5e4734020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47343a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fc5e472abd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fc5e472abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e472d020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e472d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fc5e472d530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fc5e472d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc5e472d8b0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e472da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fc5e472e140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fc5e472e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e472e4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fc5e4733c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fc5e4733c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e471a020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e471a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fc5e471a540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fc5e471a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e471a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e471aa50"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e471abe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e471ad70"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4719020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e47191b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4719340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e47194d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fc5e4710950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fc5e4710950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5760640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc5e57609b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fc5e4714780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fc5e4716150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fc5e4716150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e47164d0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4716660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fc5e47169f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fc5e47169f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4716d70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4715020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e47151b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4715340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e47154d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4715660"/>
        <function-ref name="set" scoped="" ref="0x7fc5e47157f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4715980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fc5e4718ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fc5e4718ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5760640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc5e57609b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fc5e46f0ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fc5e46eea90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fc5e46eea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5760640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc5e57609b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fc5e46ed8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc5e46dd020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e46dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5760640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc5e57609b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e46dde30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e46dc800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e46dc340"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e46dccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fc5e46d8530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fc5e46d8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5760640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc5e57609b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e46d73d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e46d7d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e46d7890"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e46d5260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fc5e46d1020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc5e46d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e46d13a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc5e46d1530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc5e46d16c0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e46d1850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc5e46d19e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e46d1b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fc5e46d1d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e46cf020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e46cf1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc5e46cf340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc5e46cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc5e46d4e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e46d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5760640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc5e57609b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e46d3ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e46d2670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e46d21b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e46d2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fc5e471b590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fc5e471b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e471b910"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e471baa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e471bc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e471bdc0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e46cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e46cb1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e46cb340"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e46cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc5e46c9c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc5e46c9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e46c8020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e46c81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc5e46c8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc5e46c6020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e46c8660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e46c87f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc5e46c8980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fc5e46c8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e46c8ca0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e46c8e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fc5e46c7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc5e46c71b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fc5e46c7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc5e46c75d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fc5e46c7760"/>
        <function-ref name="set" scoped="" ref="0x7fc5e46c78f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc5e46c7a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fc5e46c7c10"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e46c84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc5e46c7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc5e46ca9e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc5e46ca9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e46cad60"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e46c9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e46c91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e46c9340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e46c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e46c9660"/>
        <function-ref name="set" scoped="" ref="0x7fc5e46c97f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e46c9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc5e46c11b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc5e46c11b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc5e46c1530"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e46c16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc5e46b2cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e46b2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc5e46b10a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc5e46b1230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc5e46b13c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc5e46b1550"/>
        <function-ref name="setCca" scoped="" ref="0x7fc5e46b16e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc5e46b1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fc5e46ae990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fc5e46ae990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc5e46aed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fc5e46b2020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fc5e46b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e46b23a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e46b2530"/>
        <function-ref name="modify" scoped="" ref="0x7fc5e46b26c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e46b2850"/>
        <function-ref name="resend" scoped="" ref="0x7fc5e46b29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc5e46b56c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc5e46b56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc5e46b5a40"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e46b5bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fc5e46b0150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fc5e46b0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc5e46b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc5e46a4970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e46a4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc5e46a4cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc5e46a4e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc5e46a3030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc5e46a31c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fc5e46a3350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc5e46a34e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fc5e4695c60" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fc5e4695c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc5e4698210"/>
        <function-ref name="clear" scoped="" ref="0x7fc5e4698940"/>
        <function-ref name="isValid" scoped="" ref="0x7fc5e4699ac0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e468f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fc5e467c020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e467c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e467c3a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e467c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fc5e467c890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc5e467c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e467cc10"/>
        <function-ref name="write" scoped="" ref="0x7fc5e467cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fc5e46a3900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fc5e46a3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc5e46a3c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fc5e467f530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e467f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e467f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fc5e468ea80" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fc5e468ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fc5e468ee00"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e468d020"/>
        <function-ref name="captured" scoped="" ref="0x7fc5e468d1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fc5e468d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fc5e46a0ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fc5e46a0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e469c390"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e469e360"/>
        <function-ref name="startAt" scoped="" ref="0x7fc5e469ece0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e469e820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc5e469c850"/>
        <function-ref name="start" scoped="" ref="0x7fc5e469f970"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e469fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc5e469cd00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e469cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc5e469b0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc5e469b230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc5e469b3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc5e469b550"/>
        <function-ref name="getPower" scoped="" ref="0x7fc5e469b6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc5e469b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fc5e4681550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e4681550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e46818d0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4681a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fc5e4681e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e4681e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e46801c0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4680350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fc5e4675d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fc5e4675d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e46790e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fc5e4679270"/>
        <function-ref name="sfd" scoped="" ref="0x7fc5e4679400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc5e46a5bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e46a5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e46a4020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e46a41b0"/>
        <function-ref name="modify" scoped="" ref="0x7fc5e46a4340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e46a44d0"/>
        <function-ref name="resend" scoped="" ref="0x7fc5e46a4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fc5e4683d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e4683d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc5e46820e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc5e4682270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc5e4682400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fc5e467fc60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e467fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e467e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fc5e46879b0" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fc5e46879b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e4687d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4685020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e46851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4685340"/>
        <function-ref name="get" scoped="" ref="0x7fc5e46854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4685660"/>
        <function-ref name="set" scoped="" ref="0x7fc5e46857f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4685980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e46a6c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e46a6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e46a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc5e469bbb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e469bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e469a020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc5e469a1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc5e469a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fc5e4688e80" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc5e4688e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e468e220"/>
        <function-ref name="isSet" scoped="" ref="0x7fc5e468e3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e468e540"/>
        <function-ref name="set" scoped="" ref="0x7fc5e468e6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fc5e467e3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e467e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e467e960"/>
        <function-ref name="write" scoped="" ref="0x7fc5e467eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fc5e4683020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fc5e4683020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e46833a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e4683530"/>
        <function-ref name="request" scoped="" ref="0x7fc5e46836c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e4683850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e46839e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fc5e468d690" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fc5e468d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e468db10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e468dca0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e468de30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4687020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e46871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4687340"/>
        <function-ref name="set" scoped="" ref="0x7fc5e46874d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4687660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fc5e467b130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc5e467b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e467b4b0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e467b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fc5e467b9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e467b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e467bd40"/>
        <function-ref name="write" scoped="" ref="0x7fc5e467a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fc5e46806d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc5e46806d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4680a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fc5e4685cd0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fc5e4685cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e46840a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e4684230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e46843c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e4684550"/>
        <function-ref name="get" scoped="" ref="0x7fc5e46846e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e4684870"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4684a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e4684b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc5e46796c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e46796c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e4679a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e4679bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e4679d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e4678020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e46781b0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4678340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e46784d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e4678b10"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4678660"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e46787f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e4678980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fc5e467d5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e467d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e467d960"/>
        <function-ref name="write" scoped="" ref="0x7fc5e467daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc5e46a5320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc5e46a5320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc5e46a56a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e46a5830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fc5e4682780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e4682780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e4682b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e4682c90"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4682e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e4681020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e46811b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fc5e4680de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc5e4680de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e467f180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fc5e467ee80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc5e467ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e467d220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fc5e46a00f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fc5e46a00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc5e46a0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fc5e45dbc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e45dbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45da210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fc5e45e5020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fc5e45e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fc5e45dfc70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e45dfc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45dd020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fc5e45d9670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e45d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d99f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fc5e45d2e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fc5e45d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d0210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fc5e45d9e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fc5e45d9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d7210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fc5e45c52f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e45c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45c5670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fc5e45c72f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc5e45c72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45c7670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fc5e45e3370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e45e3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fc5e45cd670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fc5e45cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45cd9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fc5e45c82f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e45c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45c8670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fc5e45ddc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc5e45ddc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45dc020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fc5e45dcc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e45dcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45db020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fc5e45d3670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fc5e45d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d39f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fc5e45d5e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fc5e45d5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d4210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fc5e45d7670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e45d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d79f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc5e45e78f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e45e78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc5e45e7c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc5e45e7e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc5e45e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fc5e45e2d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e45e2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fc5e45e1370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc5e45e1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fc5e45cca70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc5e45cca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45ccdf0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fc5e45e1ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fc5e45e1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e1e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fc5e45c8ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e45c8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45c8e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fc5e45e2060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e45e2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e23e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fc5e45cee50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fc5e45cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45cd210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fc5e45dc480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fc5e45dc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45dc800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45dc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fc5e45dd480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e45dd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45dd800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45dd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fc5e45e6940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e45e6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fc5e45cfe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fc5e45cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45ce210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fc5e45d0670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fc5e45d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d09f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fc5e45ce670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fc5e45ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45ce9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fc5e45c6ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e45c6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45c6e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fc5e45c7ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc5e45c7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45c7e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fc5e45d4670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fc5e45d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d49f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fc5e45d0e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fc5e45d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45cf210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fc5e45c9ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fc5e45c9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45c9e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fc5e45d6670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fc5e45d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d69f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fc5e45c5ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e45c5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e45c5e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e45c4020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c41b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e45c4340"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e45c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fc5e45e62f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc5e45e62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fc5e45df490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fc5e45df490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45df810"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45df9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fc5e45db480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fc5e45db480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45db800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45db990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fc5e45d3e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fc5e45d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d2210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fc5e45d7e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e45d7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d6210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fc5e45d2670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fc5e45d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d29f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fc5e45da670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e45da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45da9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45dab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fc5e45e5670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc5e45e5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fc5e45dae50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e45dae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d9210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e45e8c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e45e8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e45e7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e45e71b0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e45e7340"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e45e74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e45e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fc5e45e0160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e45e0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fc5e45e0e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fc5e45e0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45df1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fc5e45c92f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc5e45c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45c9670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fc5e45cbad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e45cbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45cbe50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fc5e45e26b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e45e26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e2a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fc5e45cb2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc5e45cb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45cb670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45cb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fc5e45c62f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fc5e45c62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45c6670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fc5e45d4e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fc5e45d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d3210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fc5e45cf670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fc5e45cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45cf9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fc5e45e5cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc5e45e5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fc5e45e39c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e45e39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fc5e45d6e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fc5e45d6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d5210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fc5e45e07b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc5e45e07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45e0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fc5e45d5670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fc5e45d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45d59f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45d5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fc5e45cde50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fc5e45cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45cc610"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45cc7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fc5e45c47a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e45c47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e45c4b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e45c4cb0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45c4e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e45c3020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e45c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fc5e45b7df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fc5e45b7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e45b41c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fc5e45b4350"/>
        <function-ref name="sfd" scoped="" ref="0x7fc5e45b44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e45b47c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e45b47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e45b4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fc5e45b3020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fc5e45b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc5e45b33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc5e45b75c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc5e45b75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc5e45b7940"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e45b7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fc5e45ab380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fc5e45ab380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e45ab700"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e45ab890"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e45aba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e45abbb0"/>
        <function-ref name="get" scoped="" ref="0x7fc5e45abd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e45aa020"/>
        <function-ref name="set" scoped="" ref="0x7fc5e45aa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e45aa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fc5e45a4b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fc5e45a4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fc5e45a3020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fc5e45a31b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fc5e45a3340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fc5e45a34d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fc5e45a3660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fc5e45a37f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fc5e45a3980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fc5e45a3b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fc5e45a3ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fc5e45a3e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fc5e45a2020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fc5e45a21b0"/>
        <function-ref name="sync" scoped="" ref="0x7fc5e45a2340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc5e45a25d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fc5e45a2760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fc5e458c9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fc5e458c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e458cd50"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e458b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fc5e45a2d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fc5e45a2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc5e459f330"/>
        <function-ref name="clear" scoped="" ref="0x7fc5e459fa60"/>
        <function-ref name="isValid" scoped="" ref="0x7fc5e45a0ba0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e459e210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fc5e45aa6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fc5e45aa6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e45aaa30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e45aabc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e45aad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e45a9020"/>
        <function-ref name="get" scoped="" ref="0x7fc5e45a91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e45a9340"/>
        <function-ref name="set" scoped="" ref="0x7fc5e45a94d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e45a9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fc5e459dcb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e459dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e459b0a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e459b230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fc5e459b590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc5e459b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e459b910"/>
        <function-ref name="write" scoped="" ref="0x7fc5e459baa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fc5e459a6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e459a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e459aa50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e459abe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc5e45a5330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e45a5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc5e45a56b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc5e45a5840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc5e45a59d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc5e45a5b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fc5e45a5cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc5e45a5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fc5e45ae550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fc5e45ae550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e45ae8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fc5e45aea60"/>
        <function-ref name="sfd" scoped="" ref="0x7fc5e45aebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fc5e45a63a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc5e45a63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45a6720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fc5e45ac020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fc5e45ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc5e45ac3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc5e45ac530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc5e45ac6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc5e45ac850"/>
        <function-ref name="get" scoped="" ref="0x7fc5e45ac9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc5e45acb70"/>
        <function-ref name="set" scoped="" ref="0x7fc5e45acd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc5e45ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fc5e4599020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e4599020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e45993a0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4599530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e45af620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e45af620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e45af9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc5e45a41e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e45a41e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e45a4560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc5e45a46f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc5e45a4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e45ad020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e45ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e45ad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fc5e45a86e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fc5e45a86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e45a8a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e45a8bf0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e45a8d80"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e45a7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e45a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fc5e459be00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc5e459be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e459a1c0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e459a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fc5e45a7530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e45a7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e45a78b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e45a7a40"/>
        <function-ref name="write" scoped="" ref="0x7fc5e45a7bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e45a7d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e45a6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fc5e45998b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc5e45998b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e4599e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fc5e45ad7c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fc5e45ad7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc5e45adb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc5e4598150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e4598150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e45984d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e4598660"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e45987f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e4598980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e4598b10"/>
        <function-ref name="get" scoped="" ref="0x7fc5e4598ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e4598e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e45974d0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4597020"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e45971b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e4597340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fc5e459d3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e459d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e459d760"/>
        <function-ref name="write" scoped="" ref="0x7fc5e459d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fc5e459eb10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e459eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e459d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fc5e45a9a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fc5e45a9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc5e45a9dd0"/>
        <function-ref name="disable" scoped="" ref="0x7fc5e45a8020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc5e45a81b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc5e45a8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fc5e45a6ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e45a6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e45a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc5e45afca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc5e45afca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc5e45ae0a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e45ae230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fc5e452ca70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc5e452ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fc5e452cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fc5e4530670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4530670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc5e45309f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc5e4530b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc5e4530d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc5e452d020"/>
        <function-ref name="getPower" scoped="" ref="0x7fc5e452d1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc5e452d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fc5e452b550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc5e452b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc5e452ab00"/>
        <function-ref name="clear" scoped="" ref="0x7fc5e45282a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fc5e452a3d0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e45289d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fc5e452c0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e452c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e452c440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc5e452c5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc5e452c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fc5e4523480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc5e4523480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e4523800"/>
        <function-ref name="isSet" scoped="" ref="0x7fc5e4523990"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4523b20"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4523cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fc5e4527660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc5e4527660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc5e4526ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fc5e4524460"/>
        <function-ref name="isValid" scoped="" ref="0x7fc5e45265b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4524b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fc5e452d6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fc5e452d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc5e452da60"/>
        <function-ref name="noAck" scoped="" ref="0x7fc5e452dbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc5e452dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fc5e451c020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc5e451c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fc5e451c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fc5e4522d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4522d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc5e451f0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc5e451f270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc5e451f400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc5e451f590"/>
        <function-ref name="getPower" scoped="" ref="0x7fc5e451f720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc5e451f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fc5e45134a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc5e45134a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4513820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e45139b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4513b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4513cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e4513e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fc5e451ca80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc5e451ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc5e451a020"/>
        <function-ref name="clear" scoped="" ref="0x7fc5e451a750"/>
        <function-ref name="isValid" scoped="" ref="0x7fc5e451b8d0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e451ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fc5e451e640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e451e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e451e9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc5e451eb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc5e451ece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fc5e45158b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc5e45158b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e4515c30"/>
        <function-ref name="isSet" scoped="" ref="0x7fc5e4515dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4513020"/>
        <function-ref name="set" scoped="" ref="0x7fc5e45131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fc5e45123b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fc5e45123b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e4511020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fc5e45116e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fc5e45116e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e45103d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fc5e4519af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc5e4519af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc5e45160d0"/>
        <function-ref name="clear" scoped="" ref="0x7fc5e4516800"/>
        <function-ref name="isValid" scoped="" ref="0x7fc5e4517970"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4515020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fc5e451fc50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fc5e451fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc5e451e020"/>
        <function-ref name="noAck" scoped="" ref="0x7fc5e451e1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc5e451e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fc5e44c0020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fc5e44c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e44c0c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc5e44bf300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc5e44bf300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc5e44be150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc5e44bead0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc5e44be610"/>
        <function-ref name="overflow" scoped="" ref="0x7fc5e44bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc5e44ba450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc5e44ba450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc5e44b7a20"/>
        <function-ref name="fired" scoped="" ref="0x7fc5e44b8020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc5e44b8da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc5e44b8920"/>
        <function-ref name="getdt" scoped="" ref="0x7fc5e44b64a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fc5e44b6020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc5e44b84a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc5e44b9090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc5e44b7410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc5e44b9560"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e44b9a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fc5e44a5c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc5e44a5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a4210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fc5e44af020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fc5e44af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44af3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fc5e44a9c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc5e44a9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a8020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fc5e44a3670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc5e44a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a39f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fc5e449ce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fc5e449ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449b210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fc5e44a3e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fc5e44a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a2210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fc5e448f2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc5e448f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e448f670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e448f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fc5e44912f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc5e44912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4491670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4491800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fc5e44ae370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc5e44ae370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44ae6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fc5e4497670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fc5e4497670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44979f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4497b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fc5e44932f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc5e44932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4493670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4493800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fc5e44a8c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc5e44a8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a6020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fc5e44a6c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc5e44a6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a5020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fc5e449d670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fc5e449d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fc5e449fe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fc5e449fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449e210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fc5e44a2670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc5e44a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a29f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc5e44b1970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc5e44b1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc5e44b1cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc5e44b1e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc5e44b0030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fc5e44acd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc5e44acd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44ab0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fc5e44ab370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc5e44ab370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fc5e4496a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc5e4496a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4496df0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4495020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fc5e44abac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fc5e44abac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44abe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fc5e4493ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc5e4493ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4493e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4491020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fc5e44ac060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc5e44ac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44ac3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fc5e4498e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fc5e4498e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4497210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fc5e44a6480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fc5e44a6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a6800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fc5e44a8480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc5e44a8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a8800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fc5e44b0950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc5e44b0950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44b0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fc5e449ae50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fc5e449ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4498210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fc5e449b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fc5e449b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fc5e4498670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fc5e4498670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44989f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4498b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fc5e4490ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc5e4490ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4490e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e448f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fc5e4491ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc5e4491ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4491e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4490020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fc5e449e670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fc5e449e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fc5e449be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fc5e449be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449a210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fc5e4494ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fc5e4494ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4494e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4493020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fc5e44a1670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fc5e44a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a19f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fc5e448fad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc5e448fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e448fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e448e020"/>
        <function-ref name="write" scoped="" ref="0x7fc5e448e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e448e340"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e448e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fc5e44b0300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc5e44b0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44b0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fc5e44a9490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fc5e44a9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a9810"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fc5e44a5480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fc5e44a5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a5800"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fc5e449de50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fc5e449de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449c210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fc5e44a2e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc5e44a2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a1210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fc5e449c670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fc5e449c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fc5e44a4670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc5e44a4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a49f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fc5e44af670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc5e44af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44af9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fc5e44a4e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc5e44a4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e44a3210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44a33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e44b2d00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e44b2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e44b10a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e44b1230"/>
        <function-ref name="request" scoped="" ref="0x7fc5e44b13c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e44b1550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e44b16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fc5e44aa160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc5e44aa160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44aa4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fc5e44aae00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fc5e44aae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44a91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fc5e44942f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc5e44942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4494670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4494800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fc5e4495ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc5e4495ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4495e50"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4494020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fc5e44ac6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc5e44ac6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44aca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fc5e44952f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc5e44952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4495670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4495800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fc5e44902f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fc5e44902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4490670"/>
        <function-ref name="write" scoped="" ref="0x7fc5e4490800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fc5e449ee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fc5e449ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449d210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fc5e449a670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fc5e449a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fc5e44afcc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc5e44afcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44ae0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fc5e44ae9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc5e44ae9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44aed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fc5e44a1e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fc5e44a1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449f210"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fc5e44aa7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc5e44aa7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc5e44aab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fc5e449f670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fc5e449f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e449f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e449fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fc5e4497e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fc5e4497e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc5e4496610"/>
        <function-ref name="write" scoped="" ref="0x7fc5e44967a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fc5e448e7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc5e448e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc5e448eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc5e448ecb0"/>
        <function-ref name="write" scoped="" ref="0x7fc5e448ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc5e448d020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc5e448d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fc5e4462a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fc5e4462a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fc5e4462da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fc5e4461020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fc5e4460920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fc5e4460920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e4462560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e4466990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e4466990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e4466d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fc5e445ca20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fc5e445ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fc5e445cda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fc5e445a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fc5e445d940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fc5e445d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e445c560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e445d080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e445d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e445d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc5e4464aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc5e4464aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc5e4464e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc5e445e020"/>
        <function-ref name="isState" scoped="" ref="0x7fc5e445e1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc5e445e340"/>
        <function-ref name="requestState" scoped="" ref="0x7fc5e445e4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fc5e445e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc5e4444020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc5e4444020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e44443a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4444530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e44446c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4444850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e44449e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc5e4445220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e4445220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e44455a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4445730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e44458c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4445a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4445be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc5e4440e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc5e4440e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e443f210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e443f3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e443f530"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e443f6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e443f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc5e4443a10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e4443a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4443d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4440020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e44401b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4440340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e44404d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fc5e443e8f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fc5e443e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fc5e443ec70"/>
        <function-ref name="rand32" scoped="" ref="0x7fc5e443ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e4440750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e4440750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e4440ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc5e443d170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e443d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e443d4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc5e443d680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc5e443d810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fc5e443fae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc5e443fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc5e443fe60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc5e443e020"/>
        <function-ref name="isState" scoped="" ref="0x7fc5e443e1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc5e443e340"/>
        <function-ref name="requestState" scoped="" ref="0x7fc5e443e4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fc5e443e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc5e4441690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc5e4441690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc5e4441a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc5e4441ba0"/>
        <function-ref name="isState" scoped="" ref="0x7fc5e4441d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc5e442a020"/>
        <function-ref name="requestState" scoped="" ref="0x7fc5e442a1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fc5e442a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc5e4423950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc5e4423950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4423cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e4426aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e4426aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4426e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fc5e4423200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fc5e4423200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4423580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc5e441e3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc5e441e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e441e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e441fb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e441fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e441e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e4422e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e4422e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e441f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc5e441ea70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e441ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e441edf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc5e441d020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc5e441d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fc5e441f570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fc5e441f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e441f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc5e43f0020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc5e43f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e43f03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc5e43f06b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc5e43f06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e43f0a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e43f0bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43f0d50"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e43ef020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e43ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc5e43f48e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e43f48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e43f4c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e43f4df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43f3020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e43f31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e43f3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fc5e43f3c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fc5e43f3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e43f20a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e43f2230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43f23c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e43f2550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e43f26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e43f35e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e43f35e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e43f3960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e43f5be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e43f5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e43f4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e43f41b0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e43f4340"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e43f44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e43f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fc5e43f2a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fc5e43f2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e43f2dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fc5e43f1170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fc5e43f1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e43f14f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e43f1680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e43f1810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43f19a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e43f1b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc5e43e6d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc5e43e6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e43e5180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e43e5310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43e54a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e43e5630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e43e57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc5e43e5b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc5e43e5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e43e4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fc5e43b7db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fc5e43b7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e43b5180"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e43b5310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc5e43e42f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e43e42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc5e43e4670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc5e43e4800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc5e43e4990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc5e43e4b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fc5e43e4cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc5e43e4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fc5e43e8a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fc5e43e8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e43e8da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e43e7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43e71b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e43e7340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e43e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fc5e43e3b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fc5e43e3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc5e43e2020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc5e43e21b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc5e43e2340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc5e43e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc5e43e3170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e43e3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e43e34f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc5e43e3680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc5e43e3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fc5e43e8370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fc5e43e8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e43e86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc5e43ea7b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc5e43ea7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e43eab30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e43eacc0"/>
        <function-ref name="request" scoped="" ref="0x7fc5e43eae50"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e43e9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e43e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fc5e43e94d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fc5e43e94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e43e9850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e43e99e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43e9b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e43e9d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e43e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fc5e43e7840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fc5e43e7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e43e7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fc5e43e6020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fc5e43e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e43e63a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e43e6530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e43e66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43e6850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e43e69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc5e4396dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc5e4396dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc5e4395180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fc5e4395410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fc5e4395410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc5e4395790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc5e4395920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc5e4395ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc5e4395c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc5e438ab80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc5e438ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc5e4389020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc5e43891b0"/>
        <function-ref name="start" scoped="" ref="0x7fc5e4389340"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e43894d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc5e4388860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc5e4388860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4388be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4388d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4387020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e43871b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4387340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc5e4387690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc5e4387690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4387a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc5e438ece0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e438ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e438b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e438b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e438b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e438b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e438b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fc5e438a080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e438a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fc5e438a400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fc5e438a590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fc5e438a720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fc5e438a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fc5e4389800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fc5e4389800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc5e4389b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc5e4389d10"/>
        <function-ref name="isState" scoped="" ref="0x7fc5e4388020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc5e43881b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fc5e4388340"/>
        <function-ref name="forceState" scoped="" ref="0x7fc5e43884d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fc5e4387d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fc5e4387d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc5e4386180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc5e4386310"/>
        <function-ref name="start" scoped="" ref="0x7fc5e43864a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e4386630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e438b980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e438b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e438bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fc5e43832d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e43832d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fc5e4383650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fc5e43837e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fc5e4383970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fc5e4383b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc5e4385580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc5e4385580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc5e4385900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc5e4385a90"/>
        <function-ref name="isState" scoped="" ref="0x7fc5e4385c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc5e4385db0"/>
        <function-ref name="requestState" scoped="" ref="0x7fc5e4384020"/>
        <function-ref name="forceState" scoped="" ref="0x7fc5e43841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc5e4375d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc5e4375d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4374180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4374310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43744a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4374630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e43747c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc5e4378350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e4378350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e43786d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4378860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43789f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4378b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4378d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fc5e4375020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fc5e4375020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fc5e43753a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fc5e4375530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fc5e43756c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fc5e4375850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fc5e43759e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fc5e43701c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e43701c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc5e4370540"/>
        <function-ref name="noAck" scoped="" ref="0x7fc5e43706d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc5e4370860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fc5e4373410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fc5e4373410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fc5e4373790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fc5e4373920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fc5e4373ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fc5e4373c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fc5e4373dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc5e4351690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc5e4351690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4351a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc5e4352860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc5e4352860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4352be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4352d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4351020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e43511b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4351340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fc5e434e610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fc5e434e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fc5e434e990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fc5e434eb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fc5e434ecb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fc5e434ee40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fc5e434d020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fc5e434d1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fc5e434d340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fc5e434d4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fc5e434d660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fc5e434d7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fc5e434d980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fc5e434db10"/>
        <function-ref name="sync" scoped="" ref="0x7fc5e434dca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc5e434c020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fc5e434c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc5e43538b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc5e43538b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc5e4353c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc5e4353dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc5e4352020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc5e43521b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fc5e4352340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc5e43524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fc5e4354ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fc5e4354ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fc5e43530a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fc5e434b1f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fc5e434b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc5e434b570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc5e434b700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc5e434b890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc5e434ba20"/>
        <function-ref name="setCca" scoped="" ref="0x7fc5e434bbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc5e434bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc5e4355a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc5e4355a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4355e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e4354020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e43541b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4354340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e43544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc5e4359020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc5e4359020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e43593a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4359530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e43596c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4359850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e43599e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fc5e4357df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fc5e4357df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e43561c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc5e4351ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc5e4351ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc5e434f0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc5e434f230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc5e434f3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc5e434f550"/>
        <function-ref name="getPower" scoped="" ref="0x7fc5e434f6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc5e434f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fc5e434c4d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc5e434c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fc5e434c950"/>
        <function-ref name="changed" scoped="" ref="0x7fc5e434cae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fc5e434cc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fc5e434ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc5e434fb70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc5e434fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e434e020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc5e434e1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc5e434e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e4357210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e4357210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4357590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc5e434ad30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc5e434ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc5e43490e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc5e4349270"/>
        <function-ref name="led1On" scoped="" ref="0x7fc5e4349400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc5e4349590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc5e4349720"/>
        <function-ref name="get" scoped="" ref="0x7fc5e43498b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc5e4349a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc5e43481b0"/>
        <function-ref name="set" scoped="" ref="0x7fc5e4349bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc5e4349d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fc5e4348020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc5e4356470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc5e4356470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc5e43567f0"/>
        <function-ref name="source" scoped="" ref="0x7fc5e4356980"/>
        <function-ref name="address" scoped="" ref="0x7fc5e4356b10"/>
        <function-ref name="destination" scoped="" ref="0x7fc5e4356ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc5e4356e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc5e4355020"/>
        <function-ref name="type" scoped="" ref="0x7fc5e43551b0"/>
        <function-ref name="setType" scoped="" ref="0x7fc5e4355340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc5e43554d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc5e4355660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc5e43557f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fc5e434a0f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fc5e434a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc5e434a470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc5e434a600"/>
        <function-ref name="request" scoped="" ref="0x7fc5e434a790"/>
        <function-ref name="granted" scoped="" ref="0x7fc5e434a920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc5e434aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc5e42c5360" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc5e42c5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc5e42c56e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc5e42c5870"/>
        <function-ref name="start" scoped="" ref="0x7fc5e42c5a00"/>
        <function-ref name="stop" scoped="" ref="0x7fc5e42c5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc5e42c43f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc5e42c43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e42c4770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e42c4900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e42c4a90"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e42c4c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e42c4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fc5e42c11d0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fc5e42c11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e42c1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc5e42c17e0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc5e42c17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e42c1b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e42c1cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e42c1e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e42c0030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e42c01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fc5e42bea20" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc5e42bea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc5e5760200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc5e42bc020"/>
        <function-ref name="clear" scoped="" ref="0x7fc5e42bc750"/>
        <function-ref name="isValid" scoped="" ref="0x7fc5e42bd890"/>
        <function-ref name="set" scoped="" ref="0x7fc5e42bce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fc5e42b4890" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fc5e42b4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fc5e42b4c10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fc5e42b4da0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fc5e42b3020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fc5e42b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e42c25c0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e42c25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e42c2940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fc5e42bfb20" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc5e42bfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc5e42be020"/>
        <function-ref name="noAck" scoped="" ref="0x7fc5e42be1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc5e42be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc5e42c0470" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc5e42c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc5e42c07f0"/>
        <function-ref name="source" scoped="" ref="0x7fc5e42c0980"/>
        <function-ref name="address" scoped="" ref="0x7fc5e42c0b10"/>
        <function-ref name="destination" scoped="" ref="0x7fc5e42c0ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc5e42c0e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc5e42bf020"/>
        <function-ref name="type" scoped="" ref="0x7fc5e42bf1b0"/>
        <function-ref name="setType" scoped="" ref="0x7fc5e42bf340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc5e42bf4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc5e42bf660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc5e42bf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fc5e42b8af0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc5e42b8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc5e5761680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc5e57619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc5e42b60d0"/>
        <function-ref name="clear" scoped="" ref="0x7fc5e42b6800"/>
        <function-ref name="isValid" scoped="" ref="0x7fc5e42b7970"/>
        <function-ref name="set" scoped="" ref="0x7fc5e42b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc5e421f020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc5e421f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e421f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e421f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e421f6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e421f850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e421f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc5e421fc30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc5e421fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e421e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e421e1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e421e340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e421e4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e421e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc5e421e8b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc5e421e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc5e421ec30"/>
        <function-ref name="source" scoped="" ref="0x7fc5e421edc0"/>
        <function-ref name="address" scoped="" ref="0x7fc5e421d020"/>
        <function-ref name="destination" scoped="" ref="0x7fc5e421d1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc5e421d340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc5e421d4d0"/>
        <function-ref name="type" scoped="" ref="0x7fc5e421d660"/>
        <function-ref name="setType" scoped="" ref="0x7fc5e421d7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc5e421d980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc5e421db10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc5e421dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fc5e421c020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fc5e421c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc5e421c3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fc5e421c530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc5e421c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc5e38d7e60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc5e38d7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e38d6210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e38d63a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e38d6530"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e38d66c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e38d6850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc5e38d6aa0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc5e38d6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e38d6e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e38d5020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e38d51b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e38d5340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e38d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc5e38d5720" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc5e38d5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc5e38d5aa0"/>
        <function-ref name="source" scoped="" ref="0x7fc5e38d5c30"/>
        <function-ref name="address" scoped="" ref="0x7fc5e38d5dc0"/>
        <function-ref name="destination" scoped="" ref="0x7fc5e38d4020"/>
        <function-ref name="setSource" scoped="" ref="0x7fc5e38d41b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc5e38d4340"/>
        <function-ref name="type" scoped="" ref="0x7fc5e38d44d0"/>
        <function-ref name="setType" scoped="" ref="0x7fc5e38d4660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc5e38d47f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc5e38d4980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc5e38d4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fc5e38d4da0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fc5e38d4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc5e38d3180"/>
        <function-ref name="noAck" scoped="" ref="0x7fc5e38d3310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc5e38d34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc5e38ca7f0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc5e38ca7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e38cab70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e38cad00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e38c9020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e38c91b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e38c9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fc5e38c95f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e38c95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e38c9970"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e38c9b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e38c9c90"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e38c9e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e38c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fc5e38c7270" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc5e38c7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc5e38c75f0"/>
        <function-ref name="source" scoped="" ref="0x7fc5e38c7780"/>
        <function-ref name="address" scoped="" ref="0x7fc5e38c7910"/>
        <function-ref name="destination" scoped="" ref="0x7fc5e38c7aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc5e38c7c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc5e38c7dc0"/>
        <function-ref name="type" scoped="" ref="0x7fc5e38c6020"/>
        <function-ref name="setType" scoped="" ref="0x7fc5e38c61b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc5e38c6340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc5e38c64d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc5e38c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc5e4286930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e4286930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e4286cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4286e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4283020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e42831b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4283340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fc5e4234400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc5e4234400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e42347a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4234930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4234ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4234c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4234de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc5e4236df0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc5e4236df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc5e42351c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4235350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e42354e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc5e4235670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc5e4235800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fc5e4232720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc5e4232720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e4232aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e4232c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e4232dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4231020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e42311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7fc5e4235b80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7fc5e4235b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7fc5e4234020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fc5e4231480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fc5e4231480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e4231800"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e4231990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fc5e4231c60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fc5e4231c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc5e4230020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc5e42301b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fc5e4233060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc5e4233060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc5e42333e0"/>
        <function-ref name="source" scoped="" ref="0x7fc5e4233570"/>
        <function-ref name="address" scoped="" ref="0x7fc5e4233700"/>
        <function-ref name="destination" scoped="" ref="0x7fc5e4233890"/>
        <function-ref name="setSource" scoped="" ref="0x7fc5e4233a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc5e4233bb0"/>
        <function-ref name="type" scoped="" ref="0x7fc5e4233d40"/>
        <function-ref name="setType" scoped="" ref="0x7fc5e4232020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc5e42321b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc5e4232340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc5e42324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc5e4212020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc5e4212020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc5e42123a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc5e4212530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc5e42126c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc5e4212850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc5e42129e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc5e4213910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc5e4213910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc5e4213c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc5e4212c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc5e4212c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc5e4211020"/>
        <function-ref name="source" scoped="" ref="0x7fc5e42111b0"/>
        <function-ref name="address" scoped="" ref="0x7fc5e4211340"/>
        <function-ref name="destination" scoped="" ref="0x7fc5e42114d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc5e4211660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc5e42117f0"/>
        <function-ref name="type" scoped="" ref="0x7fc5e4211980"/>
        <function-ref name="setType" scoped="" ref="0x7fc5e4211b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc5e4211ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc5e4211e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc5e4210020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fc5e5757a40" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fc5e5755650" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7fc5e574cd50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7fc5e5748c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7fc5e5748940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7fc5e574d020" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7fc5e574e7b0" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7fc5e574bb40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fc5e574b550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fc5e574b8b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7fc5e5748020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7fc5e5749cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7fc5e57495a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7fc5e5749320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7fc5e574c5b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7fc5e574e020" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7fc5e574ddc0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fc5e574d7d0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fc5e574db30" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fc5e570ab40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fc5e570dde0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fc5e570a420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fc5e570d700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fc5e570c5a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fc5e57108f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fc5e570d020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fc5e570ccc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fc5e587a7e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fc5e5b42700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fc5e57a0a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fc5e579e1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fc5e57a02b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fc5e5918020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fc5e62b8e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fc5e5c00e20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fc5e5c00610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fc5e5bf4770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fc5e5bf2020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fc5e56a6020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fc5e56a67d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fc5e56a5020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fc5e56a4020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fc5e56a27d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc5e56a1020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fc5e56a57b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc5e56a1b90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fc5e56a1910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fc5e56a7850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fc5e56a4800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fc5e56a2020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fc5e56978a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fc5e5696020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fc5e5699a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fc5e5696e80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc5e5697190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fc5e5696740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc5e569cc40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fc5e5699350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fc5e566c880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fc5e566b020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fc5e5667b10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fc5e5667890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7fc5e56655d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fc5e566e120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fc5e566a020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fc5e5665d60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7fc5e5663860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fc5e56635e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fc5e566b760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc5e566c0e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7fc5e5662190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fc5e5668770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7fc5e5666e30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fc5e566e8c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7fc5e56663e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc5e566f270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fc5e566a7a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fc5e5667020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fc5e5668020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fc5e566f9a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fc5e5339110" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc5e533de40" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fc5e5338600" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc5e5338380" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fc5e533d460" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc5e5339960" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7fc5e53633f0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e5363170" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fc5e5361490" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e5361210" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fc5e535f7b0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e535f1b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e535f4e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fc5e535d8a0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fc5e5360930" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e5360370" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e53606a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc5e53472c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fc5e535c930" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fc5e535ccb0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e5347020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fc5e5343970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e5343370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e53436a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fc5e5342a60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fc5e5346630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e53463b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc5e5345b80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e53455a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fc5e53458f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fc5e53342b0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc5e5336b50" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fc5e5334020" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fc5e5331980" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc5e5331380" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fc5e53316f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fc5e5334d90" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fc5e62ac110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc5e5334b10" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fc5e5332880" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc5e5332600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fc5e5336350" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc5e53360d0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fc5e5333990" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc5e5333710" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fc5e533e9c0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
              <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e533e060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fc5e533e3b0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e533e6e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e53c6350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e53c6350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fc5e53be1f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc5e53c3a60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fc5e53c1820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fc5e53c1250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fc5e53c1590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fc5e53c2a60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fc5e53bd270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fc5e53be980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fc5e53c2270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fc5e53c5020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc5e53c6c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fc5e53c0820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fc5e53c0250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fc5e53c0590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fc5e53c5ae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc5e53c5860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc5e53c3350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fc5e534d2a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fc5e5374180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc5e534d020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fc5e5357d60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc5e5357ae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fc5e535a1f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fc5e535acb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc5e535aa30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fc5e53547a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc5e53541c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fc5e5354510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fc5e53552b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc5e5358c40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fc5e5355020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fc5e5351bf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc5e5351970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fc5e5353020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc5e534f9a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fc5e534fcc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fc5e5376d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fc5e53529f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc5e5352770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fc5e534c730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fc5e5374180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc5e534c150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fc5e534c4a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fc5e5374180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fc5e534b580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fc5e5374180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e52e66d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e52e66d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fc5e52e3020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e52de070" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e52de070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc5e52de2b0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e52de2b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fc5e52dae00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e52de2b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc5e52dce40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fc5e52da460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e52de2b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e52de2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fc5e52dbe60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e52de2b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fc5e52da1d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e52de2b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fc5e52db640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fc5e52d9620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e52de2b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fc5e52dee10" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e52de2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc5e52deb90" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e52de2b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc5e52dc680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fc5e52b8270" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fc5e52b8bf0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fc5e52b8970" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fc5e52b6610" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fc5e52b6390" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fc5e52b5020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fc5e52b6d60" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc5e52b5710" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fc5e52c6ad0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fc5e52c3400" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fc5e52c3180" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fc5e52c5270" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc5e52cbd30" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fc5e52c59b0" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fc5e52c8c50" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fc5e52c63e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fc5e52c8510" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fc5e52c7390" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fc5e52c7ca0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fc5e52c7a20" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fc5e52c3e10" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fc5e52c3b90" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fc5e52bc8f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fc5e52bc320" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7fc5e52bc660" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fc5e52c07d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc5e5701550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fc5e56ff020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fc5e52bb2b0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fc5e52ba1f0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fc5e52bda30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fc5e52bb9f0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fc5e52bf020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fc5e52bf7b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fc5e52bd2a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc5e5701550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fc5e56ff020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fc5e52bd020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc5e5701550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fc5e56ff020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fc5e52a6d60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fc5e52a1400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fc5e52a1180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fc5e529f020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fc5e52a1d10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fc5e52a29a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fc5e52a20e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fc5e52a3740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fc5e52a34c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fc5e52761f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e5126e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e5126e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc5e5121070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e5121070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fc5e5121990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e5121070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fc5e5120ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fc5e5120270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fc5e511f270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7fc5e505de80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fc5e62ac930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7fc5e505dc00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fc5e62ac930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fc5e4fa6980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4fa6700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fc5e4fa8c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4fa89b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fc5e4faa350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fc5e4faa0d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fc5e4fac800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fc5e4fac580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fc5e4faad80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fc5e4faab00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fc5e4fa7b10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4fa7890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fc5e4f942b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fc5e4fa4c50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fc5e4f94020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fc5e4fa1680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4fa1060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fc5e4fa13f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fc5e4f9f850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f9f5d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fc5e4fa2810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fc5e4faee10" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fc5e4faeb90" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fc5e4fb22e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4fb2060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fc5e4fb1510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4fb1290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fc5e4fb0680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4fb0400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fc5e4f98b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f988b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fc5e4f9db90" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f9d570" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fc5e4f9d900" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fc5e4f9cad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f9c850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fc5e4f9c020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f9b960" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fc5e4f9bcf0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fc5e4f96b70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f968f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fc5e4fad780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4fad500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc5e4f872b0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f8ec40" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e4f87020" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fc5e4f83890" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f83290" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e4f835c0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fc5e4f829b0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fc5e4f865f0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f86370" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc5e4f85ac0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f854e0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fc5e4f85830" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fc5e4f8b120" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fc5e4f8c120" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fc5e4f8d770" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fc5e4f8c910" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fc5e4f8bb70" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc5e4f613a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc5e4f65dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fc5e4f61110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fc5e4f5f6a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fc5e4f5de70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fc5e4f5d060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fc5e4f5d8a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e4f5dbd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc5e4f5e840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc5e4f5e260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fc5e4f5e5b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fc5e4f61e30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fc5e4f61bb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fc5e4f580e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fc5e4f5b870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fc5e4f6ba40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc5e4f63270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fc5e4f532e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f53020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fc5e4f54710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7fc5e53b0410"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fc5e53aed70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f54410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fc5e4f51620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7fc5e53ad860"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fc5e53ab180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4f51320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fc5e4f696e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fc5e4f66840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fc5e4f66070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fc5e4f6de20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fc5e4f6ae80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fc5e4f68020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fc5e4f68840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fc5e4f6a6c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fc5e4f4cd00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fc5e4f4e350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fc5e4f4c530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fc5e4f4c2b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fc5e4f4eac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fc5e4f4f020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fc5e4f56c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fc5e4f4fad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fc5e4f4f850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fc5e4ef1870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fc5e4ef1290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fc5e4ef15e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fc5e4ef21f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fc5e4ef3880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fc5e4ef3210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fc5e4ef35f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fc5e4efac10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc5e4efa990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fc5e4ef2a70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fc5e4ef6730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fc5e4ef64b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fc5e4ef8d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fc5e4ef8ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fc5e4ef0ae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fc5e4ef59c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fc5e4ef5740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fc5e4ef02b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fc5e4ef74d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fc5e4fcaac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fc5e4fc7240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fc5e4ef7cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fc5e4efa1f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fc5e4ef8390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fc5e4ef5020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fc5e4eed4a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc5e4eed4a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fc5e4eedd60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fc5e4eeaac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc5e4eed4a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fc5e4eea510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7fc5e4eea830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc5e4eed4a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fc5e4ec7520" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc5e53b4600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4ec72a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc5e4ec5030" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc5e53b4600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4ec7d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fc5e4ee0c50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fc5e4fcaac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fc5e4fc7240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fc5e4ecf0e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fc5e4ece070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fc5e4ecf8c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fc5e5374180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fc5e4ed0860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fc5e5374180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fc5e4ed0280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fc5e5374180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fc5e4ed05d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc5e5374560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fc5e4ebf120" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc5e53b4600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fc5e4ecb840" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc5e53b4600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fc5e4ed59b0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc5e4ecb250" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc5e4ecb5a0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc5e4ec9020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc5e53b4600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fc5e4eca150" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc5e4eca9c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc5e4ecad10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fc5e4ed27e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fc5e4ed2020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fc5e4ed4720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fc5e4ed7db0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fc5e4dac190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fc5e4dab350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fc5e4dacb30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fc5e4dac8b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fc5e4daf8f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fc5e4d83800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc5e4d7f270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fc5e4d83070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fc5e4d809a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fc5e4d80720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7fc5e4d80020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fc5e4d86870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7fc5e4d82810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fc5e4d82030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fc5e4c2d810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fc5e4c2c0e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fc5e4c2c920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fc5e4c05420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4c06e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc5e4c05190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fc5e4c00700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4c01d90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc5e4c00110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fc5e4c00460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc5e4c01020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc5e53b4600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4c02970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc5e4c02cc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fc5e4c06020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc5e53b4600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4c079d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc5e4c07d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fc5e4c04b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4c04250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc5e4c045a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fc5e4c048f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc5e4be6a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fc5e4be60d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fc5e4be6460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e4be67a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc5e4be2020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fc5e4be42a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fc5e4be4630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e4be4970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fc5e4be4ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
              <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fc5e4be88f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fc5e4be8670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fc5e4b07b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fc5e4b044e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fc5e4b03aa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fc5e4b392b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fc5e4b3ae00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fc5e4b026f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4b02470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fc5e4b01b30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4b018b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fc5e4b01020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc5e4b005f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4b00370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fc5e4af4020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fc5e4af6750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fc5e4aed740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4aed4c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fc5e4af1cd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fc5e4ac9390" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fc5e4ad41f0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fc5e4ae1020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc5e4b55020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fc5e4b55860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fc5e4ae4cf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc5e4b55020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fc5e4b55860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fc5e4ad7350" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fc5e4ade530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc5e4b50020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fc5e4b50860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fc5e4ade2b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc5e4b50020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fc5e4b50860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fc5e4ace750" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fc5e4acbcf0" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fc5e4ae0a90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc5e4b54ec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fc5e4b53680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fc5e4aded20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc5e4b50020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fc5e4b50860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fc5e4adbb90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fc5e4adb910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fc5e4adb1f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fc5e4ace020" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fc5e4ae02a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc5e4b54ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fc5e4b53680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fc5e4ae0020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc5e4b54ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fc5e4b53680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fc5e4adc020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fc5e4acee80" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fc5e4adca00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fc5e4adc780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fc5e4ad8420" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fc5e4ad8ba0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fc5e4acf190" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fc5e4ad20e0" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fc5e4ad6270" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fc5e4acf8d0" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fc5e4ad49d0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fc5e4acd5c0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fc5e4ad9390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fc5e4b5bd80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fc5e4b574d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fc5e4acdd60" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fc5e4acabd0" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fc5e4add700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fc5e4add480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fc5e4ac9d30" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4ac9ab0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fc5e4ae1800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc5e4b55020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fc5e4b55860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fc5e4ad7ac0" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fc5e4ad3190" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fc5e4ad0940" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fc5e4b25b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fc5e4b25730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fc5e4ad06c0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fc5e4b25b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fc5e4b25730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fc5e4ad2bf0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fc5e4b392b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fc5e4b3ae00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fc5e4ad2970" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fc5e4b392b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fc5e4b3ae00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fc5e4ac7590" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fc5e4acb570" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fc5e4ad9b40" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fc5e4aca480" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fc5e4ad3900" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fc5e4ad6a50" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fc5e4a62600" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fc5e4a3a070" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fc5e4a4d780" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fc5e4a42d50" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fc5e4a42ad0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fc5e4a56cb0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fc5e4a3e350" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fc5e4a47cf0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fc5e4a4e770" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fc5e4a4c770" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fc5e4a50600" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fc5e4a50380" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fc5e4a52b00" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fc5e4a49790" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fc5e4a40c80" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fc5e4a3b8f0" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fc5e4a42390" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fc5e4a36b60" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fc5e4a31270" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fc5e4a55b30" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fc5e4a49020" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fc5e4a48910" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fc5e4a4e020" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fc5e4a579a0" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fc5e4a43ba0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fc5e4a43920" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fc5e4a57270" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fc5e4a3fb80" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fc5e4a3a7d0" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fc5e4a34350" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fc5e4a33a90" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fc5e4a3d270" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fc5e4a39020" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fc5e4a40520" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fc5e4a37bb0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fc5e4a53270" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fc5e4a44020" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fc5e4a37020" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fc5e4a3b190" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fc5e4a47520" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fc5e4a472a0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fc5e4a34af0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fc5e4a431f0" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fc5e4a3eac0" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fc5e4a56550" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fc5e4b114a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fc5e4b11080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fc5e4a562d0" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fc5e4b114a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fc5e4b11080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fc5e4a4a770" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fc5e4a52390" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fc5e4a52110" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fc5e4a48120" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc5e4a49e70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fc5e4a363b0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fc5e4a51c40" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fc5e4a539e0" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fc5e4a449e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fc5e4a44760" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc5e62ab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fc5e4a55420" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fc5e4a39740" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fc5e4a3d9e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fc5e4a3f420" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fc5e4a45740" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fc5e4a454c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fc5e4a4a020" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fc5e4a4d020" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fc5e4a332b0" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fc5e4a514b0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fc5e4a51230" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fc5e4a35350" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fc5e4a4c020" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fc5e4a35b10" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fc5e4992780" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fc5e4991020" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fc5e49578b0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fc5e49569c0" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fc5e4957020" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fc5e4956190" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fc5e4955350" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7fc5e4952460" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fc5e494ade0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc5e4954d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc5e494ab60" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc5e4954d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fc5e494ee00" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fc5e494b960" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc5e4954d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc5e494b6e0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc5e4954d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fc5e494a2b0" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fc5e4954d90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fc5e473f5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc5e473f360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fc5e472bb00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fc5e472b1c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fc5e472b530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e472b860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc5e472a880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fc5e472a2c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc5e472a5f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e4712530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e4712530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc5e4712770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e4712770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fc5e47102e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e4712770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc5e4710060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e4712770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fc5e46ae580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fc5e469aaf0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc5e469aaf0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc5e469ad30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e469ad30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fc5e4694bc0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e469ad30"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4694940" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fc5e4693d80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4693b00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fc5e4697920" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e46976a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc5e46950c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e469ad30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4692a80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fc5e4692de0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc5e469ad30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fc5e46759e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fc5e4675020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fc5e4675750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fc5e46767f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fc5e4676020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fc5e467ad30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc5e62ab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fc5e468b5f0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc5e62ab160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e468b370" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fc5e468c5f0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e468c370" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fc5e46885f0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4688370" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc5e46895f0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc5e4689370" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc5e5365350"/>
                <typename><typedef-ref name="message_t" ref="0x7fc5e53649a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fc5e44635e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fc5e44635e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fc5e44602a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fc5e5bfe020"/>
            <typename><typedef-ref name="error_t" ref="0x7fc5e5bf61b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fc5e44635e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fc5e4460020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fc5e44635e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7fc5e427b1f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc5e5c04090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
